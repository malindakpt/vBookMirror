{"version":3,"sources":["components/presentational/ListItems/ListItems.module.scss","components/container/teacher/Teacher.module.scss","components/container/manageCourse/ManageCourse.module.scss","components/presentational/category/Category.tsx","hooks/useBreadcrumb.ts","data/Config.ts","data/Store.ts","data/StoreHelper.ts","components/container/contents/Course.tsx","components/presentational/breadcrumbs/BreadcrumbBar.tsx","components/presentational/ListItems/ListItemsComponent.tsx","hooks/useForcedUpdate.ts","components/router/Router.tsx","components/container/teacher/Teacher.tsx","components/container/contents/lesson/Lesson.tsx","components/container/contents/Courses.tsx","components/container/contents/Subjects.tsx","components/container/contents/Years.tsx","components/container/contents/Exams.tsx","components/container/manageCourse/addLesson/AddLesson.tsx","components/container/subscriptions/Subscriptions.tsx","components/container/manageCourse/upgradeCourse/UpgradeCourse.tsx","components/container/manageCourse/editExam/EditExam.tsx","components/container/manageCourse/addExam/AddExam.tsx","components/container/manageCourse/addTeacher/AddTeacher.tsx","components/container/manageCourse/addSubject/AddSubject.tsx","components/container/manageCourse/addCourse/AddCourse.tsx","components/container/payments/Payments.tsx","components/presentational/navPanel/NavPanel.tsx","components/container/header/Header.tsx","components/presentational/snackbar/Snack.tsx","App.tsx","serviceWorker.ts","index.tsx","components/container/manageCourse/addLesson/AddLesson.module.scss","components/presentational/category/Category.module.scss","components/container/contents/lesson/Lesson.module.scss","components/container/header/Header.module.scss","components/container/contents/Subjects.module.scss","components/router/Router.module.scss"],"names":["module","exports","Category","id","title1","title2","navURL","onSelect","status","CategoryImg","useState","selected","setSelected","className","classes","root","to","style","textDecoration","color","onClick","image","htmlColor","fontSize","content","iconTitle","actions","keyMap","updateKeyMap","objs","forEach","obj","useBreadcrumb","useParams","examId","year","subjectId","courseId","teacherId","updateBreadcrumbs","useContext","AppContext","breadcrumbs","setBreadcrumbs","sendBreadcrumbs","useCallback","bcs","length","useEffect","text","name","type","push","firebaseConfigDev","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","examYears","app","firebase","initializeApp","firebaseConfig","db","firestore","storage","store","console","log","clearStore","entityName","Object","keys","key","startsWith","getVideo","email","vId","Promise","resolve","ref","child","getDownloadURL","then","data","addDoc","collection","add","docRef","catch","err","addDocWithId","doc","set","updateDoc","update","generateRequestKey","conditions","JSON","stringify","getDocsWithProps","resolves","cachedResponse","query","includes","where","substring","charAt","limit","Array","isArray","results","get","querySnapshot","v","error","undefined","getDocWithId","exists","getObject","subjects","filtered","filter","subject","Course","selectedLessons","setSelectedLessons","user","setUser","total","setTotal","showSnackbar","lessons","setLessons","all","result","users","course","lessons4Course","lesId","les","find","l","less","handleSelectLesson","next","price","pay","a","entries","newUser","Button","variant","map","lesson","idx","OndemandVideoIcon","topic","description","BreadcrumbBar","Breadcrumbs","aria-label","margin","bc","ListItems","list","List","component","item","ListItem","button","values","val","Divider","useForcedUpdate","onUpdate","setCount","prev","commonRoutes","courses","setCourses","setSubjects","exams","setExams","teacher","setTeacher","c","subj","examTime","examYear","exam","CategoryIcon","lessonId","setLesson","vidSrc","setVidSrc","processVideo","videoId","url","width","height","controls","controlsList","src","number","phoneChat","message","desc","attachments","atta","href","rel","target","teachers","setTeachers","ListAltIcon","fetchData","sub","subjectIds","Card","card","CardActionArea","CardContent","Typography","gutterBottom","yr","ScheduleIcon","idMap","ex","SchoolIcon","teacherRoutes","uploadTask","setUploadTask","uploadProgress","setUploadProgress","uploadFile","setUploadFile","isAddNewVideo","setIsAddNewVideo","searchText","setSearchText","editMode","setEditMode","courseOrderChanged","setCourseOrderChaged","allLessons","useRef","setCourseId","courseLessons","setCourseLessons","remainingLessons","setRemainingLessons","editingLesson","setEditingLesson","displayBacklog","setDisplayBacklog","setTopic","setAttachments","setDescription","keywords","setKeywords","setVideoId","setPrice","onCourseChange","selectedCourse","lessons4CourseMap","current","orderedLessons","t","sort","b","date","addNew","disabled","onSave","Date","getTime","copyLesson","changeOrder","index","isUp","clone","nextIdx","item1","item2","noValidate","autoComplete","FormControl","input","InputLabel","Select","labelId","value","onChange","e","MenuItem","RadioGroup","twoColumn","FormControlLabel","control","Radio","label","TextField","backlog","onFocus","search","toLocaleLowerCase","toLowerCase","toDateString","IconButton","video","file","files","Math","round","size","cancel","inputMulti","multiline","rows","reduce","split","Number","out","Subject","put","on","snapshot","progress","bytesTransferred","totalBytes","state","TaskState","PAUSED","RUNNING","downloadURL","uploadVideo","subscribe","unsubscribe","saveOrder","ListItemText","primary","stopPropagation","subCount","setSubCount","setSubs","totalSub","totalAmount","count","streams","setStreams","stream","crsForYr","findIndex","courseString","newCourse","createCourse","adminRoutes","selectedExamIdx","setSelectedExamIdx","setSubjectIds","subjIds","onSubjectChange","checked","subjecList","splice","Checkbox","setExam","setExamProps","updateUI","setTeacherProps","phone","setSubject","setTeacherId","setSubjectId","setExamId","Router","isTeacher","isAdmin","container","r","exact","path","loading","commonLinks","teacherLinks","adminLinks","useStyles","makeStyles","fullList","NavPanel","React","show","setShow","toggleDrawer","open","event","linkSegment","links","ListItemIcon","Drawer","anchor","onClose","clsx","role","onKeyDown","Header","setEmail","setIsTeacher","setUserDetails","displayName","photo","photoURL","auth","onAuthStateChanged","u","AppBar","position","Toolbar","title","provider","GoogleAuthProvider","signInWithPopup","userName","alt","signOut","Snack","handleClose","vertical","horizontal","Snackbar","anchorOrigin","createContext","bcrumbs","App","snackText","setSnackText","setState","Provider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,KAAO,0B,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,wB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,4BAA4B,UAAY,gCAAgC,UAAY,gCAAgC,OAAS,+B,mfCiB5KC,EAA2B,SAAC,GAElC,IADLC,EACI,EADJA,GACI,IADAC,cACA,MADS,GACT,MADaC,cACb,MADsB,GACtB,EAD0BC,EAC1B,EAD0BA,OAAQC,EAClC,EADkCA,SAAUC,EAC5C,EAD4CA,OAAQC,EACpD,EADoDA,YACpD,EAC4BC,oBAAS,GADrC,mBACGC,EADH,KACaC,EADb,KAQJ,OACE,kBAAC,IAAD,CACEC,UAAS,UAAKC,IAAQC,KAAb,YAAqBJ,GAAYG,IAAQH,UAClDK,GAAIV,EACJW,MAAO,CAAEC,eAAgB,OAAQC,MAAO,WACxCC,QAXgB,WACdjB,GAAMI,IACRK,GAAaD,GACbJ,EAASJ,GAAKQ,MAUd,yBAAKE,UAAWC,IAAQO,OACtB,kBAACZ,EAAD,CACEa,UAAU,UACVL,MAAO,CAAEM,SAAU,OAGvB,yBAAKV,UAAWC,IAAQU,SACtB,yBAAKX,UAAWC,IAAQV,QAASA,GACjC,yBAAKS,UAAWC,IAAQW,WACV,QAAXjB,GAAoB,kBAAC,IAAD,CAAwBc,UAAU,YAC3C,OAAXd,GAAmB,kBAAC,IAAD,CAAsBc,UAAU,QACxC,SAAXd,GAAqB,kBAAC,IAAD,CAAwBc,UAAU,YACvDjB,IAGL,yBAAKQ,UAAWC,IAAQY,SACtB,kBAAC,IAAD,CACEJ,UAAU,UACVL,MAAO,CAAEM,SAAU,SC/CvBI,EAAc,GAEdC,EAAe,SAACC,GACfA,GAELA,EAAKC,SAAQ,SAACC,GACZJ,EAAOI,EAAI5B,IAAM4B,MAIRC,EAAgB,WAAO,IAAD,EAG7BC,cADFC,EAF+B,EAE/BA,OAAQC,EAFuB,EAEvBA,KAAMC,EAFiB,EAEjBA,UAAWC,EAFM,EAENA,SAAUC,EAFJ,EAEIA,UAE7BC,EAAsBC,qBAAWC,IAAjCF,kBAJyB,EAMK7B,mBAAc,IANnB,mBAM1BgC,EAN0B,KAMbC,EANa,KAQ3BC,EAAkBC,uBAAY,SAACC,GAC/BA,EAAIC,SAAWL,EAAYK,SAG/BR,EAAkBO,GAClBH,EAAeG,MAEd,IA+BH,OA7BAE,qBAAU,WACR,IAAMF,EAAM,CACV,CAAC,QAAS,MAGZ,IAAKR,EAAW,CACd,GAAIJ,EAAQ,CACV,IAAMe,EAAOtB,EAAOO,GAAP,UAAoBP,EAAOO,GAAQgB,KAAnC,YAA2CvB,EAAOO,GAAQiB,MAAS,YAChFL,EAAIM,KAAK,CAACH,EAAD,WAAWf,KAEtB,GAAIC,EAAM,CACR,IAAMc,EAAOtB,EAAOQ,GAAP,UAAkBR,EAAOQ,GAAMe,MAAS,WACrDJ,EAAIM,KAAK,CAACH,EAAD,WAAWf,EAAX,YAAqBC,KAEhC,GAAIC,EAAW,CACb,IAAMa,EAAOtB,EAAOS,GAAP,UAAuBT,EAAOS,GAAWc,MAAS,UAC/DJ,EAAIM,KAAK,CAACH,EAAD,WAAWf,EAAX,YAAqBC,EAArB,YAA6BC,KAExC,GAAIC,EAAU,CACZ,IAAMY,EAAOtB,EAAOU,IAAaV,EAAOA,EAAOU,GAAUC,WAA5C,UACNX,EAAOA,EAAOU,GAAUC,WAAWY,MAAS,UACnDJ,EAAIM,KAAK,CAACH,EAAD,WACHf,EADG,YACOC,EADP,YACeC,EADf,YAC4BC,MAGzCO,EAAgBE,KAElB,CAACZ,EAAQE,EAAWC,EAAUO,EAAiBT,EAAMG,IAE9CV,G,yBCxCMyB,EAtBW,CACxBC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBAiBJC,EAAY,CACvB,CAAE3D,GAAI,OAAQ+C,KAAM,QACpB,CAAE/C,GAAI,OAAQ+C,KAAM,QACpB,CAAE/C,GAAI,OAAQ+C,KAAM,SChBhBa,GAAMC,IAASC,cAAcC,GAC7BC,GAAKH,IAASI,UAAUL,IACxBM,GAAUL,IAASK,QAAQN,IAC3BO,GAA8B,GACpCC,QAAQC,IAAI,wBAEZ,IAAMC,GAAa,SAACC,GAClB,cAAkBC,OAAOC,KAAKN,IAA9B,eAAsC,CAAjC,IAAMO,EAAG,KACRA,EAAIC,WAAWJ,KACjBJ,GAAMO,GAAO,QAONE,GAAW,SAACC,EAAeC,GAAhB,OAAiD,IAAIC,SAAQ,SAACC,GACpFd,GAAQe,MAAMC,MAAM,SAASA,MAAML,GAAOK,MAAMJ,GAC7CK,iBACAC,MAAK,SAACC,GAAD,OAAUL,EAAQK,UA+DfC,GAAS,SAACf,EAAoB3C,GAArB,OAAkC,IAAImD,SAAgB,SAACC,UACpEpD,EAAI5B,GAEXgE,GAAGuB,WAAWhB,GAAYiB,IAAI5D,GAAKwD,MAAK,SAACK,GACvCrB,QAAQC,IAAIoB,EAAOzF,IACnBsE,GAAWC,GACXS,EAAQS,EAAOzF,OACd0F,OAAM,SAACC,GACRvB,QAAQC,IAAIsB,GACZX,EAAQW,UAeCC,GAAe,SAACrB,EAAoBvE,EAAY4B,GAAjC,OAA8C,IAAImD,SAAQ,SAACC,GACrFhB,GAAGuB,WAAWhB,GAAYsB,IAAI7F,GAAI8F,IAAIlE,GAAKwD,MAAK,SAACC,GAC/Cf,GAAWC,GACXS,GAAQ,MAEPU,OAAM,SAACC,GACNvB,QAAQC,IAAIsB,GACZX,GAAQ,UAIDe,GAAY,SAACxB,EAAoBvE,EAAY4B,GAAjC,OAA8C,IAAImD,SAAQ,SAACC,GAClFhB,GAAGuB,WAAWhB,GAAYsB,IAAI7F,GAAIgG,OAAOpE,GAAKwD,MAAK,SAACC,GAClDf,GAAWC,GACXS,GAAQ,MAEPU,OAAM,SAACC,GACNvB,QAAQC,IAAIsB,GACZX,GAAQ,UAIRiB,GAAqB,SACzB1B,EAAoB2B,GADK,gBAEnB3B,EAFmB,YAEL4B,KAAKC,UAAUF,GAFV,MAIdG,GAAmB,SAC9B9B,EACA2B,GAF8B,OAGf,IAAInB,SAAQ,SAACuB,GAAc,IAAD,EACjCC,EAAiBpC,GAAM8B,GAAmB1B,EAAY2B,IAC5D,GAAIK,EAEFD,EAASC,OAFX,CAMA,IACIC,EADEvB,EAAMjB,GAAGuB,WAAWhB,GAG1BC,OAAOC,KAAKyB,GAAYvE,SAAQ,SAAC+C,GAE5B,IAAD,EADF,GAAKA,EAAI+B,SAAS,MAAQ/B,EAAI+B,SAAS,KAErCD,GAAQ,UAACA,SAAD,QAAUvB,GAAKyB,MACrBhC,EAAIiC,UAAU,EAAGjC,EAAI9B,OAAS,GAC9B8B,EAAIkC,OAAOlC,EAAI9B,OAAS,GACxBsD,EAAWxB,SAER,GAAY,UAARA,EAAiB,CAAC,IAAD,EAC1B8B,GAAQ,UAACA,SAAD,QAAUvB,GAAK4B,MAAMX,EAAWxB,SACnC,GAAIoC,MAAMC,QAAQb,EAAWxB,IAAO,CAAC,IAAD,EACzC8B,GAAQ,UAACA,SAAD,QAAUvB,GAAKyB,MAAMhC,EAAK,iBAAkBwB,EAAWxB,GAAK,QAC/D,CAAC,IAAD,EACL8B,GAAQ,UAACA,SAAD,QAAUvB,GAAKyB,MAAMhC,EAAK,KAAMwB,EAAWxB,QAIvD,IAAMsC,EAAe,IACrB,UAACR,SAAD,QAAUvB,GACPgC,MACA7B,MAAK,SAAC8B,GACLA,EAAcvF,SAAQ,SAACkE,GACrB,IAAMsB,EAAItB,EAAIR,OACd8B,EAAEnH,GAAK6F,EAAI7F,GACXgH,EAAQ/D,KAAKkE,MAGfhD,GAAM8B,GAAmB1B,EAAY2B,IAAec,EACpDV,EAASU,MAEVtB,OAAM,SAAC0B,GACNhD,QAAQgD,MAAMA,GACdd,OAASe,WAIJC,GAAe,SAAI/C,EAAoBvE,GAAxB,OAA0D,IAAI+E,SACxF,SAACuB,GACCtC,GAAGuB,WAAWhB,GAAYsB,IAAI7F,GAAIiH,MAAM7B,MAAK,SAACS,GACxCA,EAAI0B,OACNjB,EAAST,EAAIR,SAGbiB,EAAS,MACTlC,QAAQC,IAAI,2C,uHC1MPmD,GAAY,SAAIC,EAAgCxF,GAC3D,IAAMyF,EAAWD,EAASE,QAAO,SAACC,GAAD,OAAaA,EAAQ5H,KAAOiC,KAC7D,OAAOyF,EAAS9E,OAAS,EAAI8E,EAAS,GAAK,M,8BCYhCG,GAAmB,WAC9BhG,IADoC,MAGUtB,mBAAmC,IAH7C,mBAG7BuH,EAH6B,KAGZC,EAHY,OAIZxH,qBAJY,mBAI7ByH,EAJ6B,KAIvBC,EAJuB,OAKV1H,mBAAS,GALC,mBAK7B2H,EAL6B,KAKtBC,EALsB,OAMJ9F,qBAAWC,IAAnCuC,EAN4B,EAM5BA,MAAOuD,EANqB,EAMrBA,aAEPlG,EAAaJ,cAAbI,SAR4B,EASN3B,mBAAoB,IATd,mBAS7B8H,EAT6B,KASpBC,EAToB,KAWpCzF,qBAAU,WACRkC,QAAQwD,IAAI,CACVlC,GAA0B,QAAS,CAAExB,UACrCwB,GAA4B,UAAW,IACvCiB,GAAsB,UAAWpF,KAChCkD,MAAK,SAACoD,GAAY,IAAD,cACeA,EADf,GACXC,EADW,KACJJ,EADI,KACKK,EADL,KAGlB,GAAID,GAASJ,GAAWK,EAAQ,CAC9B,IAAMC,EAA4B,GAC5B,OAAND,QAAM,IAANA,KAAQL,QAAQ1G,SAAQ,SAACiH,GACvB,IAAMC,EAAMR,EAAQS,MAAK,SAACC,GAAD,OAAOA,EAAE/I,KAAO4I,KACrCC,EACFF,EAAe1F,KAAK4F,GAEpBzE,QAAQgD,MAAM,mBAAoBwB,MAG/B,OAAPP,QAAO,IAAPA,KAASV,QAAO,SAACqB,GAAD,cAAUN,QAAV,IAAUA,OAAV,EAAUA,EAAQL,QAAQ5B,SAASuC,EAAKhJ,OACxDiI,EAAQQ,EAAM,IACdH,EAAWK,SAId,CAAC9D,EAAOiD,IAEX,IAAMmB,EAAqB,SAACjJ,EAAYQ,GACtC,IAAI0H,EAAQ,EACNgB,EAAS,eAAQpB,GACvBoB,EAAKlJ,GAAMQ,EAHiD,qBAK1C6H,GAL0C,IAK5D,2BAA2B,CAAC,IAAjBQ,EAAgB,QACrBK,EAAKL,EAAI7I,KAAO6I,EAAIM,QACtBjB,GAASW,EAAIM,QAP2C,8BAW5DpB,EAAmBmB,GACnBf,EAASD,IAGLkB,EAAG,yCAAG,6CAAAC,EAAA,yDACLxE,EADK,iDAIV,GAAImD,EAAM,CACR,UAAgCxD,OAAO8E,QAAQxB,GAA/C,eAAkE,EAAD,oBAArDe,EAAqD,WAE7Db,EAAKK,QAAQpF,KAAK4F,GAGtB9C,GAAU,QAASiC,EAAKhI,GAAIgI,GAAM5C,MAAK,WACrCgD,EAAa,yBACbL,EAAmB,IACnBI,EAAS,UAEN,CAML,IALMoB,EAAiB,CACrBvJ,GAAI,GACJ6E,QACAwD,QAAS,IAEX,MAAgC7D,OAAO8E,QAAQxB,GAA/C,eAAkE,EAAD,oBAArDe,EAAqD,WAE7DU,EAAQlB,QAAQpF,KAAK4F,GAGzBvD,GAAO,QAASiE,GAASnE,MAAK,WAC5BgD,EAAa,yBACbL,EAAmB,IACnBI,EAAS,MA7BH,2CAAH,qDAkCT,OACE,yBAAKzH,UAAU,aACZwH,EAAQ,GACT,6BACE,8BACA,6BACE,4CACWA,EADX,QAGA,kBAACsB,EAAA,EAAD,CACEC,QAAQ,YACRxI,QAASmI,EACTpI,MAAM,aAHR,cARN,OAmBIqH,QAnBJ,IAmBIA,OAnBJ,EAmBIA,EAASqB,KAAI,SAACC,EAAQC,GACpB,IAAIvJ,EAWJ,OARIA,EAFAsJ,EAAOR,OACT,OAAInB,QAAJ,IAAIA,OAAJ,EAAIA,EAAMK,QAAQ5B,SAASkD,EAAO3J,KACvB,MAEA,KAGF,OAIT,kBAAC,EAAD,CACEA,GAAI2J,EAAO3J,GACX0E,IAAKkF,EACLtJ,YAAauJ,KACb5J,OAAM,UAAK0J,EAAOG,OAClB5J,OAAM,UAAKyJ,EAAOI,aAClB5J,QAASwJ,EAAOR,QAAR,OACHnB,QADG,IACHA,OADG,EACHA,EAAMK,QAAQ5B,SAASkD,EAAO3J,KAD3B,UACoCkC,EADpC,YACgDyH,EAAO3J,IADvD,UACiEkC,GACzE9B,SAAU6I,EACV5I,OAAQA,S,UCzIT2J,GAAgB,WAAO,IAC1BzH,EAAgBF,qBAAWC,IAA3BC,YAER,OACE,kBAAC0H,GAAA,EAAD,CACEC,aAAW,aACXpJ,MAAO,CAAEqJ,OAAQ,cAFnB,OAIG5H,QAJH,IAIGA,OAJH,EAIGA,EAAamH,KAAI,SAACU,GAAD,OAChB,kBAAC,IAAD,CACEtJ,MAAO,CAAEC,eAAgB,OAAQC,MAAO,QACxC0D,IAAK0F,EAAG,GACRpJ,MAAM,UACNH,GAAIuJ,EAAG,IAENA,EAAG,S,oPCXDC,GAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,yBAAK5J,UAAWC,KAAQC,MACtB,kBAAC2J,EAAA,EAAD,CACEC,UAAU,MACVN,aAAW,mBAEVI,EAAKZ,KAAI,SAACe,GAAD,OACR,yBAAK/F,IAAK+F,EAAKzK,IACb,kBAAC0K,EAAA,EAAD,CACEC,QAAM,GAELnG,OAAOoG,OAAOH,GAAMf,KAAI,SAACmB,GAAD,OAAe,0BAAMnG,IAAKmG,GAAX,UAAoBA,QAE9D,kBAACC,EAAA,EAAD,aCpBGC,GAAkB,WAAO,IAAD,EACNxK,mBAAS,GADH,mBAC5ByK,EAD4B,KAClBC,EADkB,KAQnC,MADoC,CAACD,EAJpB,WACfC,GAAS,SAACC,GAAD,OAAUA,EAAO,Q,6FCqBjBC,GAA4B,CACvC,CAAC,sBCdoB,WACrBtJ,IAD2B,IAEnBM,EAAcL,cAAdK,UAFmB,EAGG5B,mBAAoB,IAHvB,mBAGpB6K,EAHoB,KAGXC,EAHW,OAIK9K,mBAAqB,IAJ1B,mBAIpBkH,EAJoB,KAIV6D,EAJU,OAKD/K,mBAAkB,IALjB,mBAKpBgL,EALoB,KAKbC,EALa,OAMGjL,wBAA8B8G,GANjC,mBAMpBoE,EANoB,KAMXC,EANW,KAe3B,OAPA7I,qBAAU,WACRwD,GAA4B,UAAW,CAAElE,cAAaiD,MAAK,SAACC,GAAD,OAAUgG,EAAWhG,MAChFgB,GAA6B,WAAY,IAAIjB,MAAK,SAACC,GAAD,OAAUiG,EAAYjG,MACxEgB,GAA0B,QAAS,IAAIjB,MAAK,SAACC,GAAD,OAAUmG,EAASnG,MAC/DiC,GAAuB,WAAYnF,GAAWiD,MAAK,SAACC,GAAD,OAAUA,GAAQqG,EAAWrG,QAC/E,CAAClD,IAGF,yBAAKzB,UAAU,aACb,yBAAKA,UAAWC,KAAQoC,MAAxB,iCAEO0I,QAFP,IAEOA,OAFP,EAEOA,EAAS1I,OAGNqI,EAAQ1B,KAAI,SAACiC,GACX,IAAMC,EAAOpE,GAAUC,EAAUkE,EAAE1J,WAC7B4J,EAAWrE,GAAU7D,EAAWgI,EAAEG,UAClCC,EAAOvE,GAAU+D,EAAOI,EAAE5J,QAChC,OACE,kBAAC,EAAD,CACE2C,IAAKiH,EAAE3L,GACPC,OAAM,iBAAK2L,QAAL,IAAKA,OAAL,EAAKA,EAAM7I,KAAX,mBAAmBgJ,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAM/I,MAC/B9C,OAAM,iBAAK2L,QAAL,IAAKA,OAAL,EAAKA,EAAU9I,KAAf,mBAAuBgJ,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAMhJ,MACnC5C,OAAM,UAAKgC,EAAL,YAAkBwJ,EAAE3L,IAC1BM,YAAa0L,YDlBA,WAAW,GAC5C,CAAC,gCAAiCnE,GAAQ,WAAW,GACrD,CAAC,gDEpB6B,WAAO,IAAD,EACpChG,IADoC,IAE5BoK,EAAanK,cAAbmK,SAF4B,EAGN1L,mBAA0B,MAHpB,mBAG7BkL,EAH6B,KAGpBC,EAHoB,OAIRnL,qBAJQ,mBAI7BoJ,EAJ6B,KAIrBuC,EAJqB,OAKR3L,mBAAwB,MALhB,mBAK7B4L,EAL6B,KAKrBC,EALqB,KAO9BC,EAAY,yCAAG,+BAAAhD,EAAA,sEACE/B,GAAsB,UAAW2E,GADnC,YACbtC,EADa,gCAIjBtD,GAA6B,WAAY,CAAExB,MAAO8E,EAAO9E,QACtDO,MAAK,SAACC,GAAD,OAAUA,GAAQqG,EAAWrG,EAAK,OALzB,SAMCT,GAAS+E,EAAO9E,MAAO8E,EAAO2C,SAN/B,OAMXC,EANW,OAOjBL,EAAUvC,GACVyC,EAAUG,GARO,4CAAH,qDAiBlB,OALA1J,qBAAU,WACRwJ,MAEC,IAGD,yBAAK3L,UAAWC,KAAQC,MACtB,yBAAKF,UAAWC,KAAQmJ,OAAxB,OACGH,QADH,IACGA,OADH,EACGA,EAAQG,OAGVqC,GACD,2BACEK,MAAM,OACNC,OAAO,OACPC,UAAQ,EACRC,aAAa,cAEb,4BACEC,IAAKT,EACLnJ,KAAK,eAIRyI,GACD,6BACE,kBAAC,KAAD,CACEoB,OAAQpB,EAAQqB,UAChBC,QAAO,kBAAMpD,QAAN,IAAMA,OAAN,EAAMA,EAAQG,MAAd,OAEP,gDAKJ,yBAAKpJ,UAAWC,KAAQqM,MAAxB,OACGrD,QADH,IACGA,OADH,EACGA,EAAQI,aAEX,yBAAKrJ,UAAWC,KAAQsM,aAAxB,OACGtD,QADH,IACGA,GADH,UACGA,EAAQsD,mBADX,aACG,EAAqBvD,KAAI,SAACwD,GAAD,OACxB,4BACE,uBACEC,KAAMD,EACNE,IAAI,sBACJC,OAAO,UAENH,UF7C6C,UAAU,GACpE,CAAC,sCAAuCrF,GAAQ,UAAU,GAC1D,CAAC,4BGrB8B,WAC/B,IAAMrG,EAASK,IADsB,EAGDC,cAA5BG,EAH6B,EAG7BA,UAAWF,EAHkB,EAGlBA,OAAQC,EAHU,EAGVA,KAHU,EAKPzB,mBAAoB,IALb,mBAK9B6K,EAL8B,KAKrBC,EALqB,OAML9K,mBAAqB,IANhB,mBAM9B+M,EAN8B,KAMpBC,EANoB,OAOXhN,mBAAkB,IAPP,mBAO9BgL,EAP8B,KAOvBC,EAPuB,KAuBrC,OAdA3I,qBAAU,WACRwD,GAA4B,UAAW,CAAEpE,YAAWF,SAAQ+J,SAAU9J,IACnEoD,MAAK,SAACC,GACLgG,EAAWhG,GACX7D,EAAO6D,MAEXgB,GAA6B,WAAY,IAAIjB,MAAK,SAACC,GACjDkI,EAAYlI,GACZ7D,EAAO6D,MAETgB,GAA0B,QAAS,IAAIjB,MAAK,SAACC,GAAD,OAAUmG,EAASnG,QAE9D,IAGD,yBAAK3E,UAAU,aACb,uCACC0K,EAAQ1B,KAAI,SAAChB,GAEZ,IAAM+C,EAAUjE,GAAU8F,EAAU5E,EAAOvG,WACrC4J,EAAOvE,GAAU+D,EAAO7C,EAAO3G,QAErC,OACE,kBAAC,EAAD,CACE2C,IAAKgE,EAAO1I,GACZM,YAAakN,KACbvN,OAAM,OAAEwL,QAAF,IAAEA,OAAF,EAAEA,EAAS1I,KACjB7C,OAAM,kBAAM6L,QAAN,IAAMA,OAAN,EAAMA,EAAM/I,KAAZ,oBAAqB+I,QAArB,IAAqBA,OAArB,EAAqBA,EAAMhJ,KAA3B,KACN5C,OAAM,UAAK8B,EAAL,YAAkByG,EAAO1I,WHhBF,WAAW,GAClD,CAAC,iBIrBqB,WAAO,IAAD,EACH8B,cAAjBE,EADoB,EACpBA,KAAMD,EADc,EACdA,OADc,EAEIxB,mBAAqB,IAFzB,mBAErBkH,EAFqB,KAEX6D,EAFW,KAGtB9J,EAASK,IAET4L,EAAS,yCAAG,iCAAApE,EAAA,sEACG/B,GAAoB,QAASvF,GADhC,cACVgK,EADU,gBAEO1F,GAA6B,WAAY,IAFhD,OAEVoB,EAFU,OAGVC,EAAWD,EAASE,QAAO,SAAC+F,GAAD,cAAS3B,QAAT,IAASA,OAAT,EAASA,EAAM4B,WAAWlH,SAASiH,EAAI1N,OAExEsL,EAAY5D,GACZlG,EAAOiG,GANS,2CAAH,qDAcf,OALA5E,qBAAU,WACR4K,MAEC,IAGD,oCACE,yBAAK/M,UAAWC,KAAQC,MAExB6G,EAASiC,KAAI,SAAC9B,GAAD,OACX,kBAAC,IAAD,CACElD,IAAKkD,EAAQ5H,GACba,GAAE,UAAKmB,EAAL,YAAa4F,EAAQ5H,IACvBc,MAAO,CAAEC,eAAgB,OAAQC,MAAO,YAExC,kBAAC4M,GAAA,EAAD,CAAMlN,UAAWC,KAAQkN,MACvB,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,cAAY,EACZxE,QAAQ,KACRe,UAAU,MAEV,kBAAC,KAAD,MACA,0BAAM9J,UAAWC,KAAQ+M,KAAM9F,EAAQ7E,iBJjB1B,YAAY,GACzC,CAAC,WK3BkB,WAAO,IAClBhB,EAAWD,cAAXC,OAIR,OAHeF,GACfL,CAAOmC,GAGL,yBAAKjD,UAAU,aAAf,OACGiD,QADH,IACGA,OADH,EACGA,EAAW+F,KAAI,SAACwE,GAAD,OACd,kBAAC,EAAD,CACExJ,IAAKwJ,EAAGlO,GACRC,OAAQiO,EAAGnL,KACXzC,YAAa6N,KACbhO,OAAM,UAAK4B,EAAL,YAAemM,EAAGlO,WLeZ,SAAS,GAC7B,CAAC,IM5BkB,WAAO,IAAD,EACCO,mBAAkB,IADnB,mBAClBgL,EADkB,KACXC,EADW,KAEnB4C,EAAQvM,IASd,OARAgB,qBAAU,WACRwD,GAA0B,QAAS,IAAIjB,MAAK,SAACC,GAC3CmG,EAASnG,GACT+I,EAAM/I,QAGP,IAGD,yBAAK3E,UAAU,aAAf,OACG6K,QADH,IACGA,OADH,EACGA,EAAO7B,KAAI,SAAC2E,GAAD,OACV,kBAAC,EAAD,CACE3J,IAAK2J,EAAGrO,GACRC,OAAM,UAAKoO,EAAGtL,KAAR,YAAgBsL,EAAGrL,MACzB1C,YAAagO,IACbnO,OAAM,UAAKkO,EAAGrO,WNUT,SAAS,IAGXuO,GAA6B,CACxC,CAAC,aOhBsB,WAAO,IAAD,EAC7B1M,IAD6B,MAEGQ,qBAAWC,IAAnC8F,EAFqB,EAErBA,aAAcvD,EAFO,EAEPA,MAFO,EAIOtE,qBAJP,mBAItBiO,EAJsB,KAIVC,EAJU,OAKelO,mBAAiB,GALhC,mBAKtBmO,EALsB,KAKNC,EALM,OAOOpO,wBAAc8G,GAPrB,mBAOtBuH,EAPsB,KAOVC,EAPU,OAQatO,oBAAkB,GAR/B,mBAQtBuO,EARsB,KAQPC,EARO,OASOxO,mBAAiB,IATxB,mBAStByO,EATsB,KASVC,EATU,OAUG1O,oBAAkB,GAVrB,mBAUtB2O,EAVsB,KAUZC,EAVY,OAWsB5O,oBAAkB,GAXxC,mBAWtB6O,EAXsB,KAWFC,EAXE,OAaC9O,mBAAoB,IAbrB,mBAatB6K,EAbsB,KAabC,EAba,OAcH9K,mBAAkB,IAdf,mBActBgL,EAdsB,KAcfC,EAde,OAeGjL,mBAAqB,IAfxB,mBAetBkH,GAfsB,KAeZ6D,GAfY,KAgBvBgE,GAAaC,iBAAkB,IAhBR,GAiBGhP,mBAAiB,IAjBpB,qBAiBtB2B,GAjBsB,MAiBZsN,GAjBY,SAmBajP,mBAAoB,IAnBjC,qBAmBtBkP,GAnBsB,MAmBPC,GAnBO,SAoBmBnP,mBAAoB,IApBvC,qBAoBtBoP,GApBsB,MAoBJC,GApBI,SAsBarP,qBAtBb,qBAsBtBsP,GAtBsB,MAsBPC,GAtBO,SAuBevP,oBAAkB,GAvBjC,qBAuBtBwP,GAvBsB,MAuBNC,GAvBM,SAyBHzP,mBAAiB,IAzBd,qBAyBtBuJ,GAzBsB,MAyBfmG,GAzBe,SA0BS1P,mBAAmB,IA1B5B,qBA0BtB0M,GA1BsB,MA0BTiD,GA1BS,SA2BS3P,mBAAiB,IA3B1B,qBA2BtBwJ,GA3BsB,MA2BToG,GA3BS,SA4BG5P,mBAAiB,IA5BpB,qBA4BtB6P,GA5BsB,MA4BZC,GA5BY,SA6BC9P,mBAAiB,IA7BlB,qBA6BtB+L,GA7BsB,MA6BbgE,GA7Ba,SA8BH/P,mBAAiB,GA9Bd,qBA8BtB4I,GA9BsB,MA8BfoH,GA9Be,MAgCvBC,GAAiB,SAACpF,EAAoBlJ,GAC1C,GAAKA,GAAyB,KAAbA,EAAjB,CAEAsN,GAAYtN,GAEZ,IAL+D,EAKzDuO,EAAiBrF,EAAQzD,QAAO,SAACgE,GAAD,OAAOA,EAAE3L,KAAOkC,KAAU,GAC1DwO,EAAyB,GACzBf,EAAmB,GAPsC,eAQ7CL,GAAWqB,SARkC,IAQ/D,2BAAsC,CAAC,IAAD,EAA3B9H,EAA2B,SACpC,UAAI4H,EAAepI,eAAnB,aAAI,EAAwB5B,SAASoC,EAAI7I,KACvC0Q,EAAkB7H,EAAI7I,IAAM6I,EAE5B8G,EAAiB1M,KAAK4F,IAZqC,8BAgB/D,IAhB+D,EAgBzD+H,EAAiB,GAhBwC,eAiB5CH,EAAepI,SAjB6B,IAiB/D,2BAA2C,CAAC,IACpCwI,EAAKH,EAD8B,SAEzCG,GAAKD,EAAe3N,KAAK4N,IAnBoC,8BAsB/DlB,EAAiBmB,MAAK,SAACzH,EAAG0H,GAAJ,OAAW1H,EAAE2H,KAAOD,EAAEC,MAAQ,EAAI,KAExDtB,GAAiBkB,GACjBhB,GAAoBD,KAGtB9M,qBAAU,WACRkC,QAAQwD,IAAI,CACVlC,GAA4B,UAAW,IACvCA,GAA4B,UAAW,MACtCjB,MAAK,SAACwF,GAAY,IAAD,cACSA,EADT,GACXQ,EADW,KACF/C,EADE,KAGlBgD,EAAWD,GACXoF,GAAepF,EAASlJ,IAExBoN,GAAWqB,QAAUtI,KAEvBhC,GAA6B,WAAY,IAAIjB,MAAK,SAACC,GAAD,OAAUiG,GAAYjG,MACxEgB,GAA0B,QAAS,IAAIjB,MAAK,SAACC,GAAD,OAAUmG,EAASnG,QAE9D,CAAC+F,IAEJ,IAMM6F,GAAS,WACb9B,GAAY,GACZR,EAAkB,GAClBsB,GAAS,IACTI,GAAY,IACZF,GAAe,IACfD,GAAe,IACfI,GAAW,IACXC,GAAS,GACT1B,EAAc,OAQVqC,GAAWxC,EAAiB,GAAKA,EAAiB,IAElDyC,GAAM,yCAAG,WAAO7E,GAAP,wBAAAjD,EAAA,0DACT6F,EADS,mBAENW,GAFM,iDAGL7G,EAHK,eAIN6G,GAJM,GAKN,CACD/F,SAAOC,eAAakD,eAAamD,YAAU9D,UAASnD,WAGxDpD,GAAU,UAAW8J,GAAc7P,GAAIgJ,GAAM5D,MAAK,WAChDgD,EAAa,mBACb6I,KACA5F,EAAW,OAZF,8BAeLoF,EAAiBrF,EAAQzD,QAAO,SAACgE,GAAD,OAAOA,EAAE3L,KAAOkC,MAAU,GAE1DyH,EAAkB,CACtB3J,GAAI,GACJgR,MAAM,IAAII,MAAOC,UACjBvH,SACAC,eACAkD,eACAmD,SAAS,GAAD,OAAKK,EAAe3E,UAC5BQ,UACAnD,SACAtE,MAAOA,GA1BE,UA4BYS,GAAO,UAAWqE,GA5B9B,QA4BLsC,EA5BK,OA6BH5D,EAAY+C,EAAQzD,QAAO,SAACgE,GAAD,OAAOA,EAAE3L,KAAOkC,MAAU,GAArDmG,QAERtC,GAAU,UAAW7D,GAAU,CAAEmG,QAAQ,GAAD,2BAAMA,QAAN,IAAMA,IAAW,IAAjB,CAAqB4D,MAAa7G,MAAK,WAC7EgD,EAAa,gBACb6I,KACAvB,IAAiB,SAACxE,GAEhB,MADW,uBAAOA,GAAP,CAAavB,UAnCjB,4CAAH,sDAwFN2H,GAAa,SAACzI,GAAkB,IAAD,UACnCiH,GAAiBjH,GACjBoH,GAAQ,UAACpH,EAAIiB,aAAL,QAAc,IACtBuG,GAAW,UAACxH,EAAIuH,gBAAL,QAAiB,IAC5BD,GAAc,UAACtH,EAAIkB,mBAAL,QAAoB,IAClCmG,GAAc,UAACrH,EAAIoE,mBAAL,QAAoB,IAClCqD,GAAU,UAACzH,EAAIyD,eAAL,QAAgB,KAGtBiF,GAAc,SAACC,EAAeC,GAClC,IAAMC,EAAK,aAAOjC,IACZkC,EAAUF,EAAOD,EAAQ,EAAIA,EAAQ,EAC3C,KAAIG,EAAU,GAAKA,GAAWlC,GAAc7M,QAA5C,CAGA,IAAMgP,EAAK,eAAQF,EAAMF,IACnBK,EAAK,eAAQH,EAAMC,IAEzBD,EAAMF,GAASK,EACfH,EAAMC,GAAWC,EAEjBvC,GAAqB,GACrBK,GAAiBgC,KAWnB,OAAK7M,EAGH,oCACE,8CAEA,0BACEnE,UAAWC,KAAQC,KACnBkR,YAAU,EACVC,aAAa,OAEb,6BACE,kBAACC,GAAA,EAAD,CAAatR,UAAWC,KAAQsR,OAC9B,kBAACC,GAAA,EAAD,CAAYlS,GAAG,4BAAf,iBACA,kBAACmS,GAAA,EAAD,CACEzR,UAAWC,KAAQsR,MACnBG,QAAQ,SACRpS,GAAG,MACHqS,MAAOnQ,GACPgP,SAAUA,GACVoB,SAAU,SAACC,GAAD,OAAO/B,GAAepF,EAASmH,EAAElF,OAAOgF,SAEjDjH,EAAQ1B,KAAI,SAAChB,GACZ,IAAMd,EAAUJ,GAAUC,GAAUiB,EAAOzG,WACrC8J,EAAOvE,GAAU+D,EAAO7C,EAAO3G,QAErC,OACE,kBAACyQ,GAAA,EAAD,CACEH,MAAO3J,EAAO1I,GACd0E,IAAKgE,EAAO1I,IAFd,UAIM0I,EAAOoD,SAJb,mBAIyBC,QAJzB,IAIyBA,OAJzB,EAIyBA,EAAMhJ,KAJ/B,mBAIuCgJ,QAJvC,IAIuCA,OAJvC,EAIuCA,EAAM/I,KAJ7C,mBAIqD4E,QAJrD,IAIqDA,OAJrD,EAIqDA,EAAS7E,YAOrEb,IACD,6BACE,kBAACuQ,GAAA,EAAD,CACE/R,UAAWC,KAAQ+R,UACnBxI,aAAW,SACXnH,KAAK,UACLsP,MAAOnD,EACPoD,SAAU,SAACC,GAAgC,UAAnBA,EAAElF,OAAOgF,OAAqBpB,OAEtD,kBAAC0B,GAAA,EAAD,CACEN,OAAO,EACPO,QAAS,kBAACC,GAAA,EAAD,MACTC,MAAM,iBACN5B,SAAUA,KAEZ,kBAACyB,GAAA,EAAD,CACEN,OAAK,EACLO,QAAS,kBAACC,GAAA,EAAD,MACTC,MAAM,cACN5B,SAAUA,MAId,kBAAC6B,GAAA,EAAD,CACErS,UAAWC,KAAQsR,MACnBjS,GAAG,kBACH8S,MAAM,QACNT,MAAOvI,GACPoH,SAAUA,GACVoB,SAAU,SAACC,GAAD,OAAOtC,GAASsC,EAAElF,OAAOgF,UAErC,kBAACI,GAAA,EAAD,CACE/R,UAAWC,KAAQ+R,UACnBxI,aAAW,SACXnH,KAAK,UACLsP,MAAOvD,EACPwD,SAAU,SAACC,GAAaxD,EAAoC,SAAnBwD,EAAElF,OAAOgF,SAElD,kBAACM,GAAA,EAAD,CACEN,OAAO,EACPO,QAAS,kBAACC,GAAA,EAAD,MACTC,MAAM,sBACN5B,SAAUA,KAEZ,kBAACyB,GAAA,EAAD,CACEN,OAAK,EACLO,QAAS,kBAACC,GAAA,EAAD,MACTC,MAAM,mBACN5B,SAAUA,OAIXpC,GACH,yBAAKpO,UAAWC,KAAQqS,UACrB,UAAA1D,GAAWqB,eAAX,eAAoB/N,QAAS,GAC9B,kBAACmQ,GAAA,EAAD,CACErS,UAAWC,KAAQsR,MACnBjS,GAAG,eACH8S,MAAM,6BACNT,MAAOrD,EACPsD,SAAU,SAACC,GAAD,OAAOtD,EAAcsD,EAAElF,OAAOgF,QACxCY,QAAS,kBAAMjD,IAAkB,IACjCkB,SAAUA,KAGVnB,IACF,2BAAOrP,UAAU,eACf,+BACGiP,GAAiBjG,KAAI,SAACb,GAAS,IAAD,QACvBqK,EAASlE,EAAWmE,oBAC1B,MAAmB,KAAfnE,IAAA,UACHnG,EAAIiB,aADD,iBACH,EAAWsJ,qBADR,aACH,EAA0B3M,SAASyM,MADhC,UAEFrK,EAAIkB,mBAFF,iBAEF,EAAiBqJ,qBAFf,aAEF,EAAgC3M,SAASyM,IAEvC,wBAAIxO,IAAKmE,EAAI7I,IACX,4BAAK6I,EAAImI,KAAO,IAAII,KAAKvI,EAAImI,MAAMqC,eAAiB,OACpD,4BAAKxK,EAAIiB,OACT,4BAAKjB,EAAIkB,aACT,4BACE,kBAACuJ,GAAA,EAAD,CACEpJ,aAAW,OACXjJ,QAAS,WAAQkO,GAAY,GAAQmC,GAAWzI,KAEhD,kBAAC,KAAD,SAMH,WAQf,yBAAKnI,UAAWC,KAAQ4S,OACrBzE,GACD,qCACIoC,IACF,2BACElO,KAAK,OACLhD,GAAG,WACH+C,KAAK,WACLuP,SAjSK,SAACC,GAEpB,IAAMiB,EAAOjB,EAAElF,OAAOoG,MAAM,GACxBD,GAAQ3E,EAAc2E,IA+RZtC,SAAUA,KAGZ,8BAAOxC,EAAiB,GAAKA,EAAiB,KAAvC,UAAiDgF,KAAKC,MAAMjF,GAA5D,MACNA,EAAiB,GAAKA,EAAiB,KACxC,kBAAClF,EAAA,EAAD,CACEoK,KAAK,QACL5S,MAAM,YACNyI,QAAQ,YACRxI,QAzRO,WACX,OAAVuN,QAAU,IAAVA,KAAYqF,SACZ5C,OAmRY,mBAaJ,kBAAC8B,GAAA,EAAD,CACErS,UAAWC,KAAQsR,MACnBjS,GAAG,kBACH8S,MAAM,WACN5B,UAAQ,EACRmB,MAAO/F,GACPgG,SAAU,SAACC,GAAD,OAAOjC,GAAWiC,EAAElF,OAAOgF,UAGvC,kBAACU,GAAA,EAAD,CACErS,UAAWC,KAAQsR,MACnBjS,GAAG,gBACH8S,MAAM,cACNT,MAAOtI,GACPmH,SAAUA,GACVoB,SAAU,SAACC,GAAD,OAAOpC,GAAeoC,EAAElF,OAAOgF,UAG3C,kBAACU,GAAA,EAAD,CACErS,UAAWC,KAAQmT,WACnB9T,GAAG,4BACH8S,MAAM,wCACNiB,WAAS,EACTC,KAAM,EACNvK,QAAQ,WACR4I,MAAOpF,GAAYgH,QAAO,SAAC5K,EAAG0H,GAAJ,MAAiB,KAAN1H,EAAA,UAAcA,EAAd,aAAoB0H,GAApB,UAA6BA,KAAM,IACxEuB,SAAU,SAACC,GACTnO,QAAQC,IAAIkO,EAAElF,OAAOgF,OACrBnC,GAAeqC,EAAElF,OAAOgF,MAAM6B,MAAM,UAIxC,kBAACnB,GAAA,EAAD,CACErS,UAAWC,KAAQsR,MACnBjS,GAAG,gBACHgD,KAAK,SACL8P,MAAM,QACNT,MAAOlJ,GACP+H,SAAUA,GACVoB,SAAU,SAACC,GAAD,OAAOhC,GAAS4D,OAAO5B,EAAElF,OAAOgF,WAGxB,IAAnB3D,GACD,kBAAClF,EAAA,EAAD,CACEoK,KAAK,QACLnK,QAAQ,YACRzI,MAAM,UACNkQ,SAAUA,GACVjQ,QArRU,SAACsR,GACrB,GAAK1N,GAIL,IAhBKiF,IAASA,GAAMlH,OAAS,GAC3BwF,EAAa,yCACN,GAEJ2B,MAAeA,GAAYnH,OAAS,KACvCwF,EAAa,+CACN,GAcT,GAAI0G,EACF,GAAIF,EAAY,CACd,IAAM9J,EAAG,WAAM,IAAIsM,MAAOC,WAC1B1C,EAAkB,GAClB,IAAMyF,Eb9Ja,SAACZ,EAAW3O,EAAeC,GACpD,IAAM8C,EAAU,IAAIyM,IAId7F,EAHatK,GAAQe,MAGGC,MAAX,gBAA0BL,EAA1B,YAAmCC,IAAOwP,IAAId,GAoDjE,OA9CAhF,EAAW+F,GAAG,iBAAiB,SAACC,GAG9B,IAAMC,EAAYD,EAASE,iBAAmBF,EAASG,WAAc,IAMrE,OAJA/M,EAAQsB,KAAK,CACXsF,aACAiG,aAEMD,EAASI,OACf,KAAK/Q,IAASK,QAAQ2Q,UAAUC,OAC9B1Q,QAAQC,IAAI,oBACZ,MACF,KAAKR,IAASK,QAAQ2Q,UAAUE,QAE9B,MACF,QACE3Q,QAAQC,IAAI,iBAEf,SAAC+C,OAED,WAGDoH,EAAWgG,SAASvP,IAAIE,iBAAiBC,MAAK,SAAC4P,GAC7C5Q,QAAQC,IAAI,oBAAqB2Q,GACjCpN,EAAQsB,KAAK,CACXsF,aACAiG,SAAU,IACVO,sBAiBCpN,EaqGWqN,CAAYrG,EAAY/J,EAAOC,GAAKoQ,WAAU,SAAChM,GACzDuF,EAAcvF,EAAKsF,YACftF,EAAK8L,cACP1E,GAAWxL,GACXqM,GAAOrM,GACPsP,EAAIe,eAEFjM,EAAKuL,SAAW,KAAO9F,EAAkBzF,EAAKuL,kBAGpDrM,EAAa,+BAGXkE,GACF6E,GAAO7E,IAEPlE,EAAa,+BA3BfA,EAAa,sCAqRJ8G,EAAW,eAAiB,oBAOnC,6BACE,kBAAC3E,EAAA,EAAD,CACEC,UAAU,MACVN,aAAW,wBAEVkF,GACD,kBAAC1E,EAAA,EAAD,CACEC,QAAM,EACN1J,QA3Oa,WACvB8E,GAAU,UAAW7D,GAAU,CAAEmG,QAASoH,GAAc/F,KAAI,SAACV,GAAD,OAAUA,EAAKhJ,QACxEoF,MAAK,WACJgD,EAAa,yBACbiH,GAAqB,OAwOf3O,UAAWC,KAAQyU,WAEnB,kBAACC,EAAA,EAAD,CACEC,QAAQ,eAEV,kBAAC,KAAD,QAICpE,IAAYzB,GAAc/F,KAAI,SAACiC,EAAG6F,GAAJ,OAC7B,yBACE9M,IAAKiH,EAAE3L,IAEP,kBAAC0K,EAAA,EAAD,CACEC,QAAM,EACN1J,QAAS,WAAQkO,GAAY,GAAOmC,GAAW3F,KAE/C,kBAAC0J,EAAA,EAAD,CACEC,QAAO,UAAK3J,EAAE7B,SAEf0H,EAAQ,GACT,kBAAC,KAAD,CAAiBvQ,QAAS,SAACsR,GACzBhB,GAAYC,GAAO,GAAOe,EAAEgD,qBAI7B/D,EAAQ/B,GAAc7M,OAAS,GAChC,kBAAC,KAAD,CACE3B,QAAS,SAACsR,GAAQhB,GAAYC,GAAO,GAAQe,EAAEgD,sBAInD,kBAACzK,EAAA,EAAD,cApQG,sCP/MO,eAAe,GACzC,CAAC,iBQjC0B,WAC3BjJ,IADiC,IAEzBgD,EAAUxC,qBAAWC,IAArBuC,MAFyB,EAGHtE,mBAAoB,IAHjB,mBAG1B8H,EAH0B,KAGjBC,EAHiB,OAID/H,mBAAmB,IAJlB,mBAI1BiV,EAJ0B,KAIhBC,EAJgB,KAgBjC5S,qBAAU,WACRwD,GAA4B,UAAW,CAAExB,QAAO,SAAU,IAAKO,MAAK,SAACC,GACnEiD,EAAWjD,GACXoQ,EAAY,IAAI3O,MAAMzB,EAAKzC,SAE3ByC,EAAK1D,SAAQ,SAACkH,EAAKe,IAfP,SAACA,EAAYqC,GAC3B5F,GAA0B,QAAS,CAAEgC,QAAS,CAAC4D,KAAa7G,MAAK,SAACC,GAChEoQ,GAAY,SAACvK,GACX,IAAMwG,EAAK,aAAOxG,GAElB,OADAwG,EAAM9H,GAAOvE,EAAKzC,OACX8O,QAWPgE,CAAQ9L,EAAKf,EAAI7I,YAGpB,CAAC6E,IAEJ,IAAI8Q,EAAW,EACXC,EAAc,EAClB,OACE,oCACE,6CACA,2BAAOlV,UAAU,eAEf,+BACI2H,EAAQqB,KAAI,SAACX,EAAGa,GAAS,IAAD,EAClBiM,EAAK,UAAGL,EAAS5L,UAAZ,QAAoB,EAG/B,OAFA+L,GAAQ,OAAIE,QAAJ,IAAIA,IAAS,EACrBD,GAAeC,EAAQ9M,EAAEI,MAEvB,wBAAIzE,IAAKqE,EAAE/I,IACT,4BAAK+I,EAAEe,OACP,4BAAKf,EAAEgB,aACP,4BAAKhB,EAAEI,OACP,4BAAKqM,EAAS5L,IACd,wBAAIlJ,UAAU,SAAS8U,EAAS5L,IAAQ4L,EAAS5L,GAAOb,EAAEI,WAIhE,4BACE,6BACA,6BACA,wBAAIzI,UAAU,SAAQ,uCACtB,4BAAI,2BAAIiV,IACR,wBAAIjV,UAAU,SAAQ,2BAAKkV,GAAeA,SRrBlB,iBAAiB,GACnD,CAAC,kBS3B0B,WAC3B/T,IADiC,MAEDQ,qBAAWC,IAAnC8F,EAFyB,EAEzBA,aAAcvD,EAFW,EAEXA,MAFW,EAGPtE,mBAAkB,IAHX,mBAG1BgL,EAH0B,KAGnBC,EAHmB,OAIDjL,mBAAqB,IAJpB,mBAI1BkH,EAJ0B,KAIhB6D,EAJgB,OAKH/K,mBAAoB,IALjB,mBAK1B6K,EAL0B,KAKjBC,EALiB,OAMH9K,mBAAoB,IANjB,mBAM1BuV,EAN0B,KAMjBC,EANiB,KAQjClT,qBAAU,WACRwD,GAA6B,WAAY,CAAExB,UAASO,MAAK,SAACC,GACxD,IAAMoG,EAAUpG,EAAK,GACrBgB,GAA4B,UAAW,CAAElE,UAAWsJ,EAAQzL,KAAMoF,MAAK,SAACC,GAAD,OAAUgG,EAAWhG,MAC5FgB,GAA4B,UAC1B,CAAElE,UAAWsJ,EAAQzL,KAAMoF,MAAK,SAACC,GAAD,OAAU0Q,EAAW1Q,SAGzDgB,GAA0B,QAAS,IAAIjB,MAAK,SAACC,GAAD,OAAUmG,EAASnG,MAC/DgB,GAA6B,WAAY,IAAIjB,MAAK,SAACC,GAAD,OAAUiG,EAAYjG,QACvE,CAACR,IAoBJ,OACE,oCACE,8CACA,0BACEnE,UAAWC,KAAQC,KACnBkR,YAAU,EACVC,aAAa,OAGX+D,EAAQpM,KAAI,SAACsM,GAAD,OAAYrS,EAAU+F,KAAI,SAAC1H,GAAU,IAAD,EACxCiU,EAAW7K,EAAQ8K,WAAU,SAACvK,GAAD,OAAOA,EAAE1J,YAAc+T,EAAO/T,WAC3D0J,EAAEG,WAAa9J,EAAKhC,IAAM2L,EAAExJ,YAAc6T,EAAO7T,WAAawJ,EAAE5J,SAAWiU,EAAOjU,UAElFgK,EAAOvE,GAAU+D,EAAOyK,EAAOjU,QAE/BoU,EAAY,iBAAMpK,QAAN,IAAMA,OAAN,EAAMA,EAAMhJ,KAAZ,wCACZyE,GAAUC,EAAUuO,EAAO/T,kBADf,aACZ,EAAuCc,KAD3B,YACmCf,EAAKe,KADxC,mBACgDgJ,QADhD,IACgDA,OADhD,EACgDA,EAAM/I,MAExE,OAAIiT,GAAY,EACP,yBAAKvR,IAAKyR,GAAeA,GAIhC,yBAAKzR,IAAKyR,GACPA,EACD,kBAAC3M,EAAA,EAAD,CAAQvI,QAAS,kBA3CV,SAACyH,EAAiB1G,GACrC,IAAMoU,EAAqB,CACzBpW,GAAI,GACJqI,QAAS,GACTtG,OAAQ2G,EAAO3G,OACf+J,SAAU9J,EACVC,UAAWyG,EAAOzG,UAClBE,UAAWuG,EAAOvG,WAEpBmD,GAAO,UAAW8Q,GAAWhR,MAAK,WAChCiG,GAAW,SAACH,GAEV,MADW,uBAAOA,GAAP,CAAakL,OAG1BhO,EAAa,uBAAD,OAAwBgO,EAAUtK,cA6BbuK,CAAaL,EAAQhU,EAAKhC,MAAjD,oBTpCqB,kBAAkB,IAG1CsW,GAA2B,CACtC,CAAC,YUjCqB,WACtBzU,IAD4B,IAEpBuG,EAAiB/F,qBAAWC,IAA5B8F,aAFoB,EAGF7H,mBAAkB,IAHhB,mBAGrBgL,EAHqB,KAGdC,EAHc,OAIIjL,mBAAqB,IAJzB,mBAIrBkH,EAJqB,KAIX6D,EAJW,OAKkB/K,oBAAkB,GALpC,mBAKrBgW,EALqB,KAKJC,EALI,KAO5B3T,qBAAU,WACRwD,GAA0B,QAAS,IAAIjB,MAAK,SAACC,GAAD,OAAUmG,EAASnG,MAC/DgB,GAA6B,WAAY,IAAIjB,MAAK,SAACC,GAAD,OAAUiG,EAAYjG,QACvE,IAEH,IAIMoR,EAAgB,SAACC,GACrBlL,GAAS,SAACN,GACR,IAAMhC,EAAI,aAAOgC,GAEjB,OADAhC,EAAKqN,GAAiB5I,WAAa+I,EAC5BxN,MAILyN,EAAkB,SAACpE,GAAY,IAAD,IACCA,EAAElF,OAAzBpL,EADsB,EAC1BjC,GAAe4W,EADW,EACXA,QACjBC,EAAU,UAAGtL,EAAMgL,GAAiB5I,kBAA1B,QAAwC,GAClDpG,EAASsP,EAAWX,WAAU,SAAClW,GAAD,OAAQA,IAAOiC,KAE/C2U,GACc,IAAZrP,GACFkP,EAAc,CAACxU,GAAF,oBAAgB4U,KAEtBtP,GAAU,IACnBsP,EAAWC,OAAOvP,EAAQ,GAC1BkP,EAAcI,KASlB,OACE,oCACE,yCACA,0BACEnW,UAAWC,KAAQC,KACnBkR,YAAU,EACVC,aAAa,OAEb,kBAACC,GAAA,EAAD,CAAatR,UAAWC,KAAQsR,OAC9B,kBAACC,GAAA,EAAD,CAAYlS,GAAG,4BAAf,eACA,kBAACmS,GAAA,EAAD,CACEzR,UAAWC,KAAQsR,MACnBG,QAAQ,SACRpS,GAAG,MACHqS,MAAOkE,GAAmB,EAAIA,EAAkB,GAChDjE,SA/CmB,SAACC,GAC5BiE,EAAmBjE,EAAElF,OAAOgF,SAyCtB,OAOG9G,QAPH,IAOGA,OAPH,EAOGA,EAAO7B,KAAI,SAACqC,EAAMnC,GAAP,OACV,kBAAC4I,GAAA,EAAD,CACEH,MAAOzI,EACPlF,IAAKqH,EAAK/L,IAFZ,UAIM+L,EAAKhJ,KAJX,YAImBgJ,EAAK/I,YAM9B,yBAAKtC,UAAWC,KAAQ+R,YACA,IAArB6D,IAAA,OAA0B9O,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAUiC,KAAI,SAAC9B,GAAD,iBACvC,kBAAC+K,GAAA,EAAD,CACEjO,IAAKkD,EAAQ5H,GACb4S,QACE,kBAACmE,GAAA,EAAD,CACE/W,GAAI4H,EAAQ5H,GACZ4W,QAAO,oBAAGrL,EAAMgL,GAAiB5I,kBAA1B,QAAwC,UAAxC,aAAE,EAA2ClH,SAASmB,EAAQ5H,IACrEsS,SAAUqE,EACV5T,KAAK,WACL/B,MAAM,YAGV8R,MAAK,UAAEtL,GAAUC,EAAUG,EAAQ5H,WAA9B,aAAE,EAAiC+C,YAI9C,kBAACyG,EAAA,EAAD,CACEC,QAAQ,YACRxI,QApDO,WACb8E,GAAU,QAASwF,EAAMgL,GAAiBvW,GAAI,CAAE2N,WAAYpC,EAAMgL,GAAiB5I,aAChFvI,MAAK,kBAAMgD,EAAa,wBAgDvB,WVxDkB,aAAa,GACrC,CAAC,WWpCoB,WACrBvG,IAD2B,MAEHtB,qBAFG,mBAEpBwL,EAFoB,KAEdiL,EAFc,KAGnB5O,EAAiB/F,qBAAWC,IAA5B8F,aAEF6O,EAAe,SAACrV,GACpBoV,GAAQ,SAAC9L,GAEP,OADY,eAAQA,EAAR,GAAiBtJ,OASjC,OACE,oCACE,wCACA,0BACElB,UAAWC,KAAQC,KACnBkR,YAAU,EACVC,aAAa,OAEb,kBAACgB,GAAA,EAAD,CACErS,UAAWC,KAAQsR,MACnBjS,GAAG,cACH8S,MAAM,YACNR,SAAU,SAACC,GAAD,OAAO0E,EAAa,CAAElU,KAAMwP,EAAElF,OAAOgF,WAUjD,kBAACU,GAAA,EAAD,CACErS,UAAWC,KAAQsR,MACnBjS,GAAG,cACH8S,MAAM,uBACNR,SAAU,SAACC,GAAD,OAAO0E,EAAa,CAAEjU,KAAMuP,EAAElF,OAAOgF,WAGjD,kBAAC7I,EAAA,EAAD,CACEC,QAAQ,YACRxI,QAnCO,WACbqE,GAAO,QAASyG,GAAM3G,MAAK,kBAAMgD,EAAa,mBAgC1C,UXTgB,YAAY,GAClC,CAAC,cYnCuB,WACxBvG,IAD8B,MAEDkJ,KAFC,mBAEvBC,EAFuB,KAEbkM,EAFa,KAGtB9O,EAAiB/F,qBAAWC,IAA5B8F,aAHsB,EAIA7H,qBAJA,mBAIvBkL,EAJuB,KAIdC,EAJc,OAKEnL,mBAAqB,IALvB,mBAKvB+M,EALuB,KAKbC,EALa,KAO9B1K,qBAAU,WAERwD,GAA6B,WAAY,IAAIjB,MAAK,SAACC,GAAD,OAAUkI,EAAYlI,QACvE,CAAC2F,IAEJ,IAAMmM,EAAkB,SAACvV,GACvB8J,GAAW,SAACR,GAEV,OADY,eAAQA,EAAR,GAAiBtJ,OAK3BuP,EAAM,yCAAG,6BAAA9H,EAAA,sEACUhD,GAA6B,WAAY,IADnD,OACPiH,EADO,OAEb1H,GAAa,WAAD,UAAgB0H,EAAS1K,OAAS,GAAK6I,GAASrG,MAAK,WAC/DgD,EAAa,qBACb8O,OAJW,2CAAH,qDAQZ,OACE,oCACE,2CACA,0BACExW,UAAWC,KAAQC,KACnBkR,YAAU,EACVC,aAAa,OAGb,kBAACgB,GAAA,EAAD,CACErS,UAAWC,KAAQsR,MACnBjS,GAAG,cACH8S,MAAM,eACNR,SAAU,SAACC,GAAD,OAAO4E,EAAgB,CAAEpU,KAAMwP,EAAElF,OAAOgF,WAGpD,kBAACU,GAAA,EAAD,CACErS,UAAWC,KAAQsR,MACnBjS,GAAG,QACH8S,MAAM,gBACNR,SAAU,SAACC,GAAD,OAAO4E,EAAgB,CAAEtS,MAAO0N,EAAElF,OAAOgF,WAGrD,kBAACU,GAAA,EAAD,CACErS,UAAWC,KAAQsR,MACnBjS,GAAG,QACH8S,MAAM,QACNR,SAAU,SAACC,GAAD,OAAO4E,EAAgB,CAAEC,MAAO7E,EAAElF,OAAOgF,WAGrD,kBAACU,GAAA,EAAD,CACErS,UAAWC,KAAQsR,MACnBjS,GAAG,YACH8S,MAAM,aACNR,SAAU,SAACC,GAAD,OAAO4E,EAAgB,CAAErK,UAAWyF,EAAElF,OAAOgF,WAGzD,kBAAC7I,EAAA,EAAD,CACEC,QAAQ,YACRxI,QAASkQ,GAFX,OAOA,kBAAC,GAAD,CAAW7G,KAAMgD,OZpCK,eAAe,GAC3C,CAAC,capCuB,WAAO,IAAD,EAC9BzL,IAD8B,MAEDkJ,KAFC,mBAEvBC,EAFuB,KAEbkM,EAFa,KAGtB9O,EAAiB/F,qBAAWC,IAA5B8F,aAHsB,EAIA7H,qBAJA,mBAIvBqH,EAJuB,KAIdyP,EAJc,OAKE9W,mBAAqB,IALvB,mBAKvBkH,EALuB,KAKb6D,EALa,KAc9BzI,qBAAU,WACRwD,GAA6B,WAAY,IAAIjB,MAAK,SAACC,GAAD,OAAUiG,EAAYjG,QAExE,CAAC2F,IAEH,IAOMkG,GAAoB,iBAACtJ,QAAD,IAACA,OAAD,EAACA,EAAS7E,KAAKH,cAAf,QAAyB,GAAK,EAExD,OACE,oCACE,2CACA,0BACElC,UAAWC,KAAQC,KACnBkR,YAAU,EACVC,aAAa,OAGb,kBAACgB,GAAA,EAAD,CACErS,UAAWC,KAAQsR,MACnBjS,GAAG,cACH8S,MAAM,eACNR,SAAU,SAACC,GAAD,OAlCO3Q,EAkCgB,CAAEmB,KAAMwP,EAAElF,OAAOgF,YAjCxDgF,GAAW,SAACnM,GAEV,OADY,eAAQA,EAAR,GAAiBtJ,MAFT,IAACA,KAqCnB,kBAAC4H,EAAA,EAAD,CACEC,QAAQ,YACRxI,QA3BO,WACbqE,GAAO,WAAYsC,GAASxC,MAAK,WAC/BgD,EAAa,iBACb8O,QAyBIhG,SAAUA,GAHZ,QAQF,kBAAC,GAAD,CAAW5G,KAAM7C,MbhBO,eAAe,GAC3C,CAAC,acrCsB,WACvB5F,IAD6B,IAErBuG,EAAiB/F,qBAAWC,IAA5B8F,aAFqB,EAGG7H,mBAAqB,IAHxB,mBAGtB+M,EAHsB,KAGZC,EAHY,OAIGhN,mBAAqB,IAJxB,mBAItBkH,EAJsB,KAIZ6D,EAJY,OAKH/K,mBAAkB,IALf,mBAKtBgL,EALsB,KAKfC,EALe,OAOKjL,mBAAS,IAPd,mBAOtB4B,EAPsB,KAOXmV,EAPW,OAQK/W,mBAAS,IARd,mBAQtB0B,EARsB,KAQXsV,EARW,OASDhX,mBAAS,IATR,mBAStBwB,EATsB,KASdyV,EATc,KAW7B3U,qBAAU,WACRwD,GAA6B,WAAY,IAAIjB,MAAK,SAACC,GAAD,OAAUkI,EAAYlI,MACxEgB,GAA6B,WAAY,IAAIjB,MAAK,SAACC,GAAD,OAAUiG,EAAYjG,MACxEgB,GAA0B,QAAS,IAAIjB,MAAK,SAACC,GAAD,OAAUmG,EAASnG,QAC9D,IAUH,OACE,oCACE,sDACA,0BACE3E,UAAWC,KAAQC,KACnBkR,YAAU,EACVC,aAAa,OAEb,kBAACC,GAAA,EAAD,CAAatR,UAAWC,KAAQsR,OAC9B,kBAACC,GAAA,EAAD,CAAYlS,GAAG,kBAAf,kBACA,kBAACmS,GAAA,EAAD,CACEzR,UAAWC,KAAQsR,MACnBG,QAAQ,SACRpS,GAAG,MACHqS,MAAOlQ,EACPmQ,SAAU,SAACC,GAAD,OAAY+E,EAAa/E,EAAElF,OAAOgF,SAE3C/E,EAAS5D,KAAI,SAACmH,GAAD,OACZ,kBAAC2B,GAAA,EAAD,CACEH,MAAOxB,EAAE7Q,GACT0E,IAAKmM,EAAE7Q,IAFT,UAIM6Q,EAAE9N,YAMd,kBAACiP,GAAA,EAAD,CAAatR,UAAWC,KAAQsR,OAC9B,kBAACC,GAAA,EAAD,CAAYlS,GAAG,kBAAf,kBACA,kBAACmS,GAAA,EAAD,CACEzR,UAAWC,KAAQsR,MACnBG,QAAQ,SACRpS,GAAG,MACHqS,MAAOpQ,EACPqQ,SAAU,SAACC,GAAD,OAAYgF,EAAahF,EAAElF,OAAOgF,SAE3C5K,EAASiC,KAAI,SAACmH,GAAD,OACZ,kBAAC2B,GAAA,EAAD,CACEH,MAAOxB,EAAE7Q,GACT0E,IAAKmM,EAAE7Q,IAFT,UAIM6Q,EAAE9N,YAMd,kBAACiP,GAAA,EAAD,CAAatR,UAAWC,KAAQsR,OAC9B,kBAACC,GAAA,EAAD,CAAYlS,GAAG,eAAf,eACA,kBAACmS,GAAA,EAAD,CACEzR,UAAWC,KAAQsR,MACnBG,QAAQ,SACRpS,GAAG,MACHqS,MAAOtQ,EACPuQ,SAAU,SAACC,GAAD,OAAYiF,EAAUjF,EAAElF,OAAOgF,SAExC9G,EAAM7B,KAAI,SAACmH,GAAD,OACT,kBAAC2B,GAAA,EAAD,CACEH,MAAOxB,EAAE7Q,GACT0E,IAAKmM,EAAE7Q,IAFT,UAIM6Q,EAAE9N,KAJR,YAIgB8N,EAAE7N,YAMxB,kBAACwG,EAAA,EAAD,CACEC,QAAQ,YACRxI,QA9EO,WACbqE,GAAO,UAAW,CAChBvD,SACAE,YACAE,cACCiD,MAAK,kBAAMgD,EAAa,iCAuEvB,UdxDoB,mBAAmB,GAC7C,CAAC,YehDqB,WAGtB,OADAhE,QAAQC,IAAI,mBADF,GAEH,0Cf6CiB,YAAY,IAiDvBoT,GA9CU,WAAO,IAAD,EACEpV,qBAAWC,IAAlCoV,EADqB,EACrBA,UAAWC,EADU,EACVA,QACnB,OACE,oCACE,kBAAC,GAAD,MACA,yBAAKjX,UAAWC,IAAQiX,WACtB,6BAGE,kBAAC,IAAD,MACIF,GAAaC,MAAcpJ,GAAc7E,KAAI,SAACmO,GAAD,OAC7C,kBAAC,IAAD,CACEC,OAAK,EACLpT,IAAKmT,EAAE,GACPE,KAAMF,EAAE,GACRrN,UAAWqN,EAAE,QAGhBF,KAAarB,GAAY5M,KAAI,SAACmO,GAAD,OAC5B,kBAAC,IAAD,CACEC,OAAK,EACLpT,IAAKmT,EAAE,GACPE,KAAMF,EAAE,GACRrN,UAAWqN,EAAE,aAGFxQ,IAAdqQ,GAA2BvM,GAAazB,KAAI,SAACmO,GAAD,OAC3C,kBAAC,IAAD,CACEC,OAAK,EACLpT,IAAKmT,EAAE,GACPE,KAAMF,EAAE,GACRrN,UAAWqN,EAAE,QAGjB,kBAAC,IAAD,CAAOE,KAAK,IACV,yBAAKrX,UAAWC,IAAQqX,SACtB,uEgBnEVC,GAAyB9M,GAAaxD,QAAO,SAACkQ,GAAD,OAAOA,EAAE,MAAInO,KAAI,SAACmO,GAAD,MAAQ,CAAEtL,IAAKsL,EAAE,GAAI/E,MAAO+E,EAAE,OAE5FK,GAA0B3J,GAAc5G,QAAO,SAACkQ,GAAD,OAAOA,EAAE,MAAInO,KAAI,SAACmO,GAAD,MAAQ,CAAEtL,IAAKsL,EAAE,GAAI/E,MAAO+E,EAAE,OAE9FM,GAAwB7B,GAAY3O,QAAO,SAACkQ,GAAD,OAAOA,EAAE,MAAInO,KAAI,SAACmO,GAAD,MAAQ,CAAEtL,IAAKsL,EAAE,GAAI/E,MAAO+E,EAAE,OAE1FO,GAAYC,YAAW,CAC3B/N,KAAM,CACJkC,MAAO,IACPzL,eAAgB,QAElBuX,SAAU,CACR9L,MAAO,UAIE+L,GAAW,WACtB,IAAM5X,EAAUyX,KADY,EAEJI,IAAMjY,UAAS,GAFX,mBAErBkY,EAFqB,KAEfC,EAFe,OAGGrW,qBAAWC,IAAlCoV,EAHoB,EAGpBA,UAAWC,EAHS,EAGTA,QAEbgB,EAAe,SAACC,GAAD,OAAe,SAACC,IAChB,YAAfA,EAAM7V,MAAqC,QAAd6V,EAAMnU,KAA+B,UAAdmU,EAAMnU,MAG9DgU,EAAQE,KAGJE,EAAc,SAACC,GAAD,OAClB,kBAACxO,EAAA,EAAD,KACGwO,EAAMrP,KAAI,SAACe,EAAM+G,GAAP,OACT,kBAAC,IAAD,CACE3Q,GAAI4J,EAAK8B,IACT7H,IAAK+F,EAAKqI,MACVhS,MAAO,CAAEC,eAAgB,OAAQC,MAAO,YAExC,kBAAC0J,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACqO,EAAA,EAAD,KAAexH,EAAQ,IAAM,EAAI,kBAAC,IAAD,MAAgB,kBAAC,IAAD,OACjD,kBAAC6D,EAAA,EAAD,CAAcC,QAAS7K,EAAKqI,eAsBtC,OACE,6BACE,oCACE,kBAACtJ,EAAA,EAAD,CAAQvI,QAAS0X,GAAa,IAC5B,kBAAC,IAAD,CAAUxX,UAAU,WAGtB,kBAAC8X,EAAA,EAAD,CACEC,OAAO,OACPN,KAAMH,EACNU,QAASR,GAAa,IAxB5B,yBACEjY,UAAW0Y,YAAKzY,EAAQ2J,MACxB+O,KAAK,eACLpY,QAAS0X,GAAa,GACtBW,UAAWX,GAAa,IAEvBG,EAAYb,IACb,kBAACnN,EAAA,EAAD,OACE4M,GAAaC,MAAcmB,EAAYZ,IACzC,kBAACpN,EAAA,EAAD,MACC6M,KAAamB,EAAYX,SC0CjBoB,GA3GgB,WAAO,IAAD,EACXhZ,mBAAwC,MAD7B,mBAC5ByH,EAD4B,KACtBC,EADsB,OAEA5F,qBAAWC,IAAtCkX,EAF2B,EAE3BA,SAAUC,EAFiB,EAEjBA,aAEZC,EAAiB,SAAClR,GACtB,IAAI3D,EAEFA,EADE2D,EAAOR,KACDQ,EAAOR,KAAKnD,MAEZ2D,EAAO3D,MAEjB2U,EAAS3U,GACToD,EAAQ,CACNlF,KAAMyF,EAAOmR,YACbC,MAAOpR,EAAOqR,WAGhBxT,GAA6B,WAAY,CAAExB,UAASO,MAAK,SAACC,GACpDA,EAAKzC,OAAS,EAChB6W,GAAa,GAEbA,GAAa,OAKnB5W,qBAAU,WACRgB,IAASiW,OAAOC,oBAAmB,SAACC,GAC9BA,EACFN,EAAeM,IAEfR,EAAS,MACTC,GAAa,SAIhB,IAkCH,OACE,kBAACQ,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,CAASzZ,UAAWC,IAAQiX,WAC1B,kBAAC,GAAD,MACA,kBAAC5J,EAAA,EAAD,CACEvE,QAAQ,KACR/I,UAAWC,IAAQyZ,OAFrB,qCAMA,kBAAC5Q,EAAA,EAAD,CACExI,MAAM,UACNC,QA5CY,WAClB,IAAMoZ,EAAW,IAAIxW,IAASiW,KAAKQ,mBACnCzW,IAASiW,OAAOS,gBAAgBF,GAAUjV,MAAK,SAACoD,GAI9CkR,EAAelR,MAId9C,OAAM,SAAC0B,UAoCC,OAAJY,QAAI,IAAJA,OAAA,EAAAA,EAAMjF,MAAO,0BAAMrC,UAAWC,IAAQ6Z,UAAzB,OAAoCxS,QAApC,IAAoCA,OAApC,EAAoCA,EAAMjF,MAAe,SAEvEiF,GAAQA,EAAK4R,OACb,yBACEa,IAAG,OAAEzS,QAAF,IAAEA,OAAF,EAAEA,EAAMjF,KACX6J,IAAG,OAAE5E,QAAF,IAAEA,OAAF,EAAEA,EAAM4R,QAGb5R,GACF,kBAACwB,EAAA,EAAD,CACExI,MAAM,UACNC,QAnCa,WACnB4C,IAASiW,OAAOY,UAAUtV,MAAK,WAE7BoU,EAAS,MACTvR,EAAQ,SACPvC,OAAM,SAAC0B,SAgCJ,kBAAC,IAAD,CAAsBtG,MAAO,CAAEM,SAAU,U,UCnGtCuZ,GAAyB,SAAC,GAAkC,IAAhC7X,EAA+B,EAA/BA,KAAM8R,EAAyB,EAAzBA,MAAOgG,EAAkB,EAAlBA,YAC5CC,EAA+BjG,EAA/BiG,SAAUC,EAAqBlG,EAArBkG,WAAYlC,EAAShE,EAATgE,KAE9B,OACE,6BACE,kBAACmC,GAAA,EAAD,CACEC,aAAc,CAAEH,WAAUC,cAC1BlC,KAAMA,EACNO,QAASyB,EACT7N,QAASjK,EACT4B,IAAKmW,EAAWC,MCQXxY,GAAakW,IAAMyC,cAVX,CACnBpW,MAAO,KACP6S,WAAW,EACXnV,YAAa,GACbkX,aAAc,SAAC/B,KACf8B,SAAU,SAAC3U,KACXzC,kBAAmB,SAAC8Y,KACpB9S,aAAc,SAAC2E,KACf4K,QAAS,kBAAM,KAyDFwD,GAnDO,WAAO,IAAD,EACY5a,mBAAc,IAD1B,mBACnBgC,EADmB,KACNC,EADM,OAEQjC,mBAAiB,IAFzB,mBAEnB6a,EAFmB,KAERC,EAFQ,OAGA9a,mBAAsB,MAHtB,mBAGnBsE,EAHmB,KAGZ2U,EAHY,OAIQjZ,wBAA8B8G,GAJtC,mBAInBqQ,EAJmB,KAIR+B,EAJQ,OAMAjB,IAAMjY,SAAgB,CAC9CqY,MAAM,EACNiC,SAAU,MACVC,WAAY,WATY,mBAMnBlG,EANmB,KAMZ0G,EANY,KAiC1B,OACE,kBAAC,IAAD,KACE,kBAAChZ,GAAWiZ,SAAZ,CAAqBlJ,MAAO,CAC1BqF,YAAW+B,eAAc5U,QAAOtC,cAAa6F,aAxB9B,SAACtF,GACpBuY,EAAavY,GACbwY,GAAS,SAACpQ,GAER,OADU,eAAQA,EAAR,CAAc0N,MAAM,QAqB+BY,WAAUpX,kBATjD,SAACR,GACzBY,EAAeZ,IAQ6E+V,QAL9E,iB1BxCQ,wB0BwCF9S,KAQhB,kBAAC,GAAD,CACE/B,KAAMsY,EACNxG,MAAOA,EACPgG,YAtBa,WACnBU,GAAS,SAACpQ,GAER,OADU,eAAQA,EAAR,CAAc0N,MAAM,UAsB5B,kBAAC,GAAD,MACA,kBAAC,GAAD,SClEY4C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAEP,kBAAC,GAAD,MAEAC,SAASC,eAAe,SDgIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/W,MAAK,SAAAgX,GACJA,EAAaC,gBAEd3W,OAAM,SAAA0B,GACLhD,QAAQgD,MAAMA,EAAM2F,a,mBEhJ5BlN,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,WAAa,8BAA8B,UAAY,6BAA6B,QAAU,2BAA2B,UAAY,6BAA6B,UAAY,6BAA6B,MAAQ,2B,mBCArSD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,SAAW,2BAA2B,MAAQ,wBAAwB,QAAU,0BAA0B,OAAS,yBAAyB,UAAY,4BAA4B,QAAU,4B,mBCA9OD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,MAAQ,sBAAsB,YAAc,8B,mBCA1FD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,WAAa,2BAA2B,MAAQ,sBAAsB,SAAW,2B,mBCA/HD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,IAAM,wB,mBCApFD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,QAAU,2B","file":"static/js/main.5c212db9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ListItems_root__10e2h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Teacher_name__24GbP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ManageCourse_root__2YhC8\",\"input\":\"ManageCourse_input__2tVLu\",\"oneColumn\":\"ManageCourse_oneColumn__3XtOV\",\"twoColumn\":\"ManageCourse_twoColumn__1-Mr2\",\"center\":\"ManageCourse_center__AfQDZ\"};","import React, { useState } from 'react';\nimport InputIcon from '@material-ui/icons/Input';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { Link } from 'react-router-dom';\nimport { OverridableComponent } from '@material-ui/core/OverridableComponent';\nimport { SvgIconTypeMap } from '@material-ui/core';\nimport classes from './Category.module.scss';\n\ninterface Props {\n  id?: string;\n  title1?: string;\n  title2?: string;\n  navURL: string;\n  status?: 'yes' | 'no' | 'none'\n  CategoryImg: OverridableComponent<SvgIconTypeMap>;\n  onSelect?: (id: string, selected: boolean) => void;\n}\nexport const Category:React.FC<Props> = ({\n  id, title1 = '', title2 = '', navURL, onSelect, status, CategoryImg,\n}) => {\n  const [selected, setSelected] = useState(false);\n  const handleClick = () => {\n    if (id && onSelect) {\n      setSelected(!selected);\n      onSelect(id, !selected);\n    }\n  };\n  return (\n    <Link\n      className={`${classes.root} ${selected && classes.selected}`}\n      to={navURL}\n      style={{ textDecoration: 'none', color: '#5d5d5d' }}\n      onClick={handleClick}\n    >\n      <div className={classes.image}>\n        <CategoryImg\n          htmlColor=\"#3f51b5\"\n          style={{ fontSize: 40 }}\n        />\n      </div>\n      <div className={classes.content}>\n        <div className={classes.title1}>{title1}</div>\n        <div className={classes.iconTitle}>\n          {status === 'yes' && <CheckCircleOutlineIcon htmlColor=\"#0aa04d\" />}\n          {status === 'no' && <AddCircleOutlineIcon htmlColor=\"red\" />}\n          {status === 'none' && <CheckCircleOutlineIcon htmlColor=\"#ffa500\" />}\n          {title2}\n        </div>\n      </div>\n      <div className={classes.actions}>\n        <InputIcon\n          htmlColor=\"#3f51b5\"\n          style={{ fontSize: 40 }}\n        />\n      </div>\n    </Link>\n  );\n};\n","import {\n  useEffect, useContext, useState, useCallback,\n} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { AppContext } from '../App';\n\nconst keyMap: any = {};\n\nconst updateKeyMap = (objs?: any[]) => {\n  if (!objs) return;\n\n  objs.forEach((obj) => {\n    keyMap[obj.id] = obj;\n  });\n};\n\nexport const useBreadcrumb = () => {\n  const {\n    examId, year, subjectId, courseId, teacherId,\n  } = useParams<any>();\n  const { updateBreadcrumbs } = useContext(AppContext);\n\n  const [breadcrumbs, setBreadcrumbs] = useState<any>([]);\n\n  const sendBreadcrumbs = useCallback((bcs: any[]) => {\n    if (bcs.length === breadcrumbs.length) {\n      return;\n    }\n    updateBreadcrumbs(bcs);\n    setBreadcrumbs(bcs);\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    const bcs = [\n      ['Exams', '/'],\n    ];\n\n    if (!teacherId) {\n      if (examId) {\n        const text = keyMap[examId] ? `${keyMap[examId].name}-${keyMap[examId].type}` : 'Exam Year';\n        bcs.push([text, `/${examId}`]);\n      }\n      if (year) {\n        const text = keyMap[year] ? `${keyMap[year].name}` : 'Subjects';\n        bcs.push([text, `/${examId}/${year}`]);\n      }\n      if (subjectId) {\n        const text = keyMap[subjectId] ? `${keyMap[subjectId].name}` : 'Courses';\n        bcs.push([text, `/${examId}/${year}/${subjectId}`]);\n      }\n      if (courseId) {\n        const text = keyMap[courseId] && keyMap[keyMap[courseId].teacherId]\n          ? `${keyMap[keyMap[courseId].teacherId].name}` : 'Lessons';\n        bcs.push([text,\n          `/${examId}/${year}/${subjectId}/${courseId}`]);\n      }\n    }\n    sendBreadcrumbs(bcs);\n  },\n  [examId, subjectId, courseId, sendBreadcrumbs, year, teacherId]);\n\n  return updateKeyMap;\n};\n","const firebaseConfigDev = {\n  apiKey: 'AIzaSyC5pq-lAQWmVEVmrI0iwQ2bUJvSKp4tXaY',\n  authDomain: 'smsm-54fa3.firebaseapp.com',\n  databaseURL: 'https://smsm-54fa3.firebaseio.com',\n  projectId: 'smsm-54fa3',\n  storageBucket: 'smsm-54fa3.appspot.com',\n  messagingSenderId: '794082939900',\n  appId: '1:794082939900:web:9967e6ea91936c2016d879',\n  measurementId: 'G-4SS7PQK8D5',\n};\n\nconst firebaseConfigProd = {\n  apiKey: 'AIzaSyBx8WR38L8eznu6HtwJghjptEN3Ah6HqzE',\n  authDomain: 'akshara-8630e.firebaseapp.com',\n  databaseURL: 'https://akshara-8630e.firebaseio.com',\n  projectId: 'akshara-8630e',\n  storageBucket: 'akshara-8630e.appspot.com',\n  messagingSenderId: '613661168552',\n  appId: '1:613661168552:web:46b655f214b7d0bc18c39d',\n  measurementId: 'G-23MFY9WDH7',\n};\n\nexport default firebaseConfigDev;\n\nexport const adminEmail = 'rasikadri@gmail.com';\nexport const examYears = [\n  { id: '2020', name: '2020' },\n  { id: '2021', name: '2021' },\n  { id: '2022', name: '2022' }];\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport { Subject } from 'rxjs';\nimport firebaseConfig from './Config';\n\nexport interface UploadStatus {\n  progress: number;\n  uploadTask: firebase.storage.UploadTask;\n  downloadURL?: string;\n}\n\nconst app = firebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore(app);\nconst storage = firebase.storage(app);\nconst store: {[key: string]: any} = {};\nconsole.log('firebase initialized');\n\nconst clearStore = (entityName: string) => {\n  for (const key of Object.keys(store)) {\n    if (key.startsWith(entityName)) {\n      store[key] = null;\n    }\n  }\n};\n\n// TODO: clear data store for all edit data queries\n\nexport const getVideo = (email: string, vId: string): Promise<string> => new Promise((resolve) => {\n  storage.ref().child('video').child(email).child(vId)\n    .getDownloadURL()\n    .then((data) => resolve(data));\n});\n\nexport const uploadVideo = (file: any, email: string, vId: string): Subject<UploadStatus> => {\n  const subject = new Subject<UploadStatus>();\n  const storageRef = storage.ref();\n\n  // const blob = new Blob([file], { type: 'image/jpeg' });\n  const uploadTask = storageRef.child(`video/${email}/${vId}`).put(file);\n\n  // Register three observers:\n  // 1. 'state_changed' observer, called any time the state changes\n  // 2. Error observer, called on failure\n  // 3. Completion observer, called on successful completion\n  uploadTask.on('state_changed', (snapshot) => {\n  // Observe state change events such as progress, pause, and resume\n  // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n    // console.log(`Upload is ${progress}% done`);\n    subject.next({\n      uploadTask,\n      progress,\n    });\n    switch (snapshot.state) {\n      case firebase.storage.TaskState.PAUSED: // or 'paused'\n        console.log('Upload is paused');\n        break;\n      case firebase.storage.TaskState.RUNNING: // or 'running'\n        // console.log('Upload is running');\n        break;\n      default:\n        console.log('unhandled');\n    }\n  }, (error) => {\n  // Handle unsuccessful uploads\n  }, () => {\n  // Handle successful uploads on complete\n  // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n    uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n      console.log('File available at', downloadURL);\n      subject.next({\n        uploadTask,\n        progress: 100,\n        downloadURL,\n      });\n    });\n  });\n  // // Pause the upload\n  // uploadTask.pause();\n\n  // // Resume the upload\n  // uploadTask.resume();\n\n  // // Cancel the upload\n  // uploadTask.cancel();\n\n  // setTimeout(() => {\n  //   uploadTask.pause();\n  // }, 5000);\n\n  return subject;\n};\n\nexport const addDoc = (entityName: string, obj: any) => new Promise<string>((resolve) => {\n  delete obj.id; // Allow id auto generation\n\n  db.collection(entityName).add(obj).then((docRef: any) => {\n    console.log(docRef.id);\n    clearStore(entityName);\n    resolve(docRef.id);\n  }).catch((err) => {\n    console.log(err);\n    resolve(err);\n  });\n});\n\nexport const deleteDoc = (entityName: string, id: string) => new Promise<boolean>((resolve) => {\n  db.collection(entityName).doc(id).delete().then(() => {\n    clearStore(entityName);\n    resolve(true);\n  })\n    .catch((err) => {\n      console.log(err);\n      resolve(false);\n    });\n});\n\nexport const addDocWithId = (entityName: string, id: string, obj: any) => new Promise((resolve) => {\n  db.collection(entityName).doc(id).set(obj).then((data: any) => {\n    clearStore(entityName);\n    resolve(true);\n  })\n    .catch((err) => {\n      console.log(err);\n      resolve(false);\n    });\n});\n\nexport const updateDoc = (entityName: string, id: string, obj: any) => new Promise((resolve) => {\n  db.collection(entityName).doc(id).update(obj).then((data: any) => {\n    clearStore(entityName);\n    resolve(true);\n  })\n    .catch((err) => {\n      console.log(err);\n      resolve(false);\n    });\n});\n\nconst generateRequestKey = (\n  entityName: string, conditions: any,\n) => `${entityName}-${JSON.stringify(conditions)}}`;\n\nexport const getDocsWithProps = <T>(\n  entityName: string,\n  conditions: any,\n): Promise<T> => new Promise((resolves) => {\n    const cachedResponse = store[generateRequestKey(entityName, conditions)];\n    if (cachedResponse) {\n      // Resolve result from cache and skip network\n      resolves(cachedResponse);\n      return;\n    }\n\n    const ref = db.collection(entityName);\n    let query: any;\n\n    Object.keys(conditions).forEach((key) => {\n      if ((key.includes('>') || key.includes('<'))\n      ) {\n        query = (query ?? ref).where(\n          key.substring(0, key.length - 1),\n          key.charAt(key.length - 1),\n          conditions[key],\n        );\n      } else if (key === 'limit') {\n        query = (query ?? ref).limit(conditions[key]);\n      } else if (Array.isArray(conditions[key])) {\n        query = (query ?? ref).where(key, 'array-contains', conditions[key][0]);\n      } else {\n        query = (query ?? ref).where(key, '==', conditions[key]);\n      }\n    });\n\n    const results: any = [];\n    (query ?? ref)\n      .get()\n      .then((querySnapshot: any) => {\n        querySnapshot.forEach((doc: any) => {\n          const v = doc.data();\n          v.id = doc.id;\n          results.push(v);\n        });\n        // Store result in cache and resolve\n        store[generateRequestKey(entityName, conditions)] = results;\n        resolves(results);\n      })\n      .catch((error: any) => {\n        console.error(error);\n        resolves(undefined);\n      });\n  });\n\nexport const getDocWithId = <T>(entityName: string, id: string): Promise<T | null> => new Promise(\n  (resolves) => {\n    db.collection(entityName).doc(id).get().then((doc: any) => {\n      if (doc.exists) {\n        resolves(doc.data());\n      } else {\n      // doc.data() will be undefined in this case\n        resolves(null);\n        console.log('getDocWithId: No such document!');\n      }\n    });\n  },\n);\n","export const getObject = <T>(subjects: ({id: string} & T)[], subjectId: string): T|null => {\n  const filtered = subjects.filter((subject) => subject.id === subjectId);\n  return filtered.length > 0 ? filtered[0] : null;\n};\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport OndemandVideoIcon from '@material-ui/icons/OndemandVideo';\nimport { Category } from '../../presentational/category/Category';\nimport { useBreadcrumb } from '../../../hooks/useBreadcrumb';\nimport {\n  getDocsWithProps, addDoc, updateDoc, getDocWithId,\n} from '../../../data/Store';\nimport { AppContext } from '../../../App';\nimport { ILesson } from '../../../interfaces/ILesson';\nimport { IUser } from '../../../interfaces/IUser';\nimport { ICourse } from '../../../interfaces/ICourse';\n\nexport const Course: React.FC = () => {\n  useBreadcrumb();\n\n  const [selectedLessons, setSelectedLessons] = useState<{[key: string]: boolean}>({});\n  const [user, setUser] = useState<IUser>();\n  const [total, setTotal] = useState(0);\n  const { email, showSnackbar } = useContext(AppContext);\n\n  const { courseId } = useParams<any>(); // Two routest for this page. Consider both when reading params\n  const [lessons, setLessons] = useState<ILesson[]>([]);\n\n  useEffect(() => {\n    Promise.all([\n      getDocsWithProps<IUser[]>('users', { email }),\n      getDocsWithProps<ILesson[]>('lessons', {}),\n      getDocWithId<ICourse>('courses', courseId),\n    ]).then((result) => {\n      const [users, lessons, course] = result;\n\n      if (users && lessons && course) {\n        const lessons4Course: ILesson[] = [];\n        course?.lessons.forEach((lesId) => {\n          const les = lessons.find((l) => l.id === lesId);\n          if (les) {\n            lessons4Course.push(les);\n          } else {\n            console.error('lesson not found', lesId);\n          }\n        });\n        lessons?.filter((less) => course?.lessons.includes(less.id));\n        setUser(users[0]);\n        setLessons(lessons4Course);\n      }\n    });\n    // eslint-disable-next-line\n  }, [email, selectedLessons]);\n\n  const handleSelectLesson = (id: string, selected: boolean) => {\n    let total = 0;\n    const next: any = { ...selectedLessons };\n    next[id] = selected;\n\n    for (const les of lessons) {\n      if (next[les.id] && les.price) {\n        total += les.price;\n      }\n    }\n\n    setSelectedLessons(next);\n    setTotal(total);\n  };\n\n  const pay = async () => {\n    if (!email) return;\n\n    // const usersWithEmail: IUser[] = await getDocsWithProps('users', { email }, {});\n    if (user) {\n      for (const [les, subscribed] of Object.entries(selectedLessons)) {\n        if (subscribed) {\n          user.lessons.push(les);\n        }\n      }\n      updateDoc('users', user.id, user).then(() => {\n        showSnackbar('Subscribed to lessons');\n        setSelectedLessons({});\n        setTotal(0);\n      });\n    } else {\n      const newUser: IUser = {\n        id: '',\n        email,\n        lessons: [],\n      };\n      for (const [les, subscribed] of Object.entries(selectedLessons)) {\n        if (subscribed) {\n          newUser.lessons.push(les);\n        }\n      }\n      addDoc('users', newUser).then(() => {\n        showSnackbar('Subscribed to lessons');\n        setSelectedLessons({});\n        setTotal(0);\n      });\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {total > 0 && (\n      <div>\n        <div />\n        <div>\n          <span>\n            { `Rs. ${total}.00`}\n          </span>\n          <Button\n            variant=\"contained\"\n            onClick={pay}\n            color=\"secondary\"\n          >\n            Purchase\n          </Button>\n        </div>\n      </div>\n      )}\n      {\n        lessons?.map((lesson, idx) => {\n          let status: 'yes'|'no'| 'none' | undefined;\n          if (lesson.price) {\n            if (user?.lessons.includes(lesson.id)) {\n              status = 'yes';\n            } else {\n              status = 'no';\n            }\n          } else {\n            status = 'none';\n          }\n\n          return (\n            <Category\n              id={lesson.id}\n              key={idx}\n              CategoryImg={OndemandVideoIcon}\n              title1={`${lesson.topic}`}\n              title2={`${lesson.description}`}\n              navURL={!lesson.price\n                || user?.lessons.includes(lesson.id) ? `${courseId}/${lesson.id}` : `${courseId}`}\n              onSelect={handleSelectLesson}\n              status={status}\n            />\n          );\n        })\n      }\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../../../App';\n\nexport const BreadcrumbBar = () => {\n  const { breadcrumbs } = useContext(AppContext);\n\n  return (\n    <Breadcrumbs\n      aria-label=\"breadcrumb\"\n      style={{ margin: '10px 20px' }}\n    >\n      {breadcrumbs?.map((bc) => (\n        <Link\n          style={{ textDecoration: 'none', color: 'grey' }}\n          key={bc[0]}\n          color=\"inherit\"\n          to={bc[1]}\n        >\n          {bc[0]}\n        </Link>\n      ))}\n    </Breadcrumbs>\n  );\n};\n","import React from 'react';\nimport {\n  ListItem, List, Divider,\n} from '@material-ui/core';\nimport classes from './ListItems.module.scss';\n\ninterface Props{\n  list: any[];\n}\nexport const ListItems:React.FC<Props> = ({ list }) => (\n  <div className={classes.root}>\n    <List\n      component=\"nav\"\n      aria-label=\"mailbox folders\"\n    >\n      {list.map((item) => (\n        <div key={item.id}>\n          <ListItem\n            button\n          >\n            {Object.values(item).map((val: any) => (<span key={val}>{`${val}`}</span>))}\n          </ListItem>\n          <Divider />\n        </div>\n      ))}\n\n    </List>\n  </div>\n);\n","import { useState } from 'react';\n\nexport const useForcedUpdate = () => {\n  const [onUpdate, setCount] = useState(0);\n\n  const updateUI = () => {\n    setCount((prev) => prev + 1);\n  };\n\n  const state: [number, () => void] = [onUpdate, updateUI];\n  return state;\n};\n","import React, { useContext } from 'react';\nimport {\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport classes from './Router.module.scss';\nimport { Exams } from '../container/contents/Exams';\nimport { Subjects } from '../container/contents/Subjects';\nimport { Courses } from '../container/contents/Courses';\nimport { Course } from '../container/contents/Course';\nimport { BreadcrumbBar } from '../presentational/breadcrumbs/BreadcrumbBar';\nimport { AddLesson } from '../container/manageCourse/addLesson/AddLesson';\nimport { AddSubject } from '../container/manageCourse/addSubject/AddSubject';\nimport { EditExam } from '../container/manageCourse/editExam/EditExam';\nimport { AddExam } from '../container/manageCourse/addExam/AddExam';\nimport { AddTeacher } from '../container/manageCourse/addTeacher/AddTeacher';\nimport { AddCourse } from '../container/manageCourse/addCourse/AddCourse';\nimport { Lesson } from '../container/contents/lesson/Lesson';\nimport { AppContext } from '../../App';\nimport { UpgradeCourse } from '../container/manageCourse/upgradeCourse/UpgradeCourse';\nimport { Years } from '../container/contents/Years';\nimport { Subscriptions } from '../container/subscriptions/Subscriptions';\nimport { Payments } from '../container/payments/Payments';\nimport { Teacher } from '../container/teacher/Teacher';\n\ntype routeConfig = [string, any, string, boolean][];\n\nexport const commonRoutes: routeConfig = [\n  ['/teacher/:teacherId', Teacher, 'Teacher', false],\n  ['/teacher/:teacherId/:courseId', Course, 'Teacher', false],\n  ['/:examId/:year/:subjectId/:courseId/:lessonId', Lesson, 'Lesson', false],\n  ['/:examId/:year/:subjectId/:courseId', Course, 'Course', false],\n  ['/:examId/:year/:subjectId', Courses, 'Courses', false],\n  ['/:examId/:year', Subjects, 'Subjects', false],\n  ['/:examId', Years, 'Years', false],\n  ['/', Exams, 'Exams', true],\n];\n\nexport const teacherRoutes: routeConfig = [\n  ['/addLesson', AddLesson, 'Add Lessons', true],\n  ['/subscriptions', Subscriptions, 'Subscriptions', true],\n  ['/upgradeCourses', UpgradeCourse, 'Create Courses', true],\n];\n\nexport const adminRoutes: routeConfig = [\n  ['/editExam', EditExam, 'Edit Exam', true],\n  ['/addExam', AddExam, 'Add Exam', true],\n  ['/addTeacher', AddTeacher, 'Add Teacher', true],\n  ['/addSubject', AddSubject, 'Add Subject', true],\n  ['/addCourse', AddCourse, 'Subject Streams', true],\n  ['/payments', Payments, 'Payments', true],\n];\n\nconst Router: React.FC = () => {\n  const { isTeacher, isAdmin } = useContext(AppContext);\n  return (\n    <>\n      <BreadcrumbBar />\n      <div className={classes.container}>\n        <div>\n          {/* A <Switch> looks through its children <Route>s and\n      renders the first one that matches the current URL. */}\n          <Switch>\n            {(isTeacher || isAdmin()) && teacherRoutes.map((r: any) => (\n              <Route\n                exact\n                key={r[0]}\n                path={r[0]}\n                component={r[1]}\n              />\n            ))}\n            {isAdmin() && adminRoutes.map((r: any) => (\n              <Route\n                exact\n                key={r[0]}\n                path={r[0]}\n                component={r[1]}\n              />\n            ))}\n            {isTeacher !== undefined && commonRoutes.map((r: any) => (\n              <Route\n                exact\n                key={r[0]}\n                path={r[0]}\n                component={r[1]}\n              />\n            ))}\n            <Route path=\"\">\n              <div className={classes.loading}>\n                <p>අක්ෂර.lk</p>\n              </div>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Router;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport { examYears } from '../../../data/Config';\nimport { getDocsWithProps, getDocWithId } from '../../../data/Store';\nimport { getObject } from '../../../data/StoreHelper';\nimport { ICourse } from '../../../interfaces/ICourse';\nimport { IExam } from '../../../interfaces/IExam';\nimport { ISubject } from '../../../interfaces/ISubject';\nimport { Category } from '../../presentational/category/Category';\nimport { useBreadcrumb } from '../../../hooks/useBreadcrumb';\nimport { ITeacher } from '../../../interfaces/ITeacher';\nimport classes from './Teacher.module.scss';\n\nexport const Teacher = () => {\n  useBreadcrumb();\n  const { teacherId } = useParams<any>();\n  const [courses, setCourses] = useState<ICourse[]>([]);\n  const [subjects, setSubjects] = useState<ISubject[]>([]);\n  const [exams, setExams] = useState<IExam[]>([]);\n  const [teacher, setTeacher] = useState<ITeacher| undefined>(undefined);\n\n  useEffect(() => {\n    getDocsWithProps<ICourse[]>('courses', { teacherId }).then((data) => setCourses(data));\n    getDocsWithProps<ISubject[]>('subjects', {}).then((data) => setSubjects(data));\n    getDocsWithProps<IExam[]>('exams', {}).then((data) => setExams(data));\n    getDocWithId<ITeacher>('teachers', teacherId).then((data) => data && setTeacher(data));\n  }, [teacherId]);\n\n  return (\n    <div className=\"container\">\n      <div className={classes.name}>\n        Courses from\n        {` ${teacher?.name}`}\n      </div>\n      {\n                courses.map((c) => {\n                  const subj = getObject(subjects, c.subjectId);\n                  const examTime = getObject(examYears, c.examYear);\n                  const exam = getObject(exams, c.examId);\n                  return (\n                    <Category\n                      key={c.id}\n                      title1={`${subj?.name} ${exam?.type}`}\n                      title2={`${examTime?.name} ${exam?.name}`}\n                      navURL={`${teacherId}/${c.id}`}\n                      CategoryImg={CategoryIcon}\n                    />\n                  );\n                })\n            }\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/media-has-caption */\nimport { useParams } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport ReactWhatsapp from 'react-whatsapp';\nimport classes from './Lesson.module.scss';\nimport { useBreadcrumb } from '../../../../hooks/useBreadcrumb';\nimport { getDocsWithProps, getDocWithId, getVideo } from '../../../../data/Store';\nimport { ILesson } from '../../../../interfaces/ILesson';\nimport { ITeacher } from '../../../../interfaces/ITeacher';\n\nexport const Lesson: React.FC = () => {\n  useBreadcrumb();\n  const { lessonId } = useParams<any>();\n  const [teacher, setTeacher] = useState<ITeacher | null>(null);\n  const [lesson, setLesson] = useState<ILesson>();\n  const [vidSrc, setVidSrc] = useState<string | null>(null);\n\n  const processVideo = async () => {\n    const lesson = await getDocWithId<ILesson>('lessons', lessonId);\n\n    if (lesson) {\n      getDocsWithProps<ITeacher[]>('teachers', { email: lesson.email })\n        .then((data) => data && setTeacher(data[0]));\n      const url = await getVideo(lesson.email, lesson.videoId);\n      setLesson(lesson);\n      setVidSrc(url);\n    }\n  };\n\n  useEffect(() => {\n    processVideo();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.topic}>\n        {lesson?.topic}\n      </div>\n\n      {vidSrc && (\n      <video\n        width=\"100%\"\n        height=\"100%\"\n        controls\n        controlsList=\"nodownload\"\n      >\n        <source\n          src={vidSrc}\n          type=\"video/mp4\"\n        />\n      </video>\n      )}\n      {teacher && (\n      <div>\n        <ReactWhatsapp\n          number={teacher.phoneChat}\n          message={`[${lesson?.topic}]:`}\n        >\n          <div>Ask Questions</div>\n\n        </ReactWhatsapp>\n      </div>\n      )}\n      <div className={classes.desc}>\n        {lesson?.description}\n      </div>\n      <div className={classes.attachments}>\n        {lesson?.attachments?.map((atta) => (\n          <li>\n            <a\n              href={atta}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {atta}\n            </a>\n          </li>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport { Category } from '../../presentational/category/Category';\nimport { getObject } from '../../../data/StoreHelper';\nimport { useBreadcrumb } from '../../../hooks/useBreadcrumb';\nimport { getDocsWithProps } from '../../../data/Store';\nimport { ICourse } from '../../../interfaces/ICourse';\nimport { ITeacher } from '../../../interfaces/ITeacher';\nimport { IExam } from '../../../interfaces/IExam';\n\nexport const Courses: React.FC = () => {\n  const keyMap = useBreadcrumb();\n\n  const { subjectId, examId, year } = useParams<any>();\n\n  const [courses, setCourses] = useState<ICourse[]>([]);\n  const [teachers, setTeachers] = useState<ITeacher[]>([]);\n  const [exams, setExams] = useState<IExam[]>([]);\n\n  useEffect(() => {\n    getDocsWithProps<ICourse[]>('courses', { subjectId, examId, examYear: year })\n      .then((data) => {\n        setCourses(data);\n        keyMap(data);\n      });\n    getDocsWithProps<ITeacher[]>('teachers', {}).then((data) => {\n      setTeachers(data);\n      keyMap(data);\n    });\n    getDocsWithProps<IExam[]>('exams', {}).then((data) => setExams(data));\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h3>Courses</h3>\n      {courses.map((course) => {\n        // const subject = getObject(subjects, course.subjectId);\n        const teacher = getObject(teachers, course.teacherId);\n        const exam = getObject(exams, course.examId);\n\n        return (\n          <Category\n            key={course.id}\n            CategoryImg={ListAltIcon}\n            title1={teacher?.name}\n            title2={` ${exam?.type} [${exam?.name}]`}\n            navURL={`${subjectId}/${course.id}`}\n          />\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport {\n  Card, CardActionArea, CardContent, Typography,\n} from '@material-ui/core';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport classes from './Subjects.module.scss';\nimport { useBreadcrumb } from '../../../hooks/useBreadcrumb';\nimport { getDocsWithProps, getDocWithId } from '../../../data/Store';\nimport { ISubject } from '../../../interfaces/ISubject';\nimport { IExam } from '../../../interfaces/IExam';\n\nexport const Subjects = () => {\n  const { year, examId } = useParams<any>();\n  const [subjects, setSubjects] = useState<ISubject[]>([]);\n  const keyMap = useBreadcrumb();\n\n  const fetchData = async () => {\n    const exam = await getDocWithId<IExam>('exams', examId);\n    const subjects = await getDocsWithProps<ISubject[]>('subjects', {});\n    const filtered = subjects.filter((sub) => exam?.subjectIds.includes(sub.id));\n\n    setSubjects(filtered);\n    keyMap(subjects);\n  };\n\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <div className={classes.root}>\n        {\n      subjects.map((subject) => (\n        <Link\n          key={subject.id}\n          to={`${year}/${subject.id}`}\n          style={{ textDecoration: 'none', color: '#5d5d5d' }}\n        >\n          <Card className={classes.card}>\n            <CardActionArea>\n              <CardContent>\n                <Typography\n                  gutterBottom\n                  variant=\"h5\"\n                  component=\"h2\"\n                >\n                  <CategoryIcon />\n                  <span className={classes.sub}>{subject.name}</span>\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </Link>\n      ))\n}\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport { Category } from '../../presentational/category/Category';\nimport { useBreadcrumb } from '../../../hooks/useBreadcrumb';\nimport { examYears } from '../../../data/Config';\n\nexport const Years = () => {\n  const { examId } = useParams<any>();\n  const keyMap = useBreadcrumb();\n  keyMap(examYears);\n\n  return (\n    <div className=\"container\">\n      {examYears?.map((yr) => (\n        <Category\n          key={yr.id}\n          title1={yr.name}\n          CategoryImg={ScheduleIcon}\n          navURL={`${examId}/${yr.id}`}\n        />\n      )\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport SchoolIcon from '@material-ui/icons/School';\nimport { Category } from '../../presentational/category/Category';\nimport { useBreadcrumb } from '../../../hooks/useBreadcrumb';\nimport { getDocsWithProps } from '../../../data/Store';\nimport { IExam } from '../../../interfaces/IExam';\n\nexport const Exams = () => {\n  const [exams, setExams] = useState<IExam[]>([]);\n  const idMap = useBreadcrumb();\n  useEffect(() => {\n    getDocsWithProps<IExam[]>('exams', {}).then((data) => {\n      setExams(data);\n      idMap(data);\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"container\">\n      {exams?.map((ex) => (\n        <Category\n          key={ex.id}\n          title1={`${ex.name}-${ex.type}`}\n          CategoryImg={SchoolIcon}\n          navURL={`${ex.id}`}\n        />\n      )\n      )}\n    </div>\n  );\n};\n","import React, {\n  useState, useEffect, useContext, useRef,\n} from 'react';\nimport {\n  TextField, Button, Select, MenuItem, InputLabel, FormControl, IconButton,\n  RadioGroup, FormControlLabel, Radio, List, ListItem, ListItemText, Divider,\n} from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport SaveIcon from '@material-ui/icons/Save';\nimport classes from './AddLesson.module.scss';\nimport {\n  addDoc, getDocsWithProps, updateDoc, uploadVideo,\n} from '../../../../data/Store';\nimport { getObject } from '../../../../data/StoreHelper';\nimport { AppContext } from '../../../../App';\nimport { ILesson } from '../../../../interfaces/ILesson';\nimport { ICourse } from '../../../../interfaces/ICourse';\nimport { IExam } from '../../../../interfaces/IExam';\nimport { ISubject } from '../../../../interfaces/ISubject';\nimport { useBreadcrumb } from '../../../../hooks/useBreadcrumb';\n\nexport const AddLesson = () => {\n  useBreadcrumb();\n  const { showSnackbar, email } = useContext(AppContext);\n\n  const [uploadTask, setUploadTask] = useState<any>();\n  const [uploadProgress, setUploadProgress] = useState<number>(0);\n\n  const [uploadFile, setUploadFile] = useState<any>(undefined);\n  const [isAddNewVideo, setIsAddNewVideo] = useState<boolean>(false);\n  const [searchText, setSearchText] = useState<string>('');\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const [courseOrderChanged, setCourseOrderChaged] = useState<boolean>(false);\n\n  const [courses, setCourses] = useState<ICourse[]>([]);\n  const [exams, setExams] = useState<IExam[]>([]);\n  const [subjects, setSubjects] = useState<ISubject[]>([]);\n  const allLessons = useRef<ILesson[]>([]);\n  const [courseId, setCourseId] = useState<string>('');\n\n  const [courseLessons, setCourseLessons] = useState<ILesson[]>([]);\n  const [remainingLessons, setRemainingLessons] = useState<ILesson[]>([]);\n\n  const [editingLesson, setEditingLesson] = useState<ILesson>();\n  const [displayBacklog, setDisplayBacklog] = useState<boolean>(false);\n\n  const [topic, setTopic] = useState<string>('');\n  const [attachments, setAttachments] = useState<string[]>([]);\n  const [description, setDescription] = useState<string>('');\n  const [keywords, setKeywords] = useState<string>('');\n  const [videoId, setVideoId] = useState<string>('');\n  const [price, setPrice] = useState<number>(0);\n\n  const onCourseChange = (courses: ICourse[], courseId: string) => {\n    if (!courseId || courseId === '') { return; }\n\n    setCourseId(courseId);\n\n    const selectedCourse = courses.filter((c) => c.id === courseId)[0];\n    const lessons4CourseMap: any = {};\n    const remainingLessons = [];\n    for (const les of allLessons.current) {\n      if (selectedCourse.lessons?.includes(les.id)) {\n        lessons4CourseMap[les.id] = les;\n      } else {\n        remainingLessons.push(les);\n      }\n    }\n\n    const orderedLessons = [];\n    for (const less of selectedCourse.lessons) {\n      const t = (lessons4CourseMap[less]);\n      t && orderedLessons.push(t);\n    }\n\n    remainingLessons.sort((a, b) => (a.date > b.date ? -1 : 1));\n\n    setCourseLessons(orderedLessons);\n    setRemainingLessons(remainingLessons);\n  };\n\n  useEffect(() => {\n    Promise.all([\n      getDocsWithProps<ICourse[]>('courses', {}),\n      getDocsWithProps<ILesson[]>('lessons', {}),\n    ]).then((values) => {\n      const [courses, lessons] = values;\n\n      setCourses(courses);\n      onCourseChange(courses, courseId);\n\n      allLessons.current = lessons;\n    });\n    getDocsWithProps<ISubject[]>('subjects', {}).then((data) => setSubjects(data));\n    getDocsWithProps<IExam[]>('exams', {}).then((data) => setExams(data));\n    // eslint-disable-next-line\n  }, [courses]);\n\n  const onFileSelect = (e: any) => {\n    // TODO: Handle if file is not selected from file explorer\n    const file = e.target.files[0];\n    if (file) { setUploadFile(file); }\n  };\n\n  const addNew = () => {\n    setEditMode(false);\n    setUploadProgress(0);\n    setTopic('');\n    setKeywords('');\n    setDescription('');\n    setAttachments([]);\n    setVideoId('');\n    setPrice(0);\n    setUploadFile(null);\n  };\n\n  const onCancelUpload = () => {\n    uploadTask?.cancel();\n    addNew();\n  };\n\n  const disabled = uploadProgress > 0 && uploadProgress < 100;\n\n  const onSave = async (videoId: string) => {\n    if (editMode) {\n      if (!editingLesson) return;\n      const less = {\n        ...editingLesson,\n        ...{\n          topic, description, attachments, keywords, videoId, price,\n        },\n      };\n      updateDoc('lessons', editingLesson.id, less).then(() => {\n        showSnackbar('Lesson Modified');\n        addNew();\n        setCourses([]); // force update\n      });\n    } else {\n      const selectedCourse = courses.filter((c) => c.id === courseId)[0];\n      // When you make a change here, replicate that on edit mode also\n      const lesson: ILesson = {\n        id: '',\n        date: new Date().getTime(),\n        topic,\n        description,\n        attachments,\n        keywords: `${selectedCourse.examYear}`,\n        videoId,\n        price,\n        email: email as string,\n      };\n      const lessonId = await addDoc('lessons', lesson);\n      const { lessons } = courses.filter((c) => c.id === courseId)[0];\n\n      updateDoc('courses', courseId, { lessons: [...lessons ?? [], lessonId] }).then(() => {\n        showSnackbar('Lesson Added');\n        addNew();\n        setCourseLessons((prev) => {\n          const clone = [...prev, lesson];\n          return clone;\n        });\n      });\n    }\n  };\n\n  const validateLesson = (): boolean => {\n    if (!topic || topic.length < 5) {\n      showSnackbar('Topic should have minimum length of 5');\n      return false;\n    }\n    if (!description || description.length < 5) {\n      showSnackbar('Description should have minimum length of 5');\n      return false;\n    }\n    return true;\n  };\n\n  const prepareLesson = (e: any) => {\n    if (!email) {\n      showSnackbar('Error with the logged in teacher');\n      return;\n    }\n    if (!validateLesson()) {\n      return;\n    }\n\n    if (isAddNewVideo) {\n      if (uploadFile) {\n        const vId = `${new Date().getTime()}`;\n        setUploadProgress(0);\n        const out = uploadVideo(uploadFile, email, vId).subscribe((next) => {\n          setUploadTask(next.uploadTask);\n          if (next.downloadURL) {\n            setVideoId(vId);\n            onSave(vId);\n            out.unsubscribe();\n          }\n          if (next.progress < 100) { setUploadProgress(next.progress); }\n        });\n      } else {\n        showSnackbar('Upload video not found');\n      }\n    } else {\n      if (videoId) {\n        onSave(videoId);\n      } else {\n        showSnackbar('Upload video not found');\n      }\n    }\n  };\n\n  const copyLesson = (les: ILesson) => {\n    setEditingLesson(les);\n    setTopic(les.topic ?? '');\n    setKeywords(les.keywords ?? '');\n    setDescription(les.description ?? '');\n    setAttachments(les.attachments ?? []);\n    setVideoId(les.videoId ?? '');\n  };\n\n  const changeOrder = (index: number, isUp: boolean) => {\n    const clone = [...courseLessons];\n    const nextIdx = isUp ? index - 1 : index + 1;\n    if (nextIdx < 0 || nextIdx >= courseLessons.length) {\n      return;\n    }\n    const item1 = { ...clone[index] };\n    const item2 = { ...clone[nextIdx] };\n\n    clone[index] = item2;\n    clone[nextIdx] = item1;\n\n    setCourseOrderChaged(true);\n    setCourseLessons(clone);\n  };\n\n  const saveLessonsOrder = () => {\n    updateDoc('courses', courseId, { lessons: courseLessons.map((less) => less.id) })\n      .then(() => {\n        showSnackbar('Lessons order updated');\n        setCourseOrderChaged(false);\n      });\n  };\n\n  if (!email) return <></>;\n\n  return (\n    <>\n      <h3>Manage Lessons</h3>\n\n      <form\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <div>\n          <FormControl className={classes.input}>\n            <InputLabel id=\"demo-simple-select-label\">Select Course</InputLabel>\n            <Select\n              className={classes.input}\n              labelId=\"label1\"\n              id=\"id1\"\n              value={courseId}\n              disabled={disabled}\n              onChange={(e) => onCourseChange(courses, e.target.value as string)}\n            >\n              {courses.map((course) => {\n                const subject = getObject(subjects, course.subjectId);\n                const exam = getObject(exams, course.examId);\n\n                return (\n                  <MenuItem\n                    value={course.id}\n                    key={course.id}\n                  >\n                    {`${course.examYear}-${exam?.name}-${exam?.type}-${subject?.name}`}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n\n          {courseId && (\n          <div>\n            <RadioGroup\n              className={classes.twoColumn}\n              aria-label=\"gender\"\n              name=\"gender1\"\n              value={editMode}\n              onChange={(e: any) => { e.target.value === 'false' && addNew(); }}\n            >\n              <FormControlLabel\n                value={false}\n                control={<Radio />}\n                label=\"Add New Lesson\"\n                disabled={disabled}\n              />\n              <FormControlLabel\n                value\n                control={<Radio />}\n                label=\"Edit lesson\"\n                disabled={disabled}\n              />\n            </RadioGroup>\n\n            <TextField\n              className={classes.input}\n              id=\"standard-basic1\"\n              label=\"Topic\"\n              value={topic}\n              disabled={disabled}\n              onChange={(e) => setTopic(e.target.value)}\n            />\n            <RadioGroup\n              className={classes.twoColumn}\n              aria-label=\"gender\"\n              name=\"gender1\"\n              value={isAddNewVideo}\n              onChange={(e: any) => { setIsAddNewVideo(e.target.value === 'true'); }}\n            >\n              <FormControlLabel\n                value={false}\n                control={<Radio />}\n                label=\"Copy Previous Video\"\n                disabled={disabled}\n              />\n              <FormControlLabel\n                value\n                control={<Radio />}\n                label=\"Upload New Video\"\n                disabled={disabled}\n              />\n            </RadioGroup>\n\n            { !isAddNewVideo && (\n            <div className={classes.backlog}>\n              {allLessons.current?.length > 0 && (\n              <TextField\n                className={classes.input}\n                id=\"filled-basic\"\n                label=\"Search Previous Lessons...\"\n                value={searchText}\n                onChange={(e) => setSearchText(e.target.value)}\n                onFocus={() => setDisplayBacklog(true)}\n                disabled={disabled}\n              />\n              )}\n              { displayBacklog && (\n              <table className=\"center w100\">\n                <tbody>\n                  {remainingLessons.map((les) => {\n                    const search = searchText.toLocaleLowerCase();\n                    if (searchText === ''\n                  || les.topic?.toLowerCase()?.includes(search)\n                   || les.description?.toLowerCase()?.includes(search)) {\n                      return (\n                        <tr key={les.id}>\n                          <td>{les.date ? new Date(les.date).toDateString() : 'N/A'}</td>\n                          <td>{les.topic}</td>\n                          <td>{les.description}</td>\n                          <td>\n                            <IconButton\n                              aria-label=\"copy\"\n                              onClick={() => { setEditMode(false); copyLesson(les); }}\n                            >\n                              <FileCopyIcon />\n                            </IconButton>\n                          </td>\n                        </tr>\n                      );\n                    }\n                    return null;\n                  })}\n                </tbody>\n              </table>\n              )}\n            </div>\n            )}\n\n            <div className={classes.video}>\n              {isAddNewVideo && (\n              <>\n                {!disabled && (\n                <input\n                  type=\"file\"\n                  id=\"uploader\"\n                  name=\"uploader\"\n                  onChange={onFileSelect}\n                  disabled={disabled}\n                />\n                )}\n                <span>{uploadProgress > 0 && uploadProgress < 100 && `${Math.round(uploadProgress)}%`}</span>\n                {uploadProgress > 0 && uploadProgress < 100 && (\n                <Button\n                  size=\"small\"\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  onClick={onCancelUpload}\n                >\n                  Cancel Upload\n                </Button>\n                )}\n              </>\n              )}\n            </div>\n\n            <TextField\n              className={classes.input}\n              id=\"standard-basic4\"\n              label=\"Video Id\"\n              disabled\n              value={videoId}\n              onChange={(e) => setVideoId(e.target.value)}\n            />\n\n            <TextField\n              className={classes.input}\n              id=\"filled-basic5\"\n              label=\"Description\"\n              value={description}\n              disabled={disabled}\n              onChange={(e) => setDescription(e.target.value)}\n            />\n\n            <TextField\n              className={classes.inputMulti}\n              id=\"standard-multiline-static\"\n              label=\"Attachment links(Use new line to add)\"\n              multiline\n              rows={3}\n              variant=\"outlined\"\n              value={attachments.reduce((a, b) => (a !== '' ? `${a}\\n${b}` : `${b}`), '')}\n              onChange={(e) => {\n                console.log(e.target.value);\n                setAttachments(e.target.value.split('\\n'));\n              }}\n            />\n\n            <TextField\n              className={classes.input}\n              id=\"filled-basic6\"\n              type=\"number\"\n              label=\"Price\"\n              value={price}\n              disabled={disabled}\n              onChange={(e) => setPrice(Number(e.target.value))}\n            />\n\n            {uploadProgress === 0 && (\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={disabled}\n              onClick={prepareLesson}\n            >\n              {editMode ? 'Save Changes' : 'Add New Lesson'}\n            </Button>\n            )}\n          </div>\n          )}\n        </div>\n\n        <div>\n          <List\n            component=\"nav\"\n            aria-label=\"main mailbox folders\"\n          >\n            {courseOrderChanged && (\n            <ListItem\n              button\n              onClick={saveLessonsOrder}\n              className={classes.saveOrder}\n            >\n              <ListItemText\n                primary=\"Save order\"\n              />\n              <SaveIcon />\n            </ListItem>\n            )}\n            {\n              !disabled && courseLessons.map((c, index) => (\n                <div\n                  key={c.id}\n                >\n                  <ListItem\n                    button\n                    onClick={() => { setEditMode(true); copyLesson(c); }}\n                  >\n                    <ListItemText\n                      primary={`${c.topic}`}\n                    />\n                    {index > 0 && (\n                    <ArrowUpwardIcon onClick={(e) => {\n                      changeOrder(index, true); e.stopPropagation();\n                    }}\n                    />\n                    )}\n                    {index < courseLessons.length - 1 && (\n                    <ArrowDownwardIcon\n                      onClick={(e) => { changeOrder(index, false); e.stopPropagation(); }}\n                    />\n                    )}\n                  </ListItem>\n                  <Divider />\n                </div>\n              ))\n            }\n\n          </List>\n        </div>\n      </form>\n\n    </>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../../../App';\nimport { getDocsWithProps } from '../../../data/Store';\nimport { useBreadcrumb } from '../../../hooks/useBreadcrumb';\nimport { ILesson } from '../../../interfaces/ILesson';\nimport { IUser } from '../../../interfaces/IUser';\n\nexport const Subscriptions = () => {\n  useBreadcrumb();\n  const { email } = useContext(AppContext);\n  const [lessons, setLessons] = useState<ILesson[]>([]);\n  const [subCount, setSubCount] = useState<number[]>([]);\n\n  const setSubs = (idx:number, lessonId: string) => {\n    getDocsWithProps<IUser[]>('users', { lessons: [lessonId] }).then((data) => {\n      setSubCount((prev) => {\n        const clone = [...prev];\n        clone[idx] = data.length;\n        return clone;\n      });\n    });\n  };\n\n  useEffect(() => {\n    getDocsWithProps<ILesson[]>('lessons', { email, 'price>': 0 }).then((data) => {\n      setLessons(data);\n      setSubCount(new Array(data.length));\n\n      data.forEach((les, idx) => {\n        setSubs(idx, les.id);\n      });\n    });\n  }, [email]);\n\n  let totalSub = 0;\n  let totalAmount = 0;\n  return (\n    <>\n      <h2>Subscriptions</h2>\n      <table className=\"center w100\">\n\n        <tbody>\n          { lessons.map((l, idx) => {\n            const count = subCount[idx] ?? 0;\n            totalSub += count ?? 0;\n            totalAmount += count * l.price;\n            return (\n              <tr key={l.id}>\n                <td>{l.topic}</td>\n                <td>{l.description}</td>\n                <td>{l.price}</td>\n                <td>{subCount[idx]}</td>\n                <td className=\"right\">{subCount[idx] && subCount[idx] * l.price}</td>\n              </tr>\n            );\n          }) }\n          <tr>\n            <td />\n            <td />\n            <td className=\"right\"><b>Total :</b></td>\n            <td><b>{totalSub}</b></td>\n            <td className=\"right\"><b>{ totalAmount && totalAmount }</b></td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport classes from '../ManageCourse.module.scss';\nimport { addDoc, getDocsWithProps } from '../../../../data/Store';\nimport { AppContext } from '../../../../App';\nimport { IExam } from '../../../../interfaces/IExam';\nimport { ITeacher } from '../../../../interfaces/ITeacher';\nimport { ISubject } from '../../../../interfaces/ISubject';\nimport { ICourse } from '../../../../interfaces/ICourse';\nimport { examYears } from '../../../../data/Config';\nimport { getObject } from '../../../../data/StoreHelper';\nimport { useBreadcrumb } from '../../../../hooks/useBreadcrumb';\nimport { IStream } from '../../../../interfaces/IStream';\n\nexport const UpgradeCourse = () => {\n  useBreadcrumb();\n  const { showSnackbar, email } = useContext(AppContext);\n  const [exams, setExams] = useState<IExam[]>([]);\n  const [subjects, setSubjects] = useState<ISubject[]>([]);\n  const [courses, setCourses] = useState<ICourse[]>([]);\n  const [streams, setStreams] = useState<IStream[]>([]);\n\n  useEffect(() => {\n    getDocsWithProps<ITeacher[]>('teachers', { email }).then((data) => {\n      const teacher = data[0];\n      getDocsWithProps<ICourse[]>('courses', { teacherId: teacher.id }).then((data) => setCourses(data));\n      getDocsWithProps<IStream[]>('streams',\n        { teacherId: teacher.id }).then((data) => setStreams(data));\n    });\n\n    getDocsWithProps<IExam[]>('exams', {}).then((data) => setExams(data));\n    getDocsWithProps<ISubject[]>('subjects', {}).then((data) => setSubjects(data));\n  }, [email]);\n\n  const createCourse = (course: IStream, year: string) => {\n    const newCourse: ICourse = {\n      id: '',\n      lessons: [],\n      examId: course.examId,\n      examYear: year,\n      subjectId: course.subjectId,\n      teacherId: course.teacherId,\n    };\n    addDoc('courses', newCourse).then(() => {\n      setCourses((prev) => {\n        const clone = [...prev, newCourse];\n        return clone;\n      });\n      showSnackbar(`New course created: ${newCourse.examYear}`);\n    });\n  };\n\n  return (\n    <>\n      <h3>Create Courses</h3>\n      <form\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n      >\n        {\n          streams.map((stream) => examYears.map((year) => {\n            const crsForYr = courses.findIndex((c) => c.subjectId === stream.subjectId\n               && c.examYear === year.id && c.teacherId === stream.teacherId && c.examId === stream.examId);\n\n            const exam = getObject(exams, stream.examId);\n\n            const courseString = `${exam?.name}-\n                ${getObject(subjects, stream.subjectId)?.name}-${year.name}-${exam?.type}`;\n\n            if (crsForYr >= 0) {\n              return <div key={courseString}>{courseString}</div>;\n            }\n\n            return (\n              <div key={courseString}>\n                {courseString}\n                <Button onClick={() => createCourse(stream, year.id)}>Create</Button>\n              </div>\n            );\n          }))\n        }\n      </form>\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  Button, Select, MenuItem, InputLabel, FormControl, FormControlLabel, Checkbox,\n} from '@material-ui/core';\nimport classes from '../ManageCourse.module.scss';\nimport { getDocsWithProps, updateDoc } from '../../../../data/Store';\nimport { getObject } from '../../../../data/StoreHelper';\nimport { AppContext } from '../../../../App';\nimport { IExam } from '../../../../interfaces/IExam';\nimport { ISubject } from '../../../../interfaces/ISubject';\nimport { useBreadcrumb } from '../../../../hooks/useBreadcrumb';\n\nexport const EditExam = () => {\n  useBreadcrumb();\n  const { showSnackbar } = useContext(AppContext);\n  const [exams, setExams] = useState<IExam[]>([]);\n  const [subjects, setSubjects] = useState<ISubject[]>([]);\n  const [selectedExamIdx, setSelectedExamIdx] = useState<number>(-1);\n\n  useEffect(() => {\n    getDocsWithProps<IExam[]>('exams', {}).then((data) => setExams(data));\n    getDocsWithProps<ISubject[]>('subjects', {}).then((data) => setSubjects(data));\n  }, []);\n\n  const onSelectedExamChange = (e: any) => {\n    setSelectedExamIdx(e.target.value);\n  };\n\n  const setSubjectIds = (subjIds: string[]) => {\n    setExams((prev) => {\n      const next = [...prev];\n      next[selectedExamIdx].subjectIds = subjIds;\n      return next;\n    });\n  };\n\n  const onSubjectChange = (e: any) => {\n    const { id: subjectId, checked } = e.target;\n    const subjecList = exams[selectedExamIdx].subjectIds ?? [];\n    const exists = subjecList.findIndex((id) => id === subjectId);\n\n    if (checked) {\n      if (exists === -1) {\n        setSubjectIds([subjectId, ...subjecList]);\n      }\n    } else if (exists >= 0) {\n      subjecList.splice(exists, 1);\n      setSubjectIds(subjecList);\n    }\n  };\n\n  const onSave = () => {\n    updateDoc('exams', exams[selectedExamIdx].id, { subjectIds: exams[selectedExamIdx].subjectIds })\n      .then(() => showSnackbar('Exam is updated'));\n  };\n\n  return (\n    <>\n      <h3>Edit Exam</h3>\n      <form\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <FormControl className={classes.input}>\n          <InputLabel id=\"demo-simple-select-label\">Select Exam</InputLabel>\n          <Select\n            className={classes.input}\n            labelId=\"label1\"\n            id=\"id1\"\n            value={selectedExamIdx >= 0 ? selectedExamIdx : ''}\n            onChange={onSelectedExamChange}\n          >\n            {exams?.map((exam, idx) => (\n              <MenuItem\n                value={idx}\n                key={exam.id}\n              >\n                {`${exam.name} ${exam.type}`}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <div className={classes.twoColumn}>\n          {selectedExamIdx !== -1 && subjects?.map((subject) => (\n            <FormControlLabel\n              key={subject.id}\n              control={(\n                <Checkbox\n                  id={subject.id}\n                  checked={(exams[selectedExamIdx].subjectIds ?? [])?.includes(subject.id)}\n                  onChange={onSubjectChange}\n                  name=\"checkedB\"\n                  color=\"primary\"\n                />\n        )}\n              label={getObject(subjects, subject.id)?.name}\n            />\n          ))}\n        </div>\n        <Button\n          variant=\"contained\"\n          onClick={onSave}\n        >\n          Save\n        </Button>\n      </form>\n    </>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport {\n  TextField, Button,\n} from '@material-ui/core';\nimport classes from '../ManageCourse.module.scss';\nimport { addDoc } from '../../../../data/Store';\nimport { AppContext } from '../../../../App';\nimport { IExam } from '../../../../interfaces/IExam';\nimport { useBreadcrumb } from '../../../../hooks/useBreadcrumb';\n\nexport const AddExam = () => {\n  useBreadcrumb();\n  const [exam, setExam] = useState<IExam>();\n  const { showSnackbar } = useContext(AppContext);\n\n  const setExamProps = (obj: any) => {\n    setExam((prev) => {\n      const newObj = { ...prev, ...obj };\n      return newObj;\n    });\n  };\n\n  const onSave = () => {\n    addDoc('exams', exam).then(() => showSnackbar('Exam added'));\n  };\n\n  return (\n    <>\n      <h3>Add Exam</h3>\n      <form\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <TextField\n          className={classes.input}\n          id=\"subjectName\"\n          label=\"Exam Name\"\n          onChange={(e) => setExamProps({ name: e.target.value })}\n        />\n\n        {/* <TextField\n          className={classes.input}\n          id=\"subjectName\"\n          label=\"Batch/Year of exam\"\n          onChange={(e) => setExamProps({ batch: e.target.value })}\n        /> */}\n\n        <TextField\n          className={classes.input}\n          id=\"subjectName\"\n          label=\"Type Theory/Revision\"\n          onChange={(e) => setExamProps({ type: e.target.value })}\n        />\n\n        <Button\n          variant=\"contained\"\n          onClick={onSave}\n        >\n          Add\n        </Button>\n      </form>\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  TextField, Button,\n} from '@material-ui/core';\nimport classes from '../ManageCourse.module.scss';\nimport { addDocWithId, getDocsWithProps } from '../../../../data/Store';\nimport { ListItems } from '../../../presentational/ListItems/ListItemsComponent';\nimport { AppContext } from '../../../../App';\nimport { useForcedUpdate } from '../../../../hooks/useForcedUpdate';\nimport { ITeacher } from '../../../../interfaces/ITeacher';\nimport { useBreadcrumb } from '../../../../hooks/useBreadcrumb';\n\nexport const AddTeacher = () => {\n  useBreadcrumb();\n  const [onUpdate, updateUI] = useForcedUpdate();\n  const { showSnackbar } = useContext(AppContext);\n  const [teacher, setTeacher] = useState<ITeacher>();\n  const [teachers, setTeachers] = useState<ITeacher[]>([]);\n\n  useEffect(() => {\n    // display existing teachers\n    getDocsWithProps<ITeacher[]>('teachers', {}).then((data) => setTeachers(data));\n  }, [onUpdate]);\n\n  const setTeacherProps = (obj: any) => {\n    setTeacher((prev) => {\n      const newObj = { ...prev, ...obj };\n      return newObj;\n    });\n  };\n\n  const onSave = async () => {\n    const teachers = await getDocsWithProps<ITeacher[]>('teachers', {});\n    addDocWithId('teachers', `${teachers.length + 1}`, teacher).then(() => {\n      showSnackbar('New teacher added');\n      updateUI();\n    });\n  };\n\n  return (\n    <>\n      <h3>Add Teacher</h3>\n      <form\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n      >\n\n        <TextField\n          className={classes.input}\n          id=\"teacherName\"\n          label=\"Teacher Name\"\n          onChange={(e) => setTeacherProps({ name: e.target.value })}\n        />\n\n        <TextField\n          className={classes.input}\n          id=\"email\"\n          label=\"Email Address\"\n          onChange={(e) => setTeacherProps({ email: e.target.value })}\n        />\n\n        <TextField\n          className={classes.input}\n          id=\"phone\"\n          label=\"Phone\"\n          onChange={(e) => setTeacherProps({ phone: e.target.value })}\n        />\n\n        <TextField\n          className={classes.input}\n          id=\"phoneChat\"\n          label=\"Phone Chat\"\n          onChange={(e) => setTeacherProps({ phoneChat: e.target.value })}\n        />\n\n        <Button\n          variant=\"contained\"\n          onClick={onSave}\n        >\n          Add\n        </Button>\n\n        <ListItems list={teachers} />\n      </form>\n    </>\n  );\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport {\n  TextField, Button,\n} from '@material-ui/core';\nimport classes from '../ManageCourse.module.scss';\nimport { addDoc, getDocsWithProps } from '../../../../data/Store';\nimport { AppContext } from '../../../../App';\nimport { ListItems } from '../../../presentational/ListItems/ListItemsComponent';\nimport { useForcedUpdate } from '../../../../hooks/useForcedUpdate';\nimport { ISubject } from '../../../../interfaces/ISubject';\nimport { useBreadcrumb } from '../../../../hooks/useBreadcrumb';\n\nexport const AddSubject = () => {\n  useBreadcrumb();\n  const [onUpdate, updateUI] = useForcedUpdate();\n  const { showSnackbar } = useContext(AppContext);\n  const [subject, setSubject] = useState<ISubject>();\n  const [subjects, setSubjects] = useState<ISubject[]>([]);\n\n  const setSubjectProps = (obj: any) => {\n    setSubject((prev) => {\n      const newObj = { ...prev, ...obj };\n      return newObj;\n    });\n  };\n\n  useEffect(() => {\n    getDocsWithProps<ISubject[]>('subjects', {}).then((data) => setSubjects(data));\n    // eslint-disable-next-line\n  },[onUpdate])\n\n  const onSave = () => {\n    addDoc('subjects', subject).then(() => {\n      showSnackbar('Subject added');\n      updateUI();\n    });\n  };\n\n  const disabled: boolean = (subject?.name.length ?? 0) < 2;\n\n  return (\n    <>\n      <h3>Add Subject</h3>\n      <form\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n      >\n\n        <TextField\n          className={classes.input}\n          id=\"subjectName\"\n          label=\"Subject Name\"\n          onChange={(e) => setSubjectProps({ name: e.target.value })}\n        />\n\n        <Button\n          variant=\"contained\"\n          onClick={onSave}\n          disabled={disabled}\n        >\n          Add\n        </Button>\n      </form>\n      <ListItems list={subjects} />\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  Button, Select, MenuItem, InputLabel, FormControl,\n} from '@material-ui/core';\nimport classes from '../ManageCourse.module.scss';\nimport { addDoc, getDocsWithProps } from '../../../../data/Store';\nimport { AppContext } from '../../../../App';\nimport { ITeacher } from '../../../../interfaces/ITeacher';\nimport { ISubject } from '../../../../interfaces/ISubject';\nimport { useBreadcrumb } from '../../../../hooks/useBreadcrumb';\nimport { IExam } from '../../../../interfaces/IExam';\n\nexport const AddCourse = () => {\n  useBreadcrumb();\n  const { showSnackbar } = useContext(AppContext);\n  const [teachers, setTeachers] = useState<ITeacher[]>([]);\n  const [subjects, setSubjects] = useState<ISubject[]>([]);\n  const [exams, setExams] = useState<IExam[]>([]);\n\n  const [teacherId, setTeacherId] = useState('');\n  const [subjectId, setSubjectId] = useState('');\n  const [examId, setExamId] = useState('');\n\n  useEffect(() => {\n    getDocsWithProps<ITeacher[]>('teachers', {}).then((data) => setTeachers(data));\n    getDocsWithProps<ISubject[]>('subjects', {}).then((data) => setSubjects(data));\n    getDocsWithProps<IExam[]>('exams', {}).then((data) => setExams(data));\n  }, []);\n\n  const onSave = () => {\n    addDoc('streams', {\n      examId,\n      subjectId,\n      teacherId,\n    }).then(() => showSnackbar('Course added for teacher'));\n  };\n\n  return (\n    <>\n      <h3>Add Stream for Teacher</h3>\n      <form\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <FormControl className={classes.input}>\n          <InputLabel id=\"select-teacher\">Select Teacher</InputLabel>\n          <Select\n            className={classes.input}\n            labelId=\"label1\"\n            id=\"id1\"\n            value={teacherId}\n            onChange={(e: any) => setTeacherId(e.target.value)}\n          >\n            {teachers.map((t) => (\n              <MenuItem\n                value={t.id}\n                key={t.id}\n              >\n                {`${t.name}`}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl className={classes.input}>\n          <InputLabel id=\"select-subject\">Select Subject</InputLabel>\n          <Select\n            className={classes.input}\n            labelId=\"label1\"\n            id=\"id1\"\n            value={subjectId}\n            onChange={(e: any) => setSubjectId(e.target.value)}\n          >\n            {subjects.map((t) => (\n              <MenuItem\n                value={t.id}\n                key={t.id}\n              >\n                {`${t.name}`}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl className={classes.input}>\n          <InputLabel id=\"select-exam\">Select Exam</InputLabel>\n          <Select\n            className={classes.input}\n            labelId=\"label1\"\n            id=\"id1\"\n            value={examId}\n            onChange={(e: any) => setExamId(e.target.value)}\n          >\n            {exams.map((t) => (\n              <MenuItem\n                value={t.id}\n                key={t.id}\n              >\n                {`${t.name}-${t.type}`}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <Button\n          variant=\"contained\"\n          onClick={onSave}\n        >\n          Add\n        </Button>\n      </form>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const Payments = () => {\n  const t = 0;\n  console.log('Not implemented ', t);\n  return <h2>Payments </h2>;\n};\n","import React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/BorderClear';\nimport MailIcon from '@material-ui/icons/BlurOn';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../../../App';\nimport { adminRoutes, teacherRoutes, commonRoutes } from '../../router/Router';\n\ninterface NavLink{\n  label: string;\n  url: string;\n}\n\nconst commonLinks: NavLink[] = commonRoutes.filter((r) => r[3]).map((r) => ({ url: r[0], label: r[2] }));\n\nconst teacherLinks: NavLink[] = teacherRoutes.filter((r) => r[3]).map((r) => ({ url: r[0], label: r[2] }));\n\nconst adminLinks: NavLink[] = adminRoutes.filter((r) => r[3]).map((r) => ({ url: r[0], label: r[2] }));\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n    textDecoration: 'none',\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport const NavPanel = () => {\n  const classes = useStyles();\n  const [show, setShow] = React.useState(false);\n  const { isTeacher, isAdmin } = useContext(AppContext);\n\n  const toggleDrawer = (open: any) => (event: any) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setShow(open);\n  };\n\n  const linkSegment = (links: NavLink[]) => (\n    <List>\n      {links.map((item, index) => (\n        <Link\n          to={item.url}\n          key={item.label}\n          style={{ textDecoration: 'none', color: '#5d5d5d' }}\n        >\n          <ListItem button>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={item.label} />\n          </ListItem>\n        </Link>\n      ))}\n    </List>\n  );\n\n  const list = () => (\n    <div\n      className={clsx(classes.list)}\n      role=\"presentation\"\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      {linkSegment(commonLinks)}\n      <Divider />\n      {(isTeacher || isAdmin()) && linkSegment(teacherLinks)}\n      <Divider />\n      {isAdmin() && linkSegment(adminLinks)}\n    </div>\n  );\n\n  return (\n    <div>\n      <>\n        <Button onClick={toggleDrawer(true)}>\n          <MenuIcon htmlColor=\"white\" />\n        </Button>\n\n        <Drawer\n          anchor=\"left\"\n          open={show}\n          onClose={toggleDrawer(false)}\n        >\n          {list()}\n        </Drawer>\n      </>\n    </div>\n  );\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport {\n  AppBar, Toolbar, Typography, Button,\n} from '@material-ui/core';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport classes from './Header.module.scss';\nimport { NavPanel } from '../../presentational/navPanel/NavPanel';\nimport { AppContext } from '../../../App';\nimport { getDocsWithProps } from '../../../data/Store';\nimport { ITeacher } from '../../../interfaces/ITeacher';\n\nexport const Header:React.FC = () => {\n  const [user, setUser] = useState <{name: '', photo: ''} | null>(null);\n  const { setEmail, setIsTeacher } = useContext(AppContext);\n\n  const setUserDetails = (result: any) => {\n    let email;\n    if (result.user) {\n      email = result.user.email;\n    } else {\n      email = result.email;\n    }\n    setEmail(email);\n    setUser({\n      name: result.displayName,\n      photo: result.photoURL,\n    });\n\n    getDocsWithProps<ITeacher[]>('teachers', { email }).then((data) => {\n      if (data.length > 0) {\n        setIsTeacher(true);\n      } else {\n        setIsTeacher(false);\n      }\n    });\n  };\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((u: any) => {\n      if (u) {\n        setUserDetails(u);\n      } else {\n        setEmail(null);\n        setIsTeacher(false);\n      }\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  const handleLogin = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then((result:any) => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      // const token = result.credential.accessToken;\n      // const user2 = result.user;\n      setUserDetails(result);\n\n      // setName(user.displayName);\n      // ...\n    }).catch((error) => {\n      // // Handle Errors here.\n      // const errorCode = error.code;\n      // const errorMessage = error.message;\n      // // The email of the user's account used.\n      // const { email } = error;\n      // // The firebase.auth.AuthCredential type that was used.\n      // const { credential } = error;\n      // // ...\n    });\n  };\n\n  const handleLogout = () => {\n    firebase.auth().signOut().then(() => {\n      // Sign-out successful.\n      setEmail(null);\n      setUser(null);\n    }).catch((error) => {\n      // An error happened.\n    });\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar className={classes.container}>\n        <NavPanel />\n        <Typography\n          variant=\"h6\"\n          className={classes.title}\n        >\n          අක්ෂර.lk\n        </Typography>\n        <Button\n          color=\"inherit\"\n          onClick={handleLogin}\n        >\n          {user?.name ? <span className={classes.userName}>{user?.name}</span> : 'Login'}\n        </Button>\n        { user && user.photo && (\n          <img\n            alt={user?.name}\n            src={user?.photo}\n          />\n        )}\n        { user && (\n        <Button\n          color=\"inherit\"\n          onClick={handleLogout}\n        >\n          <PowerSettingsNewIcon style={{ fontSize: 25 }} />\n        </Button>\n        )}\n\n      </Toolbar>\n\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport Snackbar, { SnackbarOrigin } from '@material-ui/core/Snackbar';\n\nexport interface State extends SnackbarOrigin {\n  open: boolean;\n}\ninterface Props {\n  text: string;\n  state: State;\n  handleClose: () => void;\n}\nexport const Snack: React.FC<Props> = ({ text, state, handleClose }) => {\n  const { vertical, horizontal, open } = state;\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        onClose={handleClose}\n        message={text}\n        key={vertical + horizontal}\n      />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Header from './components/container/header/Header';\n// import Footer from './components/presentational/footer/Footer';\nimport Router from './components/router/Router';\nimport { Snack, State } from './components/presentational/snackbar/Snack';\nimport { adminEmail } from './data/Config';\n\nexport interface IContext {\n  email: string | null;\n  isTeacher: boolean | undefined;\n  breadcrumbs?: any[];\n  setIsTeacher: (isTeacher: boolean) => void;\n  setEmail: (email: string|null) => void,\n  updateBreadcrumbs: (bcrumbs: any) => void;\n  showSnackbar:(message: string) => void;\n  isAdmin: () => boolean;\n}\n\nconst initialState = {\n  email: null,\n  isTeacher: false,\n  breadcrumbs: [],\n  setIsTeacher: (isTeacher: boolean) => {},\n  setEmail: (email: string|null) => {},\n  updateBreadcrumbs: (bcrumbs: any) => {},\n  showSnackbar: (message: string) => {},\n  isAdmin: () => false,\n};\nexport const AppContext = React.createContext<IContext>(\n  initialState,\n);\n\nconst App: React.FC = () => {\n  const [breadcrumbs, setBreadcrumbs] = useState<any>([]);\n  const [snackText, setSnackText] = useState<string>('');\n  const [email, setEmail] = useState<string|null>(null);\n  const [isTeacher, setIsTeacher] = useState<boolean | undefined>(undefined);\n\n  const [state, setState] = React.useState<State>({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n  });\n\n  const showSnackbar = (text: string) => {\n    setSnackText(text);\n    setState((prev) => {\n      const next = { ...prev, open: true };\n      return next;\n    });\n  };\n\n  const hideSnackbar = () => {\n    setState((prev) => {\n      const next = { ...prev, open: false };\n      return next;\n    });\n  };\n\n  const updateBreadcrumbs = (obj: any) => {\n    setBreadcrumbs(obj);\n  };\n\n  const isAdmin = () => email === adminEmail;\n\n  return (\n    <BrowserRouter>\n      <AppContext.Provider value={{\n        isTeacher, setIsTeacher, email, breadcrumbs, showSnackbar, setEmail, updateBreadcrumbs, isAdmin,\n      }}\n      >\n        <Snack\n          text={snackText}\n          state={state}\n          handleClose={hideSnackbar}\n        />\n        <Header />\n        <Router />\n        {/* <Footer /> */}\n      </AppContext.Provider>\n    </BrowserRouter>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AddLesson_root__-G3BE\",\"input\":\"AddLesson_input__1wXPA\",\"inputMulti\":\"AddLesson_inputMulti__2vU6C\",\"saveOrder\":\"AddLesson_saveOrder__3Rq-m\",\"backlog\":\"AddLesson_backlog__35dpO\",\"oneColumn\":\"AddLesson_oneColumn__iPlZs\",\"twoColumn\":\"AddLesson_twoColumn__CgQp0\",\"video\":\"AddLesson_video__17AGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Category_root__22OQo\",\"selected\":\"Category_selected__3xs1B\",\"image\":\"Category_image__3KCc6\",\"content\":\"Category_content__2Ebov\",\"title1\":\"Category_title1__3Ak3Z\",\"iconTitle\":\"Category_iconTitle__1LyBU\",\"actions\":\"Category_actions__1cC3C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Lesson_root__28OaD\",\"topic\":\"Lesson_topic__13sQl\",\"attachments\":\"Lesson_attachments__3aKkb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__3dgmC\",\"menuButton\":\"Header_menuButton__2RGZ-\",\"title\":\"Header_title__2UnJC\",\"userName\":\"Header_userName__2d5Iv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Subjects_root__39gtE\",\"card\":\"Subjects_card__1hbPT\",\"sub\":\"Subjects_sub__2TZSa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Router_container__12f3j\",\"loading\":\"Router_loading__3dWKx\"};"],"sourceRoot":""}