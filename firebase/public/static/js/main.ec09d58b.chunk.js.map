{"version":3,"sources":["components/presentational/ListItems/ListItems.module.scss","components/container/teacher/Teacher.module.scss","components/presentational/footer/Footer.module.scss","components/container/manageCourse/ManageCourse.module.scss","components/presentational/category/Category.tsx","hooks/useBreadcrumb.ts","data/Config.ts","data/Store.ts","data/StoreHelper.ts","helper/util.ts","components/presentational/payment/Payment.tsx","components/container/course/Course.tsx","components/presentational/breadcrumbs/BreadcrumbBar.tsx","hooks/useForcedUpdate.ts","components/presentational/ListItems/ListItemsComponent.tsx","components/router/Router.tsx","components/container/teacher/Teacher.tsx","components/container/lesson/Lesson.tsx","components/container/courses/Courses.tsx","components/container/subjects/Subjects.tsx","components/container/years/Years.tsx","components/container/exams/Exams.tsx","components/container/manageCourse/addLesson/AddLesson.tsx","components/container/subscriptions/Subscriptions.tsx","components/container/manageCourse/upgradeCourse/UpgradeCourse.tsx","components/container/manageCourse/editExam/EditExam.tsx","components/container/manageCourse/addExam/AddExam.tsx","components/container/manageCourse/addTeacher/AddTeacher.tsx","components/container/manageCourse/addSubject/AddSubject.tsx","components/container/manageCourse/addCourse/AddCourse.tsx","components/container/payments/Payments.tsx","components/presentational/navPanel/NavPanel.tsx","components/container/header/Header.tsx","components/presentational/snackbar/Snack.tsx","components/presentational/footer/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx","components/container/manageCourse/addLesson/AddLesson.module.scss","components/presentational/category/Category.module.scss","components/container/manageCourse/addTeacher/AddTeacher.module.scss","components/container/lesson/Lesson.module.scss","components/container/header/Header.module.scss","components/container/subjects/Subjects.module.scss","components/router/Router.module.scss","components/container/course/Course.module.scss"],"names":["module","exports","Category","id","title1","title2","navURL","onSelect","status","CategoryImg","useState","selected","setSelected","className","classes","root","to","style","textDecoration","color","onClick","image","htmlColor","fontSize","content","iconTitle","actions","keyMap","updateKeyMap","objs","forEach","obj","useBreadcrumb","useParams","examId","year","subjectId","courseId","teacherId","updateBreadcrumbs","useContext","AppContext","breadcrumbs","setBreadcrumbs","sendBreadcrumbs","useCallback","bcs","length","useEffect","text","name","type","push","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","examYears","app","firebase","initializeApp","db","firestore","storage","store","console","log","clearStore","entityName","Object","keys","key","startsWith","addDoc","Promise","resolve","collection","add","then","docRef","catch","err","addDocWithId","doc","set","data","updateDoc","update","generateRequestKey","conditions","JSON","stringify","getDocsWithProps","resolves","cachedResponse","query","ref","includes","where","substring","charAt","limit","Array","isArray","results","get","querySnapshot","v","error","undefined","getDocWithId","exists","getObject","arr","filtered","filter","subject","Util","invokeLogin","paymentJS","payhere","Payment","amount","email","onSuccess","showSnackbar","payment","sandbox","merchant_id","return_url","cancel_url","notify_url","order_id","items","currency","first_name","last_name","phone","address","city","country","onDismissed","onError","onCompleted","orderId","Button","variant","startPayment","Course","selectedLessons","setSelectedLessons","user","setUser","total","setTotal","lessons","setLessons","all","result","users","course","lessons4Course","lesId","les","find","l","less","handleSelectLesson","next","price","resetPayments","handlePaymentSuccess","a","entries","newUser","ownerEmail","purchase","box","map","lesson","idx","OndemandVideoIcon","topic","description","BreadcrumbBar","Breadcrumbs","aria-label","margin","bc","useForcedUpdate","onUpdate","setCount","prev","ListItems","list","List","component","item","commonRoutes","courses","setCourses","subjects","setSubjects","exams","setExams","teacher","setTeacher","shortId","c","subj","examTime","examYear","exam","CategoryIcon","lessonId","setLesson","processVideo","videoURL","width","height","controls","controlsList","src","number","phoneChat","message","desc","attachments","atta","href","rel","target","teachers","setTeachers","ListAltIcon","fetchData","sub","subjectIds","Card","card","CardActionArea","CardContent","Typography","gutterBottom","yr","ScheduleIcon","idMap","ex","SchoolIcon","teacherRoutes","onDataFetch","uploadTask","setUploadTask","uploadProgress","setUploadProgress","uploadFile","setUploadFile","searchText","setSearchText","editMode","setEditMode","courseOrderChanged","setCourseOrderChaged","allLessons","setAllLessons","setCourseId","courseLessons","setCourseLessons","unrelatedLessons","setUnrelatedLessons","isAddNewVideo","setIsAddNewVideo","editingLesson","setEditingLesson","displayBacklog","setDisplayBacklog","setTopic","setAttachments","setDescription","keywords","setKeywords","setVideoURL","setPrice","addNew","onCourseChange","_courses","_courseId","_allLessons","selectedCourse","lessons4CourseMap","otherLessons","orderedLessons","t","sort","b","date","values","disabled","onSave","Date","getTime","copyLesson","changeOrder","index","isUp","clone","nextIdx","item1","item2","noValidate","autoComplete","FormControl","input","InputLabel","Select","labelId","value","onChange","e","MenuItem","RadioGroup","twoColumn","FormControlLabel","control","Radio","label","TextField","backlog","onBlur","setTimeout","onFocus","search","toLocaleLowerCase","toLowerCase","cursor","toDateString","video","file","files","Math","round","size","cancel","inputMulti","multiline","rows","reduce","split","Number","vId","out","Subject","child","put","on","snapshot","progress","bytesTransferred","totalBytes","state","TaskState","PAUSED","RUNNING","getDownloadURL","downloadURL","uploadVideo","subscribe","unsubscribe","ListItem","button","courseLessonIds","findIndex","saveOrder","ListItemText","primary","stopPropagation","Divider","subCount","setSubCount","setSubs","totalSub","totalAmount","marginRight","count","streams","setStreams","stream","crsForYr","courseString","newCourse","createCourse","adminRoutes","selectedExamIdx","setSelectedExamIdx","setSubjectIds","subjIds","onSubjectChange","checked","subjecList","splice","Checkbox","setExam","setExamProps","updateUI","setTeacherProps","setSubject","setOwnerEmail","setSubjectId","setExamId","str","Router","isTeacher","isAdmin","container","r","exact","path","loading","commonLinks","url","teacherLinks","adminLinks","useStyles","makeStyles","fullList","NavPanel","React","show","setShow","toggleDrawer","open","event","linkSegment","links","ListItemIcon","Drawer","anchor","onClose","clsx","role","onKeyDown","textAlign","Header","setEmail","setIsTeacher","setUserDetails","displayName","photo","photoURL","auth","onAuthStateChanged","u","handleLogin","provider","GoogleAuthProvider","signInWithPopup","AppBar","position","Toolbar","title","userName","alt","signOut","Snack","handleClose","vertical","horizontal","Snackbar","anchorOrigin","Footer","createContext","bcrumbs","App","snackText","setSnackText","setState","Provider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec09d58b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ListItems_root__10e2h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Teacher_name__24GbP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__S8hyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ManageCourse_root__2YhC8\",\"input\":\"ManageCourse_input__2tVLu\",\"oneColumn\":\"ManageCourse_oneColumn__3XtOV\",\"twoColumn\":\"ManageCourse_twoColumn__1-Mr2\",\"center\":\"ManageCourse_center__AfQDZ\"};","import React, { useState } from 'react';\nimport InputIcon from '@material-ui/icons/Input';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { Link } from 'react-router-dom';\nimport { OverridableComponent } from '@material-ui/core/OverridableComponent';\nimport { SvgIconTypeMap } from '@material-ui/core';\nimport classes from './Category.module.scss';\n\ninterface Props {\n  id?: string;\n  title1?: string;\n  title2?: string;\n  navURL: string;\n  status?: 'yes' | 'no' | 'none'\n  CategoryImg: OverridableComponent<SvgIconTypeMap>;\n  onSelect?: (id: string, selected: boolean) => void;\n}\nexport const Category:React.FC<Props> = ({\n  id, title1 = '', title2 = '', navURL, onSelect, status, CategoryImg,\n}) => {\n  const [selected, setSelected] = useState(false);\n  const handleClick = () => {\n    if (id && onSelect) {\n      setSelected(!selected);\n      onSelect(id, !selected);\n    }\n  };\n  return (\n    <Link\n      className={`${classes.root} ${selected && classes.selected}`}\n      to={navURL}\n      style={{ textDecoration: 'none', color: '#5d5d5d' }}\n      onClick={handleClick}\n    >\n      <div className={classes.image}>\n        <CategoryImg\n          htmlColor=\"#3f51b5\"\n          style={{ fontSize: 40 }}\n        />\n      </div>\n      <div className={classes.content}>\n        <div className={classes.title1}>{title1}</div>\n        <div className={classes.iconTitle}>\n          {status === 'yes' && <CheckCircleOutlineIcon htmlColor=\"#0aa04d\" />}\n          {status === 'no' && <AddCircleOutlineIcon htmlColor=\"red\" />}\n          {status === 'none' && <CheckCircleOutlineIcon htmlColor=\"#ffa500\" />}\n          {title2}\n        </div>\n      </div>\n      <div className={classes.actions}>\n        <InputIcon\n          htmlColor=\"#3f51b5\"\n          style={{ fontSize: 40 }}\n        />\n      </div>\n    </Link>\n  );\n};\n","import {\n  useEffect, useContext, useState, useCallback,\n} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { AppContext } from '../App';\n\nconst keyMap: any = {};\n\nconst updateKeyMap = (objs?: any[]) => {\n  if (!objs) return;\n\n  objs.forEach((obj) => {\n    keyMap[obj.id] = obj;\n  });\n};\n\nexport const useBreadcrumb = () => {\n  const {\n    examId, year, subjectId, courseId, teacherId,\n  } = useParams<any>();\n  const { updateBreadcrumbs } = useContext(AppContext);\n\n  const [breadcrumbs, setBreadcrumbs] = useState<any>([]);\n\n  const sendBreadcrumbs = useCallback((bcs: any[]) => {\n    if (bcs.length === breadcrumbs.length) {\n      return;\n    }\n    updateBreadcrumbs(bcs);\n    setBreadcrumbs(bcs);\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    const bcs = [\n      ['Exams', '/'],\n    ];\n\n    if (!teacherId) {\n      if (examId) {\n        const text = keyMap[examId] ? `${keyMap[examId].name}-${keyMap[examId].type}` : 'Exam Year';\n        bcs.push([text, `/${examId}`]);\n      }\n      if (year) {\n        const text = keyMap[year] ? `${keyMap[year].name}` : 'Subjects';\n        bcs.push([text, `/${examId}/${year}`]);\n      }\n      if (subjectId) {\n        const text = keyMap[subjectId] ? `${keyMap[subjectId].name}` : 'Courses';\n        bcs.push([text, `/${examId}/${year}/${subjectId}`]);\n      }\n      if (courseId) {\n        const text = keyMap[courseId] && keyMap[keyMap[courseId].teacherId]\n          ? `${keyMap[keyMap[courseId].teacherId].name}` : 'Lessons';\n        bcs.push([text,\n          `/${examId}/${year}/${subjectId}/${courseId}`]);\n      }\n    }\n    sendBreadcrumbs(bcs);\n  },\n  [examId, subjectId, courseId, sendBreadcrumbs, year, teacherId]);\n\n  return updateKeyMap;\n};\n","// const firebaseConfig = {\n//   apiKey: 'AIzaSyC5pq-lAQWmVEVmrI0iwQ2bUJvSKp4tXaY',\n//   authDomain: 'smsm-54fa3.firebaseapp.com',\n//   databaseURL: 'https://smsm-54fa3.firebaseio.com',\n//   projectId: 'smsm-54fa3',\n//   storageBucket: 'smsm-54fa3.appspot.com',\n//   messagingSenderId: '794082939900',\n//   appId: '1:794082939900:web:9967e6ea91936c2016d879',\n//   measurementId: 'G-4SS7PQK8D5',\n// };\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBx8WR38L8eznu6HtwJghjptEN3Ah6HqzE',\n  authDomain: 'akshara-8630e.firebaseapp.com',\n  databaseURL: 'https://akshara-8630e.firebaseio.com',\n  projectId: 'akshara-8630e',\n  storageBucket: 'akshara-8630e.appspot.com',\n  messagingSenderId: '613661168552',\n  appId: '1:613661168552:web:46b655f214b7d0bc18c39d',\n  measurementId: 'G-23MFY9WDH7',\n};\n\nexport default firebaseConfig;\n\nexport const adminEmail = 'rasikadri@gmail.com';\n// export const adminEmail = 'malindakpt@gmail.com';\n\nexport const examYears = [\n  { id: '2021', name: '2021' },\n  // { id: '2022', name: '2022' }\n];\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport { Subject } from 'rxjs';\nimport firebaseConfig from './Config';\n\nexport interface UploadStatus {\n  progress: number;\n  uploadTask: firebase.storage.UploadTask;\n  downloadURL?: string;\n}\n\nconst app = firebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore(app);\nconst storage = firebase.storage(app);\nconst store: {[key: string]: any} = {};\nconsole.log('firebase initialized');\n\nconst clearStore = (entityName: string) => {\n  for (const key of Object.keys(store)) {\n    if (key.startsWith(entityName)) {\n      store[key] = null;\n    }\n  }\n};\n\n// TODO: clear data store for all edit data queries\n\n// export const getVideo = (ownerEmail: string, vId: string): Promise<string> => new Promise((resolve) => {\n//   storage.ref().child('video').child(ownerEmail).child(vId)\n//     .getDownloadURL()\n//     .then((data) => resolve(data));\n// });\n\nexport const uploadVideo = (file: any, email: string, vId: string): Subject<UploadStatus> => {\n  const subject = new Subject<UploadStatus>();\n  const storageRef = storage.ref();\n\n  // const blob = new Blob([file], { type: 'image/jpeg' });\n  const uploadTask = storageRef.child(`video/${email}/${vId}`).put(file);\n\n  // Register three observers:\n  // 1. 'state_changed' observer, called any time the state changes\n  // 2. Error observer, called on failure\n  // 3. Completion observer, called on successful completion\n  uploadTask.on('state_changed', (snapshot) => {\n  // Observe state change events such as progress, pause, and resume\n  // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n    // console.log(`Upload is ${progress}% done`);\n    subject.next({\n      uploadTask,\n      progress,\n    });\n    switch (snapshot.state) {\n      case firebase.storage.TaskState.PAUSED: // or 'paused'\n        console.log('Upload is paused');\n        break;\n      case firebase.storage.TaskState.RUNNING: // or 'running'\n        // console.log('Upload is running');\n        break;\n      default:\n        console.log('unhandled');\n    }\n  }, (error) => {\n  // Handle unsuccessful uploads\n  }, () => {\n  // Handle successful uploads on complete\n  // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n    uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n      console.log('File available at', downloadURL);\n      subject.next({\n        uploadTask,\n        progress: 100,\n        downloadURL,\n      });\n    });\n  });\n  // // Pause the upload\n  // uploadTask.pause();\n\n  // // Resume the upload\n  // uploadTask.resume();\n\n  // // Cancel the upload\n  // uploadTask.cancel();\n\n  // setTimeout(() => {\n  //   uploadTask.pause();\n  // }, 5000);\n\n  return subject;\n};\n\nexport const addDoc = <T>(entityName: string, obj: T) => new Promise<string>((resolve) => {\n  // @ts-ignore\n  delete obj.id; // Allow id auto generation\n\n  db.collection(entityName).add(obj).then((docRef: any) => {\n    console.log(docRef.id);\n    clearStore(entityName);\n    resolve(docRef.id);\n  }).catch((err) => {\n    console.log(err);\n    resolve(err);\n  });\n});\n\nexport const deleteDoc = (entityName: string, id: string) => new Promise<boolean>((resolve) => {\n  db.collection(entityName).doc(id).delete().then(() => {\n    clearStore(entityName);\n    resolve(true);\n  })\n    .catch((err) => {\n      console.log(err);\n      resolve(false);\n    });\n});\n\nexport const addDocWithId = <T>(entityName: string, id: string, obj: T) => new Promise((resolve) => {\n  db.collection(entityName).doc(id).set(obj).then((data: any) => {\n    clearStore(entityName);\n    resolve(true);\n  })\n    .catch((err) => {\n      console.log(err);\n      resolve(false);\n    });\n});\n\nexport const updateDoc = (entityName: string, id: string, obj: any) => new Promise((resolve) => {\n  db.collection(entityName).doc(id).update(obj).then((data: any) => {\n    clearStore(entityName);\n    resolve(true);\n  })\n    .catch((err) => {\n      console.log(err);\n      resolve(false);\n    });\n});\n\nconst generateRequestKey = (\n  entityName: string, conditions: any,\n) => `${entityName}-${JSON.stringify(conditions)}}`;\n\nexport const getDocsWithProps = <T>(\n  entityName: string,\n  conditions: any,\n): Promise<T> => new Promise((resolves) => {\n    const cachedResponse = store[generateRequestKey(entityName, conditions)];\n    if (cachedResponse) {\n      // Resolve result from cache and skip network\n      resolves(cachedResponse);\n      return;\n    }\n\n    const ref = db.collection(entityName);\n    let query: any;\n\n    Object.keys(conditions).forEach((key) => {\n      if ((key.includes('>') || key.includes('<'))\n      ) {\n        query = (query ?? ref).where(\n          key.substring(0, key.length - 1),\n          key.charAt(key.length - 1),\n          conditions[key],\n        );\n      } else if (key === 'limit') {\n        query = (query ?? ref).limit(conditions[key]);\n      } else if (Array.isArray(conditions[key])) {\n        query = (query ?? ref).where(key, 'array-contains', conditions[key][0]);\n      } else {\n        query = (query ?? ref).where(key, '==', conditions[key]);\n      }\n    });\n\n    const results: any = [];\n    (query ?? ref)\n      .get()\n      .then((querySnapshot: any) => {\n        querySnapshot.forEach((doc: any) => {\n          const v = doc.data();\n          v.id = doc.id;\n          results.push(v);\n        });\n        // Store result in cache and resolve\n        store[generateRequestKey(entityName, conditions)] = results;\n        resolves(results);\n      })\n      .catch((error: any) => {\n        console.error(error);\n        resolves(undefined);\n      });\n  });\n\nexport const getDocWithId = <T>(entityName: string, id: string): Promise<T | null> => new Promise(\n  (resolves) => {\n    db.collection(entityName).doc(id).get().then((doc: any) => {\n      if (doc.exists) {\n        resolves(doc.data());\n      } else {\n      // doc.data() will be undefined in this case\n        resolves(null);\n        console.log('getDocWithId: No such document!');\n      }\n    });\n  },\n);\n","export const getObject = <T>(arr: ({id: string} & T)[], id: string): T|null => {\n  const filtered = arr.filter((subject) => subject.id === id);\n  return filtered.length > 0 ? filtered[0] : null;\n};\n","export class Util {\n    public static invokeLogin: any = null;\n}\n","import { Button } from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport { AppContext } from '../../../App';\n\n// @ts-ignore\n// eslint-disable-next-line no-undef\nexport const paymentJS = payhere;\n\ninterface PaymentProps {\n    amount: number;\n    email: string;\n    onSuccess: () => void;\n}\nexport const Payment: React.FC<PaymentProps> = ({ amount, email, onSuccess }) => {\n  const { showSnackbar } = useContext(AppContext);\n\n  const payment = {\n    sandbox: true,\n    merchant_id: '1215643', // Replace your Merchant ID\n    return_url: undefined, // Important\n    cancel_url: undefined, // Important\n    notify_url: 'http://sample.com/notify',\n    order_id: 'ItemNo12345',\n    items: 'Lessons subsctiption',\n    amount: `${amount}`,\n    currency: 'LKR',\n    first_name: email,\n    last_name: '',\n    email,\n    phone: '0771234567',\n    address: 'No.1, Galle Road',\n    city: 'Colombo',\n    country: 'Sri Lanka',\n    // delivery_address: 'No. 46, Galle road, Kalutara South',\n    // delivery_city: 'Kalutara',\n    // delivery_country: 'Sri Lanka',\n    // custom_1: '',\n    // custom_2: '',\n  };\n\n  paymentJS.onDismissed = function onDismissed() {\n    // Note: Prompt user to pay again or show an error page\n    console.log('Payment dismissed');\n    showSnackbar('Payment dismissed');\n  };\n\n  paymentJS.onError = function onError(error: any) {\n    // Note: show an error page\n    console.log(`Error: ${error}`);\n    showSnackbar(`Error: ${error}`);\n  };\n\n  paymentJS.onCompleted = function onCompleted(orderId: string) {\n    console.log(`Payment completed. OrderID:${orderId}`);\n    onSuccess();\n    // Note: validate the payment and show success or failure page to the customer\n  };\n\n  return (\n    <Button\n      variant=\"contained\"\n      onClick={() => paymentJS.startPayment(payment)}\n      color=\"secondary\"\n    >\n      Purchase\n    </Button>\n  );\n};\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport OndemandVideoIcon from '@material-ui/icons/OndemandVideo';\nimport { Category } from '../../presentational/category/Category';\nimport { useBreadcrumb } from '../../../hooks/useBreadcrumb';\nimport {\n  getDocsWithProps, addDoc, updateDoc, getDocWithId,\n} from '../../../data/Store';\nimport { AppContext } from '../../../App';\nimport { ILesson } from '../../../interfaces/ILesson';\nimport { IUser } from '../../../interfaces/IUser';\nimport { ICourse } from '../../../interfaces/ICourse';\nimport { Util } from '../../../helper/util';\nimport classes from './Course.module.scss';\nimport { Payment } from '../../presentational/payment/Payment';\n\nexport const Course: React.FC = () => {\n  useBreadcrumb();\n\n  const [selectedLessons, setSelectedLessons] = useState<{[key: string]: boolean}>({});\n  const [user, setUser] = useState<IUser>();\n  const [total, setTotal] = useState(0);\n  const { email, showSnackbar } = useContext(AppContext);\n\n  const { courseId } = useParams<any>(); // Two routest for this page. Consider both when reading params\n  const [lessons, setLessons] = useState<ILesson[]>([]);\n\n  useEffect(() => {\n    Promise.all([\n      getDocsWithProps<IUser[]>('users', { email }),\n      getDocsWithProps<ILesson[]>('lessons', {}),\n      getDocWithId<ICourse>('courses', courseId),\n    ]).then((result) => {\n      const [users, lessons, course] = result;\n\n      if (users && lessons && course) {\n        let lessons4Course: ILesson[] = [];\n        course?.lessons.forEach((lesId) => {\n          const les = lessons.find((l) => l.id === lesId);\n          if (les) {\n            lessons4Course = [les, ...lessons4Course];\n          } else {\n            console.error('lesson not found', lesId);\n          }\n        });\n        lessons?.filter((less) => course?.lessons.includes(less.id));\n        setUser(users[0]);\n        setLessons(lessons4Course);\n      }\n    });\n    // eslint-disable-next-line\n  }, [email, selectedLessons]);\n\n  const handleSelectLesson = (id: string, selected: boolean) => {\n    if (!email) {\n      if (Util.invokeLogin) {\n        Util.invokeLogin();\n      }\n    } else {\n      let total = 0;\n      const next: any = { ...selectedLessons };\n      next[id] = selected;\n\n      for (const les of lessons) {\n        if (next[les.id] && les.price) {\n          total += les.price;\n        }\n      }\n\n      setSelectedLessons(next);\n      setTotal(total);\n    }\n  };\n\n  const resetPayments = () => {\n    showSnackbar('Subscribed to lessons');\n    setSelectedLessons({});\n    setTotal(0);\n  };\n\n  const handlePaymentSuccess = async () => {\n    if (!email) return;\n\n    // const usersWithEmail: IUser[] = await getDocsWithProps('users', { email }, {});\n    if (user) {\n      for (const [les, subscribed] of Object.entries(selectedLessons)) {\n        if (subscribed) {\n          user.lessons.push(les);\n        }\n      }\n      updateDoc('users', user.id, user).then(() => {\n        resetPayments();\n      });\n    } else {\n      const newUser: IUser = {\n        id: '',\n        ownerEmail: email,\n        lessons: [],\n      };\n      for (const [les, subscribed] of Object.entries(selectedLessons)) {\n        if (subscribed) {\n          newUser.lessons.push(les);\n        }\n      }\n      addDoc('users', newUser).then(() => {\n        resetPayments();\n      });\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {total > 0 && email && (\n      <div className={classes.purchase}>\n        <div className={classes.box}>\n          <span>\n            { `Rs. ${total}.00`}\n          </span>\n          <Payment\n            amount={total}\n            email={email}\n            onSuccess={handlePaymentSuccess}\n          />\n        </div>\n      </div>\n      )}\n      {\n        lessons?.map((lesson, idx) => {\n          let status: 'yes'|'no'| 'none' | undefined;\n          if (lesson.price) {\n            if (user?.lessons.includes(lesson.id)) {\n              status = 'yes';\n            } else {\n              status = 'no';\n            }\n          } else {\n            status = 'none';\n          }\n\n          return (\n            <Category\n              id={lesson.id}\n              key={idx}\n              CategoryImg={OndemandVideoIcon}\n              title1={`${lesson.topic}`}\n              title2={`${lesson.description}`}\n              navURL={!lesson.price\n                || user?.lessons.includes(lesson.id) ? `${courseId}/${lesson.id}` : `${courseId}`}\n              onSelect={handleSelectLesson}\n              status={status}\n            />\n          );\n        })\n      }\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../../../App';\n\nexport const BreadcrumbBar = () => {\n  const { breadcrumbs } = useContext(AppContext);\n\n  return (\n    <Breadcrumbs\n      aria-label=\"breadcrumb\"\n      style={{ margin: '10px 20px' }}\n    >\n      {breadcrumbs?.map((bc) => (\n        <Link\n          style={{ textDecoration: 'none', color: 'grey' }}\n          key={bc[0]}\n          color=\"inherit\"\n          to={bc[1]}\n        >\n          {bc[0]}\n        </Link>\n      ))}\n    </Breadcrumbs>\n  );\n};\n","import { useState } from 'react';\n\nexport const useForcedUpdate = () => {\n  const [onUpdate, setCount] = useState(0);\n\n  const updateUI = () => {\n    setCount((prev) => prev + 1);\n  };\n\n  const state: [number, () => void] = [onUpdate, updateUI];\n  return state;\n};\n","import React from 'react';\nimport {\n  ListItem, List, Divider,\n} from '@material-ui/core';\nimport classes from './ListItems.module.scss';\n\ninterface Props{\n  list: any[];\n}\nexport const ListItems:React.FC<Props> = ({ list }) => (\n  <div className={classes.root}>\n    <List\n      component=\"nav\"\n      aria-label=\"mailbox folders\"\n    >\n      {list.map((item, idx) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <div key={idx}>\n          <ListItem\n            button\n          >\n\n            {Object.values(item).map((val: any, index:number) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <span key={index}>{`${val}`}</span>))}\n          </ListItem>\n          <Divider />\n        </div>\n      ))}\n\n    </List>\n  </div>\n);\n","import React, { useContext } from 'react';\nimport {\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport classes from './Router.module.scss';\nimport { Exams } from '../container/exams/Exams';\nimport { Subjects } from '../container/subjects/Subjects';\nimport { Courses } from '../container/courses/Courses';\nimport { Course } from '../container/course/Course';\nimport { BreadcrumbBar } from '../presentational/breadcrumbs/BreadcrumbBar';\nimport { AddLesson } from '../container/manageCourse/addLesson/AddLesson';\nimport { AddSubject } from '../container/manageCourse/addSubject/AddSubject';\nimport { EditExam } from '../container/manageCourse/editExam/EditExam';\nimport { AddExam } from '../container/manageCourse/addExam/AddExam';\nimport { AddTeacher } from '../container/manageCourse/addTeacher/AddTeacher';\nimport { AddCourse } from '../container/manageCourse/addCourse/AddCourse';\nimport { Lesson } from '../container/lesson/Lesson';\nimport { AppContext } from '../../App';\nimport { UpgradeCourse } from '../container/manageCourse/upgradeCourse/UpgradeCourse';\nimport { Years } from '../container/years/Years';\nimport { Subscriptions } from '../container/subscriptions/Subscriptions';\nimport { Payments } from '../container/payments/Payments';\nimport { Teacher } from '../container/teacher/Teacher';\n\ntype routeConfig = [string, any, string, boolean][]; // route, component, labelName, showInNavPanel\n\nexport const commonRoutes: routeConfig = [\n  ['/teacher/:teacherId', Teacher, 'Teacher', false],\n  ['/teacher/:teacherId/:courseId', Course, 'Teacher', false],\n  ['/:examId/:year/:subjectId/:courseId/:lessonId', Lesson, 'Lesson', false],\n  ['/:examId/:year/:subjectId/:courseId', Course, 'Course', false],\n  ['/:examId/:year/:subjectId', Courses, 'Courses', false],\n  ['/:examId/:year', Subjects, 'Subjects', false],\n  ['/:examId', Years, 'Years', false],\n  ['/', Exams, 'Exams', true],\n];\n\nexport const teacherRoutes: routeConfig = [\n  ['/addLesson', AddLesson, 'Add Lessons', true],\n  ['/profile', Subscriptions, 'Profile', true],\n  ['/upgradeCourses', UpgradeCourse, 'Create Courses', true],\n];\n\nexport const adminRoutes: routeConfig = [\n  ['/editExam', EditExam, 'Edit Exam', true],\n  ['/addExam', AddExam, 'Add Exam', true],\n  ['/addTeacher', AddTeacher, 'Add Teacher', true],\n  ['/addSubject', AddSubject, 'Add Subject', true],\n  ['/addCourse', AddCourse, 'Subject Streams', true],\n  ['/payments', Payments, 'Payments', true],\n];\n\nconst Router: React.FC = () => {\n  const { isTeacher, isAdmin } = useContext(AppContext);\n  return (\n    <>\n      <BreadcrumbBar />\n      <div className={classes.container}>\n        <div>\n          {/* A <Switch> looks through its children <Route>s and\n      renders the first one that matches the current URL. */}\n          <Switch>\n            {(isTeacher) && teacherRoutes.map((r: any) => (\n              <Route\n                exact\n                key={r[0]}\n                path={r[0]}\n                component={r[1]}\n              />\n            ))}\n            {isAdmin() && adminRoutes.map((r: any) => (\n              <Route\n                exact\n                key={r[0]}\n                path={r[0]}\n                component={r[1]}\n              />\n            ))}\n            {isTeacher !== undefined && commonRoutes.map((r: any) => (\n              <Route\n                exact\n                key={r[0]}\n                path={r[0]}\n                component={r[1]}\n              />\n            ))}\n            <Route path=\"\">\n              <div className={classes.loading}>\n                <p>අක්ෂර.lk</p>\n              </div>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Router;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport { examYears } from '../../../data/Config';\nimport { getDocsWithProps } from '../../../data/Store';\nimport { getObject } from '../../../data/StoreHelper';\nimport { ICourse } from '../../../interfaces/ICourse';\nimport { IExam } from '../../../interfaces/IExam';\nimport { ISubject } from '../../../interfaces/ISubject';\nimport { Category } from '../../presentational/category/Category';\nimport { useBreadcrumb } from '../../../hooks/useBreadcrumb';\nimport { ITeacher } from '../../../interfaces/ITeacher';\nimport classes from './Teacher.module.scss';\n\nexport const Teacher = () => {\n  useBreadcrumb();\n  const { teacherId } = useParams<any>();\n  const [courses, setCourses] = useState<ICourse[]>([]);\n  const [subjects, setSubjects] = useState<ISubject[]>([]);\n  const [exams, setExams] = useState<IExam[]>([]);\n  const [teacher, setTeacher] = useState<ITeacher| undefined>(undefined);\n\n  useEffect(() => {\n    getDocsWithProps<ISubject[]>('subjects', {}).then((data) => setSubjects(data));\n    getDocsWithProps<IExam[]>('exams', {}).then((data) => setExams(data));\n    getDocsWithProps<ITeacher[]>('teachers', { shortId: teacherId }).then((data) => {\n      if (data.length > 0) {\n        const teacher = data[0];\n        setTeacher(teacher);\n        getDocsWithProps<ICourse[]>('courses', { ownerEmail: teacher.ownerEmail })\n          .then((data) => setCourses(data));\n      }\n    });\n  }, [teacherId]);\n\n  return (\n    <div className=\"container\">\n      {teacher && (\n      <div className={classes.name}>\n        Courses from\n        {` ${teacher?.name}`}\n      </div>\n      )}\n      {\n                courses.map((c) => {\n                  const subj = getObject(subjects, c.subjectId);\n                  const examTime = getObject(examYears, c.examYear);\n                  const exam = getObject(exams, c.examId);\n                  return (\n                    <Category\n                      key={c.id}\n                      title1={`${subj?.name} [${exam?.type}]`}\n                      title2={`${exam?.name}-${examTime?.name}`}\n                      navURL={`${teacherId}/${c.id}`}\n                      CategoryImg={CategoryIcon}\n                    />\n                  );\n                })\n            }\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/media-has-caption */\nimport { useParams } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport ReactWhatsapp from 'react-whatsapp';\nimport classes from './Lesson.module.scss';\nimport { useBreadcrumb } from '../../../hooks/useBreadcrumb';\nimport { getDocsWithProps, getDocWithId } from '../../../data/Store';\nimport { ILesson } from '../../../interfaces/ILesson';\nimport { ITeacher } from '../../../interfaces/ITeacher';\n\nexport const Lesson: React.FC = () => {\n  useBreadcrumb();\n  const { lessonId } = useParams<any>();\n  const [teacher, setTeacher] = useState<ITeacher | null>(null);\n  const [lesson, setLesson] = useState<ILesson>();\n  // const [vidSrc, setVidSrc] = useState<string | null>(null);\n\n  const processVideo = async () => {\n    const lesson = await getDocWithId<ILesson>('lessons', lessonId);\n\n    if (lesson) {\n      getDocsWithProps<ITeacher[]>('teachers', { ownerEmail: lesson.ownerEmail })\n        .then((data) => data && setTeacher(data[0]));\n      // const url = await getVideo(lesson.ownerEmail, lesson.videoURL);\n      setLesson(lesson);\n      // setVidSrc(url);\n    }\n  };\n\n  useEffect(() => {\n    processVideo();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.topic}>\n        {lesson?.topic}\n      </div>\n\n      {lesson?.videoURL && (\n      <video\n        width=\"100%\"\n        height=\"100%\"\n        controls\n        controlsList=\"nodownload\"\n      >\n        <source\n          src={lesson?.videoURL}\n          type=\"video/mp4\"\n        />\n      </video>\n      )}\n      {teacher && (\n      <div>\n        <ReactWhatsapp\n          number={teacher.phoneChat}\n          message={`[${lesson?.topic}]:`}\n        >\n          <div>Ask Questions</div>\n\n        </ReactWhatsapp>\n      </div>\n      )}\n      <div className={classes.desc}>\n        {lesson?.description}\n      </div>\n      <div className={classes.attachments}>\n        {lesson?.attachments?.map((atta) => (\n          <li>\n            <a\n              href={atta}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {atta}\n            </a>\n          </li>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport { Category } from '../../presentational/category/Category';\nimport { getObject } from '../../../data/StoreHelper';\nimport { useBreadcrumb } from '../../../hooks/useBreadcrumb';\nimport { getDocsWithProps } from '../../../data/Store';\nimport { ICourse } from '../../../interfaces/ICourse';\nimport { ITeacher } from '../../../interfaces/ITeacher';\nimport { IExam } from '../../../interfaces/IExam';\n\nexport const Courses: React.FC = () => {\n  const keyMap = useBreadcrumb();\n\n  const { subjectId, examId, year } = useParams<any>();\n\n  const [courses, setCourses] = useState<ICourse[]>([]);\n  const [teachers, setTeachers] = useState<ITeacher[]>([]);\n  const [exams, setExams] = useState<IExam[]>([]);\n\n  useEffect(() => {\n    getDocsWithProps<ICourse[]>('courses', { subjectId, examId, examYear: year })\n      .then((data) => {\n        setCourses(data);\n        keyMap(data);\n      });\n    getDocsWithProps<ITeacher[]>('teachers', {}).then((data) => {\n      setTeachers(data);\n      keyMap(data);\n    });\n    getDocsWithProps<IExam[]>('exams', {}).then((data) => setExams(data));\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h3>Courses</h3>\n      {courses.map((course) => {\n        const teacher = getObject(teachers, course.ownerEmail);\n        const exam = getObject(exams, course.examId);\n\n        return (\n          <Category\n            key={course.id}\n            CategoryImg={ListAltIcon}\n            title1={teacher?.name}\n            title2={` ${exam?.type} [${exam?.name}]`}\n            navURL={`${subjectId}/${course.id}`}\n          />\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport {\n  Card, CardActionArea, CardContent, Typography,\n} from '@material-ui/core';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport classes from './Subjects.module.scss';\nimport { useBreadcrumb } from '../../../hooks/useBreadcrumb';\nimport { getDocsWithProps, getDocWithId } from '../../../data/Store';\nimport { ISubject } from '../../../interfaces/ISubject';\nimport { IExam } from '../../../interfaces/IExam';\n\nexport const Subjects = () => {\n  const { year, examId } = useParams<any>();\n  const [subjects, setSubjects] = useState<ISubject[]>([]);\n  const keyMap = useBreadcrumb();\n\n  const fetchData = async () => {\n    const exam = await getDocWithId<IExam>('exams', examId);\n    const subjects = await getDocsWithProps<ISubject[]>('subjects', {});\n    const filtered = subjects.filter((sub) => exam?.subjectIds?.includes(sub.id));\n\n    setSubjects(filtered);\n    keyMap(subjects);\n  };\n\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <div className={classes.root}>\n        {\n      subjects.map((subject) => (\n        <Link\n          key={subject.id}\n          to={`${year}/${subject.id}`}\n          style={{ textDecoration: 'none', color: '#5d5d5d' }}\n        >\n          <Card className={classes.card}>\n            <CardActionArea>\n              <CardContent>\n                <Typography\n                  gutterBottom\n                  variant=\"h5\"\n                  component=\"h2\"\n                >\n                  <CategoryIcon />\n                  <span className={classes.sub}>{subject.name}</span>\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </Link>\n      ))\n}\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport { Category } from '../../presentational/category/Category';\nimport { useBreadcrumb } from '../../../hooks/useBreadcrumb';\nimport { examYears } from '../../../data/Config';\n\nexport const Years = () => {\n  const { examId } = useParams<any>();\n  const keyMap = useBreadcrumb();\n  keyMap(examYears);\n\n  return (\n    <div className=\"container\">\n      {examYears?.map((yr) => (\n        <Category\n          key={yr.id}\n          title1={yr.name}\n          CategoryImg={ScheduleIcon}\n          navURL={`${examId}/${yr.id}`}\n        />\n      )\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport SchoolIcon from '@material-ui/icons/School';\nimport { Category } from '../../presentational/category/Category';\nimport { useBreadcrumb } from '../../../hooks/useBreadcrumb';\nimport { getDocsWithProps } from '../../../data/Store';\nimport { IExam } from '../../../interfaces/IExam';\n\nexport const Exams = () => {\n  const [exams, setExams] = useState<IExam[]>([]);\n  const idMap = useBreadcrumb();\n  useEffect(() => {\n    getDocsWithProps<IExam[]>('exams', {}).then((data) => {\n      setExams(data);\n      idMap(data);\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"container\">\n      {exams?.map((ex) => (\n        <Category\n          key={ex.id}\n          title1={`${ex.name}-${ex.type}`}\n          CategoryImg={SchoolIcon}\n          navURL={`${ex.id}`}\n        />\n      )\n      )}\n    </div>\n  );\n};\n","import React, {\n  useState, useEffect, useContext,\n} from 'react';\nimport {\n  TextField, Button, Select, MenuItem, InputLabel, FormControl,\n  RadioGroup, FormControlLabel, Radio, List, ListItem, ListItemText, Divider,\n} from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport SaveIcon from '@material-ui/icons/Save';\nimport classes from './AddLesson.module.scss';\nimport {\n  addDoc, getDocsWithProps, updateDoc, uploadVideo,\n} from '../../../../data/Store';\nimport { getObject } from '../../../../data/StoreHelper';\nimport { AppContext } from '../../../../App';\nimport { ILesson } from '../../../../interfaces/ILesson';\nimport { ICourse } from '../../../../interfaces/ICourse';\nimport { IExam } from '../../../../interfaces/IExam';\nimport { ISubject } from '../../../../interfaces/ISubject';\nimport { useBreadcrumb } from '../../../../hooks/useBreadcrumb';\nimport { useForcedUpdate } from '../../../../hooks/useForcedUpdate';\n\nexport const AddLesson = () => {\n  useBreadcrumb();\n  const [onDataFetch, fetchData] = useForcedUpdate();\n  const { showSnackbar, email } = useContext(AppContext);\n\n  const [uploadTask, setUploadTask] = useState<any>();\n  const [uploadProgress, setUploadProgress] = useState<number>(0);\n\n  const [uploadFile, setUploadFile] = useState<any>(undefined);\n  const [searchText, setSearchText] = useState<string>('');\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const [courseOrderChanged, setCourseOrderChaged] = useState<boolean>(false);\n\n  const [courses, setCourses] = useState<ICourse[]>([]);\n  const [exams, setExams] = useState<IExam[]>([]);\n  const [subjects, setSubjects] = useState<ISubject[]>([]);\n  const [allLessons, setAllLessons] = useState<ILesson[]>([]);\n  // const allLessons = useRef<ILesson[]>([]);\n  const [courseId, setCourseId] = useState<string>('');\n\n  const [courseLessons, setCourseLessons] = useState<ILesson[]>([]);\n  const [unrelatedLessons, setUnrelatedLessons] = useState<ILesson[]>([]);\n\n  // Component state\n  const [isAddNewVideo, setIsAddNewVideo] = useState<boolean>(false);\n  const [editingLesson, setEditingLesson] = useState<ILesson>();\n  const [displayBacklog, setDisplayBacklog] = useState<boolean>(false);\n\n  const [topic, setTopic] = useState<string>('');\n  const [attachments, setAttachments] = useState<string[]>([]);\n  const [description, setDescription] = useState<string>('');\n  const [keywords, setKeywords] = useState<string>('');\n  const [videoURL, setVideoURL] = useState<string>('');\n  const [price, setPrice] = useState<number>(0);\n\n  const addNew = () => {\n    setCourseOrderChaged(false);\n    setIsAddNewVideo(false);\n    setEditMode(false);\n    setUploadProgress(0);\n    setTopic('');\n    setKeywords('');\n    setDescription('');\n    setAttachments([]);\n    setVideoURL('');\n    setPrice(0);\n    setUploadFile(null);\n  };\n\n  const onCourseChange = (_courses: ICourse[], _courseId: string, _allLessons: ILesson[]) => {\n    if (!_courseId || _courseId === '') { return; }\n\n    setCourseId(_courseId);\n\n    const selectedCourse = _courses.filter((c) => c.id === _courseId)[0];\n    const lessons4CourseMap: any = {};\n    const otherLessons = [];\n\n    for (const les of _allLessons) {\n      if (selectedCourse.lessons?.includes(les.id)) {\n        lessons4CourseMap[les.id] = les;\n      } else {\n        otherLessons.push(les);\n      }\n    }\n\n    let orderedLessons: ILesson[] = [];\n    for (const less of selectedCourse.lessons) {\n      const t = (lessons4CourseMap[less]);\n      if (t) {\n        orderedLessons = [...orderedLessons, t];\n      }\n    }\n\n    setCourseLessons(orderedLessons);\n    setUnrelatedLessons(otherLessons.sort((a, b) => b.date - a.date));\n\n    addNew();\n  };\n\n  useEffect(() => {\n    Promise.all([\n      getDocsWithProps<ICourse[]>('courses', { ownerEmail: email }),\n      getDocsWithProps<ILesson[]>('lessons', { ownerEmail: email }),\n    ]).then((values) => {\n      const [courses, lessons] = values;\n\n      // state changes\n      setCourses(courses);\n      setAllLessons(lessons);\n\n      onCourseChange(courses, courseId, lessons);\n    });\n\n    // fetch unrelated data\n    getDocsWithProps<ISubject[]>('subjects', {}).then((data) => setSubjects(data));\n    getDocsWithProps<IExam[]>('exams', {}).then((data) => setExams(data));\n\n    // eslint-disable-next-line\n  }, [onDataFetch]);\n\n  const onFileSelect = (e: any) => {\n    // TODO: Handle if file is not selected from file explorer\n    const file = e.target.files[0];\n    if (file) { setUploadFile(file); }\n  };\n\n  const onCancelUpload = () => {\n    uploadTask?.cancel();\n    addNew();\n  };\n\n  const disabled = uploadProgress > 0 && uploadProgress < 100;\n\n  const onSave = async (videoURL: string) => {\n    if (!email) {\n      showSnackbar('Error with logged in user');\n      return;\n    }\n    if (editMode) {\n      if (!editingLesson) return;\n      // When you make a change here, replicate that on addMode, copyLesson also\n      const less = {\n        ...editingLesson,\n        ...{\n          topic, description, attachments, keywords, videoURL, price,\n        },\n      };\n      updateDoc('lessons', editingLesson.id, less).then(() => {\n        showSnackbar(`${editingLesson.topic} modified successfully`);\n        addNew();\n        fetchData();\n      });\n    // AddMode\n    } else {\n      const selectedCourse = courses.filter((c) => c.id === courseId)[0];\n      // When you make a change here, replicate that on edit, copyLesson mode also\n      const lesson: ILesson = {\n        id: '',\n        date: new Date().getTime(),\n        topic,\n        description,\n        attachments,\n        keywords: `${selectedCourse.examYear}`,\n        videoURL,\n        price,\n        ownerEmail: email,\n      };\n      lesson.id = await addDoc('lessons', lesson);\n      const { lessons } = courses.filter((c) => c.id === courseId)[0];\n\n      await updateDoc('courses', courseId, { lessons: [lesson.id, ...lessons ?? []] });\n      showSnackbar('Lesson Added');\n      addNew();\n      fetchData();\n    }\n  };\n\n  const validateLesson = (): boolean => {\n    if (!topic || topic.length < 5) {\n      showSnackbar('Topic should have minimum length of 5');\n      return false;\n    }\n    if (!description || description.length < 5) {\n      showSnackbar('Description should have minimum length of 5');\n      return false;\n    }\n    return true;\n  };\n\n  const sendVideo = (e: any) => {\n    if (!email) {\n      showSnackbar('Error with the logged in teacher');\n      return;\n    }\n    if (!validateLesson()) {\n      return;\n    }\n\n    if (isAddNewVideo) {\n      if (uploadFile) {\n        const vId = `${new Date().getTime()}`;\n        setUploadProgress(0);\n        const out = uploadVideo(uploadFile, email, vId).subscribe((next) => {\n          setUploadTask(next.uploadTask);\n          if (next.downloadURL) {\n            setVideoURL(next.downloadURL);\n            onSave(next.downloadURL);\n            out.unsubscribe();\n          }\n          if (next.progress < 100) {\n            setUploadProgress(next.progress);\n          }\n        });\n      } else {\n        showSnackbar('Upload video not found');\n      }\n    } else {\n      if (videoURL) {\n        onSave(videoURL);\n      } else {\n        showSnackbar('Upload video not found');\n      }\n    }\n  };\n\n  // copyLessonMode\n  const copyLesson = (les: ILesson) => {\n    setIsAddNewVideo(false);\n    setEditingLesson(les);\n    setTopic(les.topic ?? '');\n    setKeywords(les.keywords ?? '');\n    setDescription(les.description ?? '');\n    setAttachments(les.attachments ?? []);\n    setVideoURL(les.videoURL ?? '');\n    setPrice(les.price ?? 0);\n    // When change here, replicate it in addMode and editModes\n  };\n\n  const changeOrder = (index: number, isUp: boolean) => {\n    const clone = [...courseLessons];\n    const nextIdx = isUp ? index - 1 : index + 1;\n    if (nextIdx < 0 || nextIdx >= courseLessons.length) {\n      return;\n    }\n    const item1 = { ...clone[index] };\n    const item2 = { ...clone[nextIdx] };\n\n    clone[index] = item2;\n    clone[nextIdx] = item1;\n\n    setCourseOrderChaged(true);\n    setCourseLessons(clone);\n  };\n\n  const saveLessonsOrder = () => {\n    const courseLessonIds = courseLessons.map((less) => less.id);\n    updateDoc('courses', courseId, { lessons: courseLessonIds })\n      .then(() => {\n        showSnackbar('Lessons order updated');\n        setCourses((prev) => {\n          const clone = [...prev];\n          const idx = clone.findIndex((c) => c.id === courseId);\n          clone[idx].lessons = courseLessonIds;\n          return clone;\n        });\n        setCourseOrderChaged(false);\n      });\n  };\n\n  if (!email) return <></>;\n\n  return (\n    <>\n      <h3>Manage Lessons</h3>\n      <form\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <div>\n          <FormControl className={classes.input}>\n            <InputLabel id=\"demo-simple-select-label\">Select Course</InputLabel>\n            <Select\n              className={classes.input}\n              labelId=\"label1\"\n              id=\"id1\"\n              value={courseId}\n              disabled={disabled}\n              onChange={(e) => onCourseChange(courses, e.target.value as string, allLessons)}\n            >\n              {courses.map((course) => {\n                const subject = getObject(subjects, course.subjectId);\n                const exam = getObject(exams, course.examId);\n\n                return (\n                  <MenuItem\n                    value={course.id}\n                    key={course.id}\n                  >\n                    {`${course.examYear}-${exam?.name}-${exam?.type}-${subject?.name}`}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n\n          {courseId && (\n          <div>\n            <RadioGroup\n              className={classes.twoColumn}\n              aria-label=\"gender\"\n              name=\"gender1\"\n              value={editMode}\n              onChange={(e: any) => { e.target.value === 'false' && addNew(); }}\n            >\n              <FormControlLabel\n                value={false}\n                control={<Radio />}\n                label=\"Add New Lesson\"\n                disabled={disabled}\n              />\n              <FormControlLabel\n                value\n                control={<Radio />}\n                label=\"Edit lesson\"\n                disabled={disabled}\n              />\n            </RadioGroup>\n\n            <TextField\n              className={classes.input}\n              id=\"standard-basic1\"\n              label=\"Topic\"\n              value={topic}\n              disabled={disabled}\n              onChange={(e) => setTopic(e.target.value)}\n            />\n            <RadioGroup\n              className={classes.twoColumn}\n              aria-label=\"gender\"\n              name=\"gender1\"\n              value={isAddNewVideo}\n              onChange={(e: any) => { setIsAddNewVideo(e.target.value === 'true'); }}\n            >\n              <FormControlLabel\n                value={false}\n                control={<Radio />}\n                label=\"Copy Previous Video\"\n                disabled={disabled}\n              />\n              <FormControlLabel\n                value\n                control={<Radio />}\n                label=\"Upload New Video\"\n                disabled={disabled}\n              />\n            </RadioGroup>\n\n            { !isAddNewVideo && (\n            <div className={classes.backlog}>\n              {allLessons.length > 0 && (\n              <TextField\n                className={classes.input}\n                id=\"filled-basic\"\n                label=\"Search Previous Lessons...\"\n                value={searchText}\n                onChange={(e) => setSearchText(e.target.value)}\n                onBlur={() => setTimeout(() => setDisplayBacklog(false), 400)}\n                onFocus={() => setDisplayBacklog(true)}\n                disabled={disabled}\n              />\n              )}\n              { displayBacklog && (\n              <table className=\"center w100\">\n                <tbody>\n                  {unrelatedLessons.map((les) => {\n                    const search = searchText.toLocaleLowerCase();\n                    if (searchText === ''\n                  || les.topic?.toLowerCase()?.includes(search)\n                   || les.description?.toLowerCase()?.includes(search)) {\n                      return (\n                        <tr\n                          key={les.id}\n                          style={{ cursor: 'pointer' }}\n                          onClick={() => {\n                            setEditMode(false);\n                            copyLesson(les);\n                            setDisplayBacklog(false);\n                          }}\n                        >\n                          <td>{les.date ? new Date(les.date).toDateString() : 'N/A'}</td>\n                          <td>{les.topic}</td>\n                          <td>{les.description}</td>\n                        </tr>\n                      );\n                    }\n                    return null;\n                  })}\n                </tbody>\n              </table>\n              )}\n            </div>\n            )}\n\n            <div className={classes.video}>\n              {isAddNewVideo && (\n              <>\n                {!disabled && (\n                <input\n                  type=\"file\"\n                  id=\"uploader\"\n                  name=\"uploader\"\n                  onChange={onFileSelect}\n                  disabled={disabled}\n                />\n                )}\n                <span>{uploadProgress > 0 && uploadProgress < 100 && `${Math.round(uploadProgress)}%`}</span>\n                {uploadProgress > 0 && uploadProgress < 100 && (\n                <Button\n                  size=\"small\"\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  onClick={onCancelUpload}\n                >\n                  Cancel Upload\n                </Button>\n                )}\n              </>\n              )}\n            </div>\n\n            <TextField\n              className={classes.input}\n              id=\"standard-basic4\"\n              label=\"Video Id\"\n              disabled\n              value={videoURL}\n              onChange={(e) => setVideoURL(e.target.value)}\n            />\n\n            <TextField\n              className={classes.input}\n              id=\"filled-basic5\"\n              label=\"Description\"\n              value={description}\n              disabled={disabled}\n              onChange={(e) => setDescription(e.target.value)}\n            />\n\n            <TextField\n              className={classes.inputMulti}\n              id=\"standard-multiline-static\"\n              label=\"Upload tutorials to GoogleDrive and paste the link here(*Add each of them in a new line)\"\n              multiline\n              rows={3}\n              variant=\"outlined\"\n              value={attachments.reduce((a, b) => (a !== '' ? `${a}\\n${b}` : `${b}`), '')}\n              onChange={(e) => {\n                console.log(e.target.value);\n                setAttachments(e.target.value.split('\\n'));\n              }}\n            />\n\n            <TextField\n              className={classes.input}\n              id=\"filled-basic6\"\n              type=\"number\"\n              label=\"Price\"\n              value={price}\n              disabled={disabled}\n              onChange={(e) => setPrice(Number(e.target.value))}\n            />\n\n            {uploadProgress === 0 && (\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={disabled}\n              onClick={sendVideo}\n            >\n              {editMode ? 'Save Changes' : 'Add New Lesson'}\n            </Button>\n            )}\n          </div>\n          )}\n        </div>\n\n        <div>\n          <List\n            component=\"nav\"\n            aria-label=\"main mailbox folders\"\n          >\n            {courseOrderChanged && (\n            <ListItem\n              button\n              onClick={saveLessonsOrder}\n              className={classes.saveOrder}\n            >\n              <ListItemText\n                primary=\"Save order\"\n              />\n              <SaveIcon />\n            </ListItem>\n            )}\n            {\n              !disabled && courseLessons.map((lesson, index) => (\n                <div\n                // c.id becomes undefined for newly added lesson since we refer that from local\n                  key={lesson.date}\n                >\n                  <ListItem\n                    button\n                    onClick={() => { setEditMode(true); copyLesson(lesson); }}\n                  >\n                    <div style={{ fontSize: '11px', width: '100%' }}>\n                      {lesson.topic}\n                    </div>\n                    {/* primary={`${lesson.topic}`}\n                      style={{ fontSize: '11px' }}\n                    /> */}\n                    {index > 0 && (\n                    <ArrowUpwardIcon onClick={(e) => {\n                      changeOrder(index, true); e.stopPropagation();\n                    }}\n                    />\n                    )}\n                    {index < courseLessons.length - 1 && (\n                    <ArrowDownwardIcon\n                      onClick={(e) => { changeOrder(index, false); e.stopPropagation(); }}\n                    />\n                    )}\n                  </ListItem>\n                  <Divider />\n                </div>\n              ))\n            }\n\n          </List>\n        </div>\n      </form>\n\n    </>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../../../App';\nimport { getDocsWithProps, getDocWithId } from '../../../data/Store';\nimport { useBreadcrumb } from '../../../hooks/useBreadcrumb';\nimport { ILesson } from '../../../interfaces/ILesson';\nimport { ITeacher } from '../../../interfaces/ITeacher';\nimport { IUser } from '../../../interfaces/IUser';\n\nexport const Subscriptions = () => {\n  useBreadcrumb();\n  const { email } = useContext(AppContext);\n  const [lessons, setLessons] = useState<ILesson[]>([]);\n  const [teacher, setTeacher] = useState<ITeacher>();\n  const [subCount, setSubCount] = useState<number[]>([]);\n\n  const setSubs = (idx:number, lessonId: string) => {\n    getDocsWithProps<IUser[]>('users', { lessons: [lessonId] }).then((data) => {\n      setSubCount((prev) => {\n        const clone = [...prev];\n        clone[idx] = data.length;\n        return clone;\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (email) {\n      getDocWithId<ITeacher>('teachers', email).then((data) => data && setTeacher(data));\n      getDocsWithProps<ILesson[]>('lessons', { email, 'price>': 0 }).then((data) => {\n        setLessons(data);\n        setSubCount(new Array(data.length));\n\n        data.forEach((les, idx) => {\n          setSubs(idx, les.id);\n        });\n      });\n    }\n  }, [email]);\n\n  let totalSub = 0;\n  let totalAmount = 0;\n  return (\n    <>\n      {teacher && (\n      <div>\n        <span style={{ marginRight: '5px' }}>Profile url:</span>\n        <a\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          href={`teacher/${teacher.shortId}`}\n        >\n          akshara.lk/teacher/\n          {teacher.shortId}\n        </a>\n      </div>\n      )}\n\n      <h2>Subscriptions</h2>\n      <table className=\"center w100\">\n\n        <tbody>\n          { lessons.map((l, idx) => {\n            const count = subCount[idx] ?? 0;\n            totalSub += count ?? 0;\n            totalAmount += count * l.price;\n            return (\n              <tr key={l.id}>\n                <td>{l.topic}</td>\n                <td>{l.description}</td>\n                <td>{l.price}</td>\n                <td>{subCount[idx]}</td>\n                <td className=\"right\">{subCount[idx] && subCount[idx] * l.price}</td>\n              </tr>\n            );\n          }) }\n          <tr>\n            <td />\n            <td />\n            <td className=\"right\"><b>Total :</b></td>\n            <td><b>{totalSub}</b></td>\n            <td className=\"right\"><b>{ totalAmount && totalAmount }</b></td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport classes from '../ManageCourse.module.scss';\nimport { addDoc, getDocsWithProps } from '../../../../data/Store';\nimport { AppContext } from '../../../../App';\nimport { IExam } from '../../../../interfaces/IExam';\nimport { ITeacher } from '../../../../interfaces/ITeacher';\nimport { ISubject } from '../../../../interfaces/ISubject';\nimport { ICourse } from '../../../../interfaces/ICourse';\nimport { examYears } from '../../../../data/Config';\nimport { getObject } from '../../../../data/StoreHelper';\nimport { useBreadcrumb } from '../../../../hooks/useBreadcrumb';\nimport { IStream } from '../../../../interfaces/IStream';\n\nexport const UpgradeCourse = () => {\n  useBreadcrumb();\n  const { showSnackbar, email } = useContext(AppContext);\n  const [exams, setExams] = useState<IExam[]>([]);\n  const [subjects, setSubjects] = useState<ISubject[]>([]);\n  const [courses, setCourses] = useState<ICourse[]>([]);\n  const [streams, setStreams] = useState<IStream[]>([]);\n\n  useEffect(() => {\n    getDocsWithProps<ITeacher[]>('teachers', { ownerEmail: email }).then((data) => {\n      if (data.length > 0) {\n        const teacher = data[0];\n        getDocsWithProps<ICourse[]>('courses', { ownerEmail: teacher.id }).then((data) => setCourses(data));\n        getDocsWithProps<IStream[]>('streams',\n          { ownerEmail: teacher.id }).then((data) => setStreams(data));\n      }\n    });\n\n    getDocsWithProps<IExam[]>('exams', {}).then((data) => setExams(data));\n    getDocsWithProps<ISubject[]>('subjects', {}).then((data) => setSubjects(data));\n  }, [email]);\n\n  const createCourse = (course: IStream, year: string) => {\n    const newCourse: ICourse = {\n      id: '',\n      lessons: [],\n      examId: course.examId,\n      examYear: year,\n      subjectId: course.subjectId,\n      ownerEmail: course.ownerEmail,\n    };\n    addDoc('courses', newCourse).then(() => {\n      setCourses((prev) => {\n        const clone = [...prev, newCourse];\n        return clone;\n      });\n      showSnackbar(`New course created: ${newCourse.examYear}`);\n    });\n  };\n\n  return (\n    <>\n      <h3>Create Courses</h3>\n      <form\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n      >\n        {\n          streams.map((stream) => examYears.map((year) => {\n            const crsForYr = courses.findIndex((c) => c.subjectId === stream.subjectId\n               && c.examYear === year.id && c.ownerEmail === stream.ownerEmail && c.examId === stream.examId);\n\n            const exam = getObject(exams, stream.examId);\n\n            const courseString = `${exam?.name}-\n                ${getObject(subjects, stream.subjectId)?.name}-${year.name}-${exam?.type}`;\n\n            if (crsForYr >= 0) {\n              return <div key={courseString}>{courseString}</div>;\n            }\n\n            return (\n              <div key={courseString}>\n                {courseString}\n                <Button onClick={() => createCourse(stream, year.id)}>Create</Button>\n              </div>\n            );\n          }))\n        }\n      </form>\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  Button, Select, MenuItem, InputLabel, FormControl, FormControlLabel, Checkbox,\n} from '@material-ui/core';\nimport classes from '../ManageCourse.module.scss';\nimport { getDocsWithProps, updateDoc } from '../../../../data/Store';\nimport { getObject } from '../../../../data/StoreHelper';\nimport { AppContext } from '../../../../App';\nimport { IExam } from '../../../../interfaces/IExam';\nimport { ISubject } from '../../../../interfaces/ISubject';\nimport { useBreadcrumb } from '../../../../hooks/useBreadcrumb';\n\nexport const EditExam = () => {\n  useBreadcrumb();\n  const { showSnackbar } = useContext(AppContext);\n  const [exams, setExams] = useState<IExam[]>([]);\n  const [subjects, setSubjects] = useState<ISubject[]>([]);\n  const [selectedExamIdx, setSelectedExamIdx] = useState<number>(-1);\n\n  useEffect(() => {\n    getDocsWithProps<IExam[]>('exams', {}).then((data) => setExams(data));\n    getDocsWithProps<ISubject[]>('subjects', {}).then((data) => setSubjects(data));\n  }, []);\n\n  const onSelectedExamChange = (e: any) => {\n    setSelectedExamIdx(e.target.value);\n  };\n\n  const setSubjectIds = (subjIds: string[]) => {\n    setExams((prev) => {\n      const next = [...prev];\n      next[selectedExamIdx].subjectIds = subjIds;\n      return next;\n    });\n  };\n\n  const onSubjectChange = (e: any) => {\n    const { id: subjectId, checked } = e.target;\n    const subjecList = exams[selectedExamIdx].subjectIds ?? [];\n    const exists = subjecList.findIndex((id) => id === subjectId);\n\n    if (checked) {\n      if (exists === -1) {\n        setSubjectIds([subjectId, ...subjecList]);\n      }\n    } else if (exists >= 0) {\n      subjecList.splice(exists, 1);\n      setSubjectIds(subjecList);\n    }\n  };\n\n  const onSave = () => {\n    updateDoc('exams', exams[selectedExamIdx].id, { subjectIds: exams[selectedExamIdx].subjectIds })\n      .then(() => showSnackbar('Exam is updated'));\n  };\n\n  const disabled = selectedExamIdx < 0;\n\n  return (\n    <>\n      <h3>Edit Exam</h3>\n      <form\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <FormControl className={classes.input}>\n          <InputLabel id=\"demo-simple-select-label\">Select Exam</InputLabel>\n          <Select\n            className={classes.input}\n            labelId=\"label1\"\n            id=\"id1\"\n            value={selectedExamIdx >= 0 ? selectedExamIdx : ''}\n            onChange={onSelectedExamChange}\n          >\n            {exams?.map((exam, idx) => (\n              <MenuItem\n                value={idx}\n                key={exam.id}\n              >\n                {`${exam.name} ${exam.type}`}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <div className={classes.twoColumn}>\n          {selectedExamIdx !== -1 && subjects?.map((subject) => (\n            <FormControlLabel\n              key={subject.id}\n              control={(\n                <Checkbox\n                  id={subject.id}\n                  checked={(exams[selectedExamIdx].subjectIds ?? [])?.includes(subject.id)}\n                  onChange={onSubjectChange}\n                  name=\"checkedB\"\n                  color=\"primary\"\n                />\n        )}\n              label={getObject(subjects, subject.id)?.name}\n            />\n          ))}\n        </div>\n        <Button\n          variant=\"contained\"\n          onClick={onSave}\n          disabled={disabled}\n        >\n          Save\n        </Button>\n      </form>\n    </>\n  );\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport {\n  TextField, Button,\n} from '@material-ui/core';\nimport classes from '../ManageCourse.module.scss';\nimport { addDoc, getDocsWithProps } from '../../../../data/Store';\nimport { AppContext } from '../../../../App';\nimport { IExam } from '../../../../interfaces/IExam';\nimport { useBreadcrumb } from '../../../../hooks/useBreadcrumb';\nimport { ListItems } from '../../../presentational/ListItems/ListItemsComponent';\n\nexport const AddExam = () => {\n  useBreadcrumb();\n  const [exam, setExam] = useState<IExam>();\n  const [exams, setExams] = useState<IExam[]>([]);\n  const { showSnackbar } = useContext(AppContext);\n\n  const setExamProps = (obj: any) => {\n    setExam((prev) => {\n      const newObj = { ...prev, ...obj };\n      return newObj;\n    });\n  };\n\n  useEffect(() => {\n    getDocsWithProps<IExam[]>('exams', {}).then((data) => data && setExams(data));\n  }, []);\n\n  const onSave = () => {\n    addDoc('exams', exam).then(() => showSnackbar('Exam added'));\n  };\n\n  return (\n    <>\n      <h3>Add Exam</h3>\n      <form\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <TextField\n          className={classes.input}\n          id=\"subjectName\"\n          label=\"Exam Name\"\n          onChange={(e) => setExamProps({ name: e.target.value })}\n        />\n\n        <TextField\n          className={classes.input}\n          id=\"subjectName\"\n          label=\"Type Theory/Revision\"\n          onChange={(e) => setExamProps({ type: e.target.value })}\n        />\n\n        <Button\n          variant=\"contained\"\n          onClick={onSave}\n        >\n          Add\n        </Button>\n\n        <ListItems list={exams} />\n      </form>\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  TextField, Button,\n} from '@material-ui/core';\nimport { addDocWithId, getDocsWithProps } from '../../../../data/Store';\nimport { ListItems } from '../../../presentational/ListItems/ListItemsComponent';\nimport { AppContext } from '../../../../App';\nimport { useForcedUpdate } from '../../../../hooks/useForcedUpdate';\nimport { ITeacher } from '../../../../interfaces/ITeacher';\nimport { useBreadcrumb } from '../../../../hooks/useBreadcrumb';\nimport classes from './AddTeacher.module.scss';\n\nexport const AddTeacher = () => {\n  useBreadcrumb();\n  const [onUpdate, updateUI] = useForcedUpdate();\n  const { showSnackbar } = useContext(AppContext);\n  const [teacher, setTeacher] = useState<ITeacher>();\n  const [teachers, setTeachers] = useState<ITeacher[]>([]);\n\n  useEffect(() => {\n    // display existing teachers\n    getDocsWithProps<ITeacher[]>('teachers', {}).then((data) => setTeachers(data));\n  }, [onUpdate]);\n\n  const setTeacherProps = (obj: any) => {\n    setTeacher((prev) => {\n      const newObj = { ...prev, ...obj };\n      return newObj;\n    });\n  };\n\n  const onSave = async () => {\n    const teachers = await getDocsWithProps<ITeacher[]>('teachers', {});\n    if (teacher) {\n      teacher.shortId = `${teachers.length + 1}`;\n      addDocWithId<Omit<ITeacher, 'id'>>('teachers', teacher.ownerEmail, teacher).then(() => {\n        showSnackbar('New teacher added');\n        updateUI();\n      });\n    } else {\n      console.log('Teacher not set');\n    }\n  };\n\n  return (\n    <>\n      <h3>Add Teacher</h3>\n      <form\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n      >\n\n        <TextField\n          className={classes.input}\n          id=\"teacherName\"\n          label=\"Teacher Name\"\n          onChange={(e) => setTeacherProps({ name: e.target.value })}\n        />\n\n        <TextField\n          className={classes.input}\n          id=\"email\"\n          label=\"Email Address\"\n          onChange={(e) => setTeacherProps({ ownerEmail: e.target.value })}\n        />\n\n        <TextField\n          className={classes.input}\n          id=\"phone\"\n          label=\"Phone\"\n          onChange={(e) => setTeacherProps({ phone: e.target.value })}\n        />\n\n        <TextField\n          className={classes.input}\n          id=\"phoneChat\"\n          label=\"+9477.... Phone Chat\"\n          onChange={(e) => setTeacherProps({ phoneChat: e.target.value })}\n        />\n\n        <Button\n          variant=\"contained\"\n          onClick={onSave}\n        >\n          Add\n        </Button>\n\n      </form>\n      <ListItems list={teachers} />\n    </>\n  );\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport {\n  TextField, Button,\n} from '@material-ui/core';\nimport classes from '../ManageCourse.module.scss';\nimport { addDoc, getDocsWithProps } from '../../../../data/Store';\nimport { AppContext } from '../../../../App';\nimport { ListItems } from '../../../presentational/ListItems/ListItemsComponent';\nimport { useForcedUpdate } from '../../../../hooks/useForcedUpdate';\nimport { ISubject } from '../../../../interfaces/ISubject';\nimport { useBreadcrumb } from '../../../../hooks/useBreadcrumb';\n\nexport const AddSubject = () => {\n  useBreadcrumb();\n  const [onUpdate, updateUI] = useForcedUpdate();\n  const { showSnackbar } = useContext(AppContext);\n  const [subject, setSubject] = useState<ISubject>();\n  const [subjects, setSubjects] = useState<ISubject[]>([]);\n\n  const setSubjectProps = (obj: any) => {\n    setSubject((prev) => {\n      const newObj = { ...prev, ...obj };\n      return newObj;\n    });\n  };\n\n  useEffect(() => {\n    getDocsWithProps<ISubject[]>('subjects', {}).then((data) => setSubjects(data));\n    // eslint-disable-next-line\n  },[onUpdate])\n\n  const onSave = () => {\n    addDoc('subjects', subject).then(() => {\n      showSnackbar('Subject added');\n      updateUI();\n    });\n  };\n\n  const disabled: boolean = (subject?.name.length ?? 0) < 2;\n\n  return (\n    <>\n      <h3>Add Subject</h3>\n      <form\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n      >\n\n        <TextField\n          className={classes.input}\n          id=\"subjectName\"\n          label=\"Subject Name\"\n          onChange={(e) => setSubjectProps({ name: e.target.value })}\n        />\n\n        <Button\n          variant=\"contained\"\n          onClick={onSave}\n          disabled={disabled}\n        >\n          Add\n        </Button>\n      </form>\n      <ListItems list={subjects} />\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  Button, Select, MenuItem, InputLabel, FormControl,\n} from '@material-ui/core';\nimport classes from '../ManageCourse.module.scss';\nimport { addDoc, getDocsWithProps } from '../../../../data/Store';\nimport { AppContext } from '../../../../App';\nimport { ITeacher } from '../../../../interfaces/ITeacher';\nimport { ISubject } from '../../../../interfaces/ISubject';\nimport { useBreadcrumb } from '../../../../hooks/useBreadcrumb';\nimport { IExam } from '../../../../interfaces/IExam';\nimport { IStream } from '../../../../interfaces/IStream';\nimport { ListItems } from '../../../presentational/ListItems/ListItemsComponent';\nimport { getObject } from '../../../../data/StoreHelper';\n\nexport const AddCourse = () => {\n  useBreadcrumb();\n  const { showSnackbar } = useContext(AppContext);\n  const [teachers, setTeachers] = useState<ITeacher[]>([]);\n  const [subjects, setSubjects] = useState<ISubject[]>([]);\n  const [exams, setExams] = useState<IExam[]>([]);\n  const [streams, setStreams] = useState<IStream[]>([]);\n\n  const [ownerEmail, setOwnerEmail] = useState('');\n  const [subjectId, setSubjectId] = useState('');\n  const [examId, setExamId] = useState('');\n\n  useEffect(() => {\n    getDocsWithProps<ITeacher[]>('teachers', {}).then((data) => setTeachers(data));\n    getDocsWithProps<ISubject[]>('subjects', {}).then((data) => setSubjects(data));\n    getDocsWithProps<IExam[]>('exams', {}).then((data) => setExams(data));\n  }, []);\n\n  useEffect(() => {\n    getDocsWithProps<IStream[]>('streams', {}).then((data) => setStreams(data));\n  }, [streams]);\n\n  const disabled = !examId || !subjectId || !ownerEmail;\n\n  const onSave = () => {\n    const idx = streams.findIndex((str) => str.examId === examId\n     && str.subjectId === subjectId && str.ownerEmail === ownerEmail);\n    if (idx >= 0) {\n      showSnackbar('Course already added for teacher');\n      return;\n    }\n    addDoc<Omit<IStream, 'id'>>('streams', {\n      examId,\n      subjectId,\n      ownerEmail,\n    }).then(() => {\n      setStreams([]);\n      showSnackbar('Course added for teacher');\n    });\n  };\n\n  return (\n    <>\n      <h3>Add Stream for Teacher</h3>\n      <form\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <FormControl className={classes.input}>\n          <InputLabel id=\"select-teacher\">Select Teacher</InputLabel>\n          <Select\n            className={classes.input}\n            labelId=\"label1\"\n            id=\"id1\"\n            value={ownerEmail}\n            onChange={(e: any) => {\n              setOwnerEmail(e.target.value);\n            }}\n          >\n            {teachers.map((t) => (\n              <MenuItem\n                value={t.ownerEmail}\n                key={t.ownerEmail}\n              >\n                {`${t.name}`}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl className={classes.input}>\n          <InputLabel id=\"select-subject\">Select Subject</InputLabel>\n          <Select\n            className={classes.input}\n            labelId=\"label1\"\n            id=\"id1\"\n            value={subjectId}\n            onChange={(e: any) => setSubjectId(e.target.value)}\n          >\n            {subjects.map((t) => (\n              <MenuItem\n                value={t.id}\n                key={t.id}\n              >\n                {`${t.name}`}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl className={classes.input}>\n          <InputLabel id=\"select-exam\">Select Exam</InputLabel>\n          <Select\n            className={classes.input}\n            labelId=\"label1\"\n            id=\"id1\"\n            value={examId}\n            onChange={(e: any) => setExamId(e.target.value)}\n          >\n            {exams.map((t) => (\n              <MenuItem\n                value={t.id}\n                key={t.id}\n              >\n                {`${t.name}-${t.type}`}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <Button\n          variant=\"contained\"\n          onClick={onSave}\n          disabled={disabled}\n        >\n          Add\n        </Button>\n      </form>\n\n      <ListItems list={streams.map((str) => {\n        const exam = getObject(exams, str.examId);\n        const next = {\n          teacher: getObject(teachers, str.ownerEmail)?.name,\n          exam: exam?.name,\n          type: exam?.type,\n          subject: getObject(subjects, str.subjectId)?.name,\n        };\n        return next;\n      })}\n      />\n    </>\n  );\n};\n","import React from 'react';\n\nexport const Payments = () => {\n  const t = 0;\n  console.log('Not implemented ', t);\n  return <h2>Payments </h2>;\n};\n","import React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/BorderClear';\nimport MailIcon from '@material-ui/icons/BlurOn';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../../../App';\nimport { adminRoutes, teacherRoutes, commonRoutes } from '../../router/Router';\n\ninterface NavLink{\n  label: string;\n  url: string;\n}\n\nconst commonLinks: NavLink[] = commonRoutes.filter((r) => r[3]).map((r) => ({ url: r[0], label: r[2] }));\n\nconst teacherLinks: NavLink[] = teacherRoutes.filter((r) => r[3]).map((r) => ({ url: r[0], label: r[2] }));\n\nconst adminLinks: NavLink[] = adminRoutes.filter((r) => r[3]).map((r) => ({ url: r[0], label: r[2] }));\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n    textDecoration: 'none',\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport const NavPanel = () => {\n  const classes = useStyles();\n  const [show, setShow] = React.useState(false);\n  const { isTeacher, isAdmin } = useContext(AppContext);\n\n  const toggleDrawer = (open: any) => (event: any) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setShow(open);\n  };\n\n  const linkSegment = (links: NavLink[]) => (\n    <List>\n      {links.map((item, index) => (\n        <Link\n          to={item.url}\n          key={item.label}\n          style={{ textDecoration: 'none', color: '#5d5d5d' }}\n        >\n          <ListItem button>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={item.label} />\n          </ListItem>\n        </Link>\n      ))}\n    </List>\n  );\n\n  const list = () => (\n    <div\n      className={clsx(classes.list)}\n      role=\"presentation\"\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      {linkSegment(commonLinks)}\n      <Divider />\n      {(isTeacher) && linkSegment(teacherLinks)}\n      <Divider />\n      {isAdmin() && linkSegment(adminLinks)}\n    </div>\n  );\n\n  return (\n    <div>\n      <>\n        <Button onClick={toggleDrawer(true)}>\n          <MenuIcon htmlColor=\"white\" />\n        </Button>\n\n        <Drawer\n          anchor=\"left\"\n          open={show}\n          onClose={toggleDrawer(false)}\n        >\n          {list()}\n\n          <a\n            href=\"mailto: contact.akshara.lk@gmail.com\"\n            style={{ fontSize: '11px', textAlign: 'center', margin: '5px' }}\n          >\n            contact.akshara.lk@gmail.com\n          </a>\n        </Drawer>\n      </>\n    </div>\n  );\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport {\n  AppBar, Toolbar, Typography, Button,\n} from '@material-ui/core';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport classes from './Header.module.scss';\nimport { NavPanel } from '../../presentational/navPanel/NavPanel';\nimport { AppContext } from '../../../App';\nimport { getDocsWithProps } from '../../../data/Store';\nimport { ITeacher } from '../../../interfaces/ITeacher';\nimport { Util } from '../../../helper/util';\n\nexport const Header:React.FC = () => {\n  const [user, setUser] = useState <{name: '', photo: ''} | null>(null);\n  const { setEmail, setIsTeacher } = useContext(AppContext);\n\n  const setUserDetails = (result: any) => {\n    let email;\n    if (result.user) {\n      email = result.user.email;\n    } else {\n      email = result.email;\n    }\n    setEmail(email);\n    setUser({\n      name: result.displayName,\n      photo: result.photoURL,\n    });\n\n    getDocsWithProps<ITeacher[]>('teachers', { ownerEmail: email }).then((data) => {\n      if (data.length > 0) {\n        setIsTeacher(true);\n      } else {\n        setIsTeacher(false);\n      }\n    });\n  };\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((u: any) => {\n      if (u) {\n        setUserDetails(u);\n      } else {\n        setEmail(null);\n        setIsTeacher(false);\n      }\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  const handleLogin = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then((result:any) => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      // const token = result.credential.accessToken;\n      // const user2 = result.user;\n      setUserDetails(result);\n\n      // setName(user.displayName);\n      // ...\n    }).catch((error) => {\n      // // Handle Errors here.\n      // const errorCode = error.code;\n      // const errorMessage = error.message;\n      // // The email of the user's account used.\n      // const { email } = error;\n      // // The firebase.auth.AuthCredential type that was used.\n      // const { credential } = error;\n      // // ...\n    });\n  };\n\n  Util.invokeLogin = handleLogin;\n\n  const handleLogout = () => {\n    firebase.auth().signOut().then(() => {\n      // Sign-out successful.\n      setEmail(null);\n      setUser(null);\n    }).catch((error) => {\n      // An error happened.\n    });\n  };\n\n  return (\n    <AppBar\n      position=\"static\"\n      color=\"secondary\"\n    >\n      <Toolbar className={classes.container}>\n        <NavPanel />\n        <Typography\n          variant=\"h6\"\n          className={classes.title}\n        >\n          අක්ෂර.lk\n        </Typography>\n        <Button\n          color=\"inherit\"\n          onClick={handleLogin}\n        >\n          {user?.name ? <span className={classes.userName}>{user?.name}</span> : 'Login'}\n        </Button>\n        { user && user.photo && (\n          <img\n            alt={user?.name}\n            src={user?.photo}\n          />\n        )}\n        { user && (\n        <Button\n          color=\"inherit\"\n          onClick={handleLogout}\n        >\n          <PowerSettingsNewIcon style={{ fontSize: 25 }} />\n        </Button>\n        )}\n\n      </Toolbar>\n\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport Snackbar, { SnackbarOrigin } from '@material-ui/core/Snackbar';\n\nexport interface State extends SnackbarOrigin {\n  open: boolean;\n}\ninterface Props {\n  text: string;\n  state: State;\n  handleClose: () => void;\n}\nexport const Snack: React.FC<Props> = ({ text, state, handleClose }) => {\n  const { vertical, horizontal, open } = state;\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        onClose={handleClose}\n        message={text}\n        key={vertical + horizontal}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport classes from './Footer.module.scss';\n\nconst Footer:React.FC = () => <div className={classes.container}>Powered by AMSI @ 2020</div>;\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Header from './components/container/header/Header';\n// import Footer from './components/presentational/footer/Footer';\nimport Router from './components/router/Router';\nimport { Snack, State } from './components/presentational/snackbar/Snack';\nimport { adminEmail } from './data/Config';\nimport Footer from './components/presentational/footer/Footer';\n\nexport interface IContext {\n  email: string | null;\n  isTeacher: boolean | undefined;\n  breadcrumbs?: any[];\n  setIsTeacher: (isTeacher: boolean) => void;\n  setEmail: (email: string|null) => void,\n  updateBreadcrumbs: (bcrumbs: any) => void;\n  showSnackbar:(message: string) => void;\n  isAdmin: () => boolean;\n}\n\nconst initialState = {\n  email: null,\n  isTeacher: false,\n  breadcrumbs: [],\n  setIsTeacher: (isTeacher: boolean) => {},\n  setEmail: (email: string|null) => {},\n  updateBreadcrumbs: (bcrumbs: any) => {},\n  showSnackbar: (message: string) => {},\n  isAdmin: () => false,\n};\nexport const AppContext = React.createContext<IContext>(\n  initialState,\n);\n\nconst App: React.FC = () => {\n  const [breadcrumbs, setBreadcrumbs] = useState<any>([]);\n  const [snackText, setSnackText] = useState<string>('');\n  const [email, setEmail] = useState<string|null>(null);\n  const [isTeacher, setIsTeacher] = useState<boolean | undefined>(undefined); // undefined: fetching initial data inprogress\n\n  const [state, setState] = React.useState<State>({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n  });\n\n  const showSnackbar = (text: string) => {\n    setSnackText(text);\n    setState((prev) => {\n      const next = { ...prev, open: true };\n      return next;\n    });\n  };\n\n  const hideSnackbar = () => {\n    setState((prev) => {\n      const next = { ...prev, open: false };\n      return next;\n    });\n  };\n\n  const updateBreadcrumbs = (obj: any) => {\n    setBreadcrumbs(obj);\n  };\n\n  const isAdmin = () => email === adminEmail;\n\n  return (\n    <BrowserRouter>\n      <AppContext.Provider value={{\n        isTeacher, setIsTeacher, email, breadcrumbs, showSnackbar, setEmail, updateBreadcrumbs, isAdmin,\n      }}\n      >\n        <Snack\n          text={snackText}\n          state={state}\n          handleClose={hideSnackbar}\n        />\n        <Header />\n        <Router />\n        {isTeacher !== undefined && <Footer />}\n      </AppContext.Provider>\n    </BrowserRouter>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AddLesson_root__-G3BE\",\"input\":\"AddLesson_input__1wXPA\",\"inputMulti\":\"AddLesson_inputMulti__2vU6C\",\"saveOrder\":\"AddLesson_saveOrder__3Rq-m\",\"backlog\":\"AddLesson_backlog__35dpO\",\"oneColumn\":\"AddLesson_oneColumn__iPlZs\",\"twoColumn\":\"AddLesson_twoColumn__CgQp0\",\"video\":\"AddLesson_video__17AGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Category_root__22OQo\",\"selected\":\"Category_selected__3xs1B\",\"image\":\"Category_image__3KCc6\",\"content\":\"Category_content__2Ebov\",\"title1\":\"Category_title1__3Ak3Z\",\"iconTitle\":\"Category_iconTitle__1LyBU\",\"actions\":\"Category_actions__1cC3C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AddTeacher_root__149PP\",\"input\":\"AddTeacher_input__38wgQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Lesson_root__1WCBU\",\"topic\":\"Lesson_topic__3uYFm\",\"attachments\":\"Lesson_attachments__I27Si\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__3dgmC\",\"menuButton\":\"Header_menuButton__2RGZ-\",\"title\":\"Header_title__2UnJC\",\"userName\":\"Header_userName__2d5Iv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Subjects_root__2R7E1\",\"card\":\"Subjects_card__3BRyr\",\"sub\":\"Subjects_sub__1uyTC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Router_container__12f3j\",\"loading\":\"Router_loading__3dWKx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"purchase\":\"Course_purchase__2gB-5\",\"box\":\"Course_box__2sofi\"};"],"sourceRoot":""}